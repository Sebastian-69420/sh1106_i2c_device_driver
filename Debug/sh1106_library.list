
sh1106_library.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004508  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000880  080045c8  080045c8  000055c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004e48  08004e48  00006094  2**0
                  CONTENTS
  4 .ARM          00000000  08004e48  08004e48  00006094  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004e48  08004e48  00006094  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004e48  08004e48  00005e48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004e4c  08004e4c  00005e4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000094  20000000  08004e50  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000630  20000094  08004ee4  00006094  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200006c4  08004ee4  000066c4  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00006094  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000816b  00000000  00000000  000060bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001dcd  00000000  00000000  0000e227  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000890  00000000  00000000  0000fff8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_macro  000105a5  00000000  00000000  00010888  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_line   0000b701  00000000  00000000  00020e2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_str    0005beb1  00000000  00000000  0002c52e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .comment      00000043  00000000  00000000  000883df  2**0
                  CONTENTS, READONLY
 19 .debug_rnglists 0000065c  00000000  00000000  00088422  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00002688  00000000  00000000  00088a80  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  0008b108  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000094 	.word	0x20000094
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080045b0 	.word	0x080045b0

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000098 	.word	0x20000098
 8000104:	080045b0 	.word	0x080045b0

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_shi>:
 8000118:	b403      	push	{r0, r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0040      	lsls	r0, r0, #1
 8000120:	0049      	lsls	r1, r1, #1
 8000122:	5e09      	ldrsh	r1, [r1, r0]
 8000124:	0049      	lsls	r1, r1, #1
 8000126:	448e      	add	lr, r1
 8000128:	bc03      	pop	{r0, r1}
 800012a:	4770      	bx	lr

0800012c <__udivsi3>:
 800012c:	2200      	movs	r2, #0
 800012e:	0843      	lsrs	r3, r0, #1
 8000130:	428b      	cmp	r3, r1
 8000132:	d374      	bcc.n	800021e <__udivsi3+0xf2>
 8000134:	0903      	lsrs	r3, r0, #4
 8000136:	428b      	cmp	r3, r1
 8000138:	d35f      	bcc.n	80001fa <__udivsi3+0xce>
 800013a:	0a03      	lsrs	r3, r0, #8
 800013c:	428b      	cmp	r3, r1
 800013e:	d344      	bcc.n	80001ca <__udivsi3+0x9e>
 8000140:	0b03      	lsrs	r3, r0, #12
 8000142:	428b      	cmp	r3, r1
 8000144:	d328      	bcc.n	8000198 <__udivsi3+0x6c>
 8000146:	0c03      	lsrs	r3, r0, #16
 8000148:	428b      	cmp	r3, r1
 800014a:	d30d      	bcc.n	8000168 <__udivsi3+0x3c>
 800014c:	22ff      	movs	r2, #255	@ 0xff
 800014e:	0209      	lsls	r1, r1, #8
 8000150:	ba12      	rev	r2, r2
 8000152:	0c03      	lsrs	r3, r0, #16
 8000154:	428b      	cmp	r3, r1
 8000156:	d302      	bcc.n	800015e <__udivsi3+0x32>
 8000158:	1212      	asrs	r2, r2, #8
 800015a:	0209      	lsls	r1, r1, #8
 800015c:	d065      	beq.n	800022a <__udivsi3+0xfe>
 800015e:	0b03      	lsrs	r3, r0, #12
 8000160:	428b      	cmp	r3, r1
 8000162:	d319      	bcc.n	8000198 <__udivsi3+0x6c>
 8000164:	e000      	b.n	8000168 <__udivsi3+0x3c>
 8000166:	0a09      	lsrs	r1, r1, #8
 8000168:	0bc3      	lsrs	r3, r0, #15
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x46>
 800016e:	03cb      	lsls	r3, r1, #15
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0b83      	lsrs	r3, r0, #14
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x52>
 800017a:	038b      	lsls	r3, r1, #14
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0b43      	lsrs	r3, r0, #13
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x5e>
 8000186:	034b      	lsls	r3, r1, #13
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0b03      	lsrs	r3, r0, #12
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x6a>
 8000192:	030b      	lsls	r3, r1, #12
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0ac3      	lsrs	r3, r0, #11
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x76>
 800019e:	02cb      	lsls	r3, r1, #11
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0a83      	lsrs	r3, r0, #10
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x82>
 80001aa:	028b      	lsls	r3, r1, #10
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	0a43      	lsrs	r3, r0, #9
 80001b2:	428b      	cmp	r3, r1
 80001b4:	d301      	bcc.n	80001ba <__udivsi3+0x8e>
 80001b6:	024b      	lsls	r3, r1, #9
 80001b8:	1ac0      	subs	r0, r0, r3
 80001ba:	4152      	adcs	r2, r2
 80001bc:	0a03      	lsrs	r3, r0, #8
 80001be:	428b      	cmp	r3, r1
 80001c0:	d301      	bcc.n	80001c6 <__udivsi3+0x9a>
 80001c2:	020b      	lsls	r3, r1, #8
 80001c4:	1ac0      	subs	r0, r0, r3
 80001c6:	4152      	adcs	r2, r2
 80001c8:	d2cd      	bcs.n	8000166 <__udivsi3+0x3a>
 80001ca:	09c3      	lsrs	r3, r0, #7
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xa8>
 80001d0:	01cb      	lsls	r3, r1, #7
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0983      	lsrs	r3, r0, #6
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xb4>
 80001dc:	018b      	lsls	r3, r1, #6
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0943      	lsrs	r3, r0, #5
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xc0>
 80001e8:	014b      	lsls	r3, r1, #5
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0903      	lsrs	r3, r0, #4
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xcc>
 80001f4:	010b      	lsls	r3, r1, #4
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	08c3      	lsrs	r3, r0, #3
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xd8>
 8000200:	00cb      	lsls	r3, r1, #3
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	0883      	lsrs	r3, r0, #2
 8000208:	428b      	cmp	r3, r1
 800020a:	d301      	bcc.n	8000210 <__udivsi3+0xe4>
 800020c:	008b      	lsls	r3, r1, #2
 800020e:	1ac0      	subs	r0, r0, r3
 8000210:	4152      	adcs	r2, r2
 8000212:	0843      	lsrs	r3, r0, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d301      	bcc.n	800021c <__udivsi3+0xf0>
 8000218:	004b      	lsls	r3, r1, #1
 800021a:	1ac0      	subs	r0, r0, r3
 800021c:	4152      	adcs	r2, r2
 800021e:	1a41      	subs	r1, r0, r1
 8000220:	d200      	bcs.n	8000224 <__udivsi3+0xf8>
 8000222:	4601      	mov	r1, r0
 8000224:	4152      	adcs	r2, r2
 8000226:	4610      	mov	r0, r2
 8000228:	4770      	bx	lr
 800022a:	e7ff      	b.n	800022c <__udivsi3+0x100>
 800022c:	b501      	push	{r0, lr}
 800022e:	2000      	movs	r0, #0
 8000230:	f000 f806 	bl	8000240 <__aeabi_idiv0>
 8000234:	bd02      	pop	{r1, pc}
 8000236:	46c0      	nop			@ (mov r8, r8)

08000238 <__aeabi_uidivmod>:
 8000238:	2900      	cmp	r1, #0
 800023a:	d0f7      	beq.n	800022c <__udivsi3+0x100>
 800023c:	e776      	b.n	800012c <__udivsi3>
 800023e:	4770      	bx	lr

08000240 <__aeabi_idiv0>:
 8000240:	4770      	bx	lr
 8000242:	46c0      	nop			@ (mov r8, r8)

08000244 <main>:

/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void) {
 8000244:	b580      	push	{r7, lr}
 8000246:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000248:	f000 fd4a 	bl	8000ce0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800024c:	f000 f830 	bl	80002b0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000250:	f000 f8e4 	bl	800041c <MX_GPIO_Init>
  MX_DMA_Init();
 8000254:	f000 f8c4 	bl	80003e0 <MX_DMA_Init>
  MX_I2C1_Init();
 8000258:	f000 f882 	bl	8000360 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */

/* USER CODE BEGIN 2 */
  SH1106_Init(&hi2c1, SH1106_DEV_ADDRESS);
 800025c:	4b12      	ldr	r3, [pc, #72]	@ (80002a8 <main+0x64>)
 800025e:	2178      	movs	r1, #120	@ 0x78
 8000260:	0018      	movs	r0, r3
 8000262:	f000 f919 	bl	8000498 <SH1106_Init>
  SH1106_Display_Clear();
 8000266:	f000 f957 	bl	8000518 <SH1106_Display_Clear>
  SH1106_Display_On();
 800026a:	f000 f941 	bl	80004f0 <SH1106_Display_On>
  HAL_Delay(1);
 800026e:	2001      	movs	r0, #1
 8000270:	f000 fd9a 	bl	8000da8 <HAL_Delay>

  SH1106_Set_Cursor(7, 0);
 8000274:	2100      	movs	r1, #0
 8000276:	2007      	movs	r0, #7
 8000278:	f000 f980 	bl	800057c <SH1106_Set_Cursor>
  SH1106_Display_Text("This text is displayed with automatic line wrapping. This is awesome! I need this text a little longer.");
 800027c:	4b0b      	ldr	r3, [pc, #44]	@ (80002ac <main+0x68>)
 800027e:	0018      	movs	r0, r3
 8000280:	f000 fa68 	bl	8000754 <SH1106_Display_Text>

  SH1106_Set_Pixel(0, 0);
 8000284:	2100      	movs	r1, #0
 8000286:	2000      	movs	r0, #0
 8000288:	f000 fb22 	bl	80008d0 <SH1106_Set_Pixel>
  SH1106_Set_Pixel(127, 0);
 800028c:	2100      	movs	r1, #0
 800028e:	207f      	movs	r0, #127	@ 0x7f
 8000290:	f000 fb1e 	bl	80008d0 <SH1106_Set_Pixel>
  SH1106_Set_Pixel(1, 63);
 8000294:	213f      	movs	r1, #63	@ 0x3f
 8000296:	2001      	movs	r0, #1
 8000298:	f000 fb1a 	bl	80008d0 <SH1106_Set_Pixel>
  SH1106_Set_Pixel(127, 63);
 800029c:	213f      	movs	r1, #63	@ 0x3f
 800029e:	207f      	movs	r0, #127	@ 0x7f
 80002a0:	f000 fb16 	bl	80008d0 <SH1106_Set_Pixel>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while(1) {
 80002a4:	46c0      	nop			@ (mov r8, r8)
 80002a6:	e7fd      	b.n	80002a4 <main+0x60>
 80002a8:	200000b0 	.word	0x200000b0
 80002ac:	080045c8 	.word	0x080045c8

080002b0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80002b0:	b590      	push	{r4, r7, lr}
 80002b2:	b095      	sub	sp, #84	@ 0x54
 80002b4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80002b6:	2420      	movs	r4, #32
 80002b8:	193b      	adds	r3, r7, r4
 80002ba:	0018      	movs	r0, r3
 80002bc:	2330      	movs	r3, #48	@ 0x30
 80002be:	001a      	movs	r2, r3
 80002c0:	2100      	movs	r1, #0
 80002c2:	f003 fa37 	bl	8003734 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80002c6:	2310      	movs	r3, #16
 80002c8:	18fb      	adds	r3, r7, r3
 80002ca:	0018      	movs	r0, r3
 80002cc:	2310      	movs	r3, #16
 80002ce:	001a      	movs	r2, r3
 80002d0:	2100      	movs	r1, #0
 80002d2:	f003 fa2f 	bl	8003734 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 80002d6:	003b      	movs	r3, r7
 80002d8:	0018      	movs	r0, r3
 80002da:	2310      	movs	r3, #16
 80002dc:	001a      	movs	r2, r3
 80002de:	2100      	movs	r1, #0
 80002e0:	f003 fa28 	bl	8003734 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80002e4:	0021      	movs	r1, r4
 80002e6:	187b      	adds	r3, r7, r1
 80002e8:	2202      	movs	r2, #2
 80002ea:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80002ec:	187b      	adds	r3, r7, r1
 80002ee:	2201      	movs	r2, #1
 80002f0:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80002f2:	187b      	adds	r3, r7, r1
 80002f4:	2210      	movs	r2, #16
 80002f6:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80002f8:	187b      	adds	r3, r7, r1
 80002fa:	2200      	movs	r2, #0
 80002fc:	621a      	str	r2, [r3, #32]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80002fe:	187b      	adds	r3, r7, r1
 8000300:	0018      	movs	r0, r3
 8000302:	f002 fbfb 	bl	8002afc <HAL_RCC_OscConfig>
 8000306:	1e03      	subs	r3, r0, #0
 8000308:	d001      	beq.n	800030e <SystemClock_Config+0x5e>
  {
    Error_Handler();
 800030a:	f000 f89f 	bl	800044c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800030e:	2110      	movs	r1, #16
 8000310:	187b      	adds	r3, r7, r1
 8000312:	2207      	movs	r2, #7
 8000314:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8000316:	187b      	adds	r3, r7, r1
 8000318:	2200      	movs	r2, #0
 800031a:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800031c:	187b      	adds	r3, r7, r1
 800031e:	2200      	movs	r2, #0
 8000320:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000322:	187b      	adds	r3, r7, r1
 8000324:	2200      	movs	r2, #0
 8000326:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8000328:	187b      	adds	r3, r7, r1
 800032a:	2100      	movs	r1, #0
 800032c:	0018      	movs	r0, r3
 800032e:	f002 feff 	bl	8003130 <HAL_RCC_ClockConfig>
 8000332:	1e03      	subs	r3, r0, #0
 8000334:	d001      	beq.n	800033a <SystemClock_Config+0x8a>
  {
    Error_Handler();
 8000336:	f000 f889 	bl	800044c <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 800033a:	003b      	movs	r3, r7
 800033c:	2220      	movs	r2, #32
 800033e:	601a      	str	r2, [r3, #0]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 8000340:	003b      	movs	r3, r7
 8000342:	2200      	movs	r2, #0
 8000344:	60da      	str	r2, [r3, #12]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000346:	003b      	movs	r3, r7
 8000348:	0018      	movs	r0, r3
 800034a:	f003 f815 	bl	8003378 <HAL_RCCEx_PeriphCLKConfig>
 800034e:	1e03      	subs	r3, r0, #0
 8000350:	d001      	beq.n	8000356 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8000352:	f000 f87b 	bl	800044c <Error_Handler>
  }
}
 8000356:	46c0      	nop			@ (mov r8, r8)
 8000358:	46bd      	mov	sp, r7
 800035a:	b015      	add	sp, #84	@ 0x54
 800035c:	bd90      	pop	{r4, r7, pc}
	...

08000360 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000360:	b580      	push	{r7, lr}
 8000362:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000364:	4b1b      	ldr	r3, [pc, #108]	@ (80003d4 <MX_I2C1_Init+0x74>)
 8000366:	4a1c      	ldr	r2, [pc, #112]	@ (80003d8 <MX_I2C1_Init+0x78>)
 8000368:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00201D2B;
 800036a:	4b1a      	ldr	r3, [pc, #104]	@ (80003d4 <MX_I2C1_Init+0x74>)
 800036c:	4a1b      	ldr	r2, [pc, #108]	@ (80003dc <MX_I2C1_Init+0x7c>)
 800036e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8000370:	4b18      	ldr	r3, [pc, #96]	@ (80003d4 <MX_I2C1_Init+0x74>)
 8000372:	2200      	movs	r2, #0
 8000374:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000376:	4b17      	ldr	r3, [pc, #92]	@ (80003d4 <MX_I2C1_Init+0x74>)
 8000378:	2201      	movs	r2, #1
 800037a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800037c:	4b15      	ldr	r3, [pc, #84]	@ (80003d4 <MX_I2C1_Init+0x74>)
 800037e:	2200      	movs	r2, #0
 8000380:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8000382:	4b14      	ldr	r3, [pc, #80]	@ (80003d4 <MX_I2C1_Init+0x74>)
 8000384:	2200      	movs	r2, #0
 8000386:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000388:	4b12      	ldr	r3, [pc, #72]	@ (80003d4 <MX_I2C1_Init+0x74>)
 800038a:	2200      	movs	r2, #0
 800038c:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800038e:	4b11      	ldr	r3, [pc, #68]	@ (80003d4 <MX_I2C1_Init+0x74>)
 8000390:	2200      	movs	r2, #0
 8000392:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000394:	4b0f      	ldr	r3, [pc, #60]	@ (80003d4 <MX_I2C1_Init+0x74>)
 8000396:	2200      	movs	r2, #0
 8000398:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800039a:	4b0e      	ldr	r3, [pc, #56]	@ (80003d4 <MX_I2C1_Init+0x74>)
 800039c:	0018      	movs	r0, r3
 800039e:	f001 f8cd 	bl	800153c <HAL_I2C_Init>
 80003a2:	1e03      	subs	r3, r0, #0
 80003a4:	d001      	beq.n	80003aa <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 80003a6:	f000 f851 	bl	800044c <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 80003aa:	4b0a      	ldr	r3, [pc, #40]	@ (80003d4 <MX_I2C1_Init+0x74>)
 80003ac:	2100      	movs	r1, #0
 80003ae:	0018      	movs	r0, r3
 80003b0:	f002 fb0c 	bl	80029cc <HAL_I2CEx_ConfigAnalogFilter>
 80003b4:	1e03      	subs	r3, r0, #0
 80003b6:	d001      	beq.n	80003bc <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 80003b8:	f000 f848 	bl	800044c <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 80003bc:	4b05      	ldr	r3, [pc, #20]	@ (80003d4 <MX_I2C1_Init+0x74>)
 80003be:	2100      	movs	r1, #0
 80003c0:	0018      	movs	r0, r3
 80003c2:	f002 fb4f 	bl	8002a64 <HAL_I2CEx_ConfigDigitalFilter>
 80003c6:	1e03      	subs	r3, r0, #0
 80003c8:	d001      	beq.n	80003ce <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 80003ca:	f000 f83f 	bl	800044c <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80003ce:	46c0      	nop			@ (mov r8, r8)
 80003d0:	46bd      	mov	sp, r7
 80003d2:	bd80      	pop	{r7, pc}
 80003d4:	200000b0 	.word	0x200000b0
 80003d8:	40005400 	.word	0x40005400
 80003dc:	00201d2b 	.word	0x00201d2b

080003e0 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80003e0:	b580      	push	{r7, lr}
 80003e2:	b082      	sub	sp, #8
 80003e4:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80003e6:	4b0c      	ldr	r3, [pc, #48]	@ (8000418 <MX_DMA_Init+0x38>)
 80003e8:	695a      	ldr	r2, [r3, #20]
 80003ea:	4b0b      	ldr	r3, [pc, #44]	@ (8000418 <MX_DMA_Init+0x38>)
 80003ec:	2101      	movs	r1, #1
 80003ee:	430a      	orrs	r2, r1
 80003f0:	615a      	str	r2, [r3, #20]
 80003f2:	4b09      	ldr	r3, [pc, #36]	@ (8000418 <MX_DMA_Init+0x38>)
 80003f4:	695b      	ldr	r3, [r3, #20]
 80003f6:	2201      	movs	r2, #1
 80003f8:	4013      	ands	r3, r2
 80003fa:	607b      	str	r3, [r7, #4]
 80003fc:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Channel2_3_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 80003fe:	2200      	movs	r2, #0
 8000400:	2100      	movs	r1, #0
 8000402:	200a      	movs	r0, #10
 8000404:	f000 fda0 	bl	8000f48 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 8000408:	200a      	movs	r0, #10
 800040a:	f000 fdb2 	bl	8000f72 <HAL_NVIC_EnableIRQ>

}
 800040e:	46c0      	nop			@ (mov r8, r8)
 8000410:	46bd      	mov	sp, r7
 8000412:	b002      	add	sp, #8
 8000414:	bd80      	pop	{r7, pc}
 8000416:	46c0      	nop			@ (mov r8, r8)
 8000418:	40021000 	.word	0x40021000

0800041c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800041c:	b580      	push	{r7, lr}
 800041e:	b082      	sub	sp, #8
 8000420:	af00      	add	r7, sp, #0
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000422:	4b09      	ldr	r3, [pc, #36]	@ (8000448 <MX_GPIO_Init+0x2c>)
 8000424:	695a      	ldr	r2, [r3, #20]
 8000426:	4b08      	ldr	r3, [pc, #32]	@ (8000448 <MX_GPIO_Init+0x2c>)
 8000428:	2180      	movs	r1, #128	@ 0x80
 800042a:	02c9      	lsls	r1, r1, #11
 800042c:	430a      	orrs	r2, r1
 800042e:	615a      	str	r2, [r3, #20]
 8000430:	4b05      	ldr	r3, [pc, #20]	@ (8000448 <MX_GPIO_Init+0x2c>)
 8000432:	695a      	ldr	r2, [r3, #20]
 8000434:	2380      	movs	r3, #128	@ 0x80
 8000436:	02db      	lsls	r3, r3, #11
 8000438:	4013      	ands	r3, r2
 800043a:	607b      	str	r3, [r7, #4]
 800043c:	687b      	ldr	r3, [r7, #4]

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800043e:	46c0      	nop			@ (mov r8, r8)
 8000440:	46bd      	mov	sp, r7
 8000442:	b002      	add	sp, #8
 8000444:	bd80      	pop	{r7, pc}
 8000446:	46c0      	nop			@ (mov r8, r8)
 8000448:	40021000 	.word	0x40021000

0800044c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800044c:	b580      	push	{r7, lr}
 800044e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000450:	b672      	cpsid	i
}
 8000452:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
/* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while(1) {
 8000454:	46c0      	nop			@ (mov r8, r8)
 8000456:	e7fd      	b.n	8000454 <Error_Handler+0x8>

08000458 <SH1106_CALL_HAL_I2C_Transmit>:
  * @brief This function replaces the HAL_I2C function for easier handling of the i2c pointer and the device address.
  * @param *pData:        pointer to byte array
  * @param size:          size of pData
  * Qparam timeout:       timeout in ms
  */
void SH1106_CALL_HAL_I2C_Transmit(uint8_t *pData, uint16_t size, uint32_t timeout) {
 8000458:	b5b0      	push	{r4, r5, r7, lr}
 800045a:	b086      	sub	sp, #24
 800045c:	af02      	add	r7, sp, #8
 800045e:	60f8      	str	r0, [r7, #12]
 8000460:	607a      	str	r2, [r7, #4]
 8000462:	250a      	movs	r5, #10
 8000464:	197b      	adds	r3, r7, r5
 8000466:	1c0a      	adds	r2, r1, #0
 8000468:	801a      	strh	r2, [r3, #0]
  HAL_I2C_Master_Transmit(HI2C, DEVICE_ADDRESS, pData, size, timeout);
 800046a:	4b09      	ldr	r3, [pc, #36]	@ (8000490 <SH1106_CALL_HAL_I2C_Transmit+0x38>)
 800046c:	6818      	ldr	r0, [r3, #0]
 800046e:	4b09      	ldr	r3, [pc, #36]	@ (8000494 <SH1106_CALL_HAL_I2C_Transmit+0x3c>)
 8000470:	781b      	ldrb	r3, [r3, #0]
 8000472:	001c      	movs	r4, r3
 8000474:	197b      	adds	r3, r7, r5
 8000476:	8819      	ldrh	r1, [r3, #0]
 8000478:	68fa      	ldr	r2, [r7, #12]
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	9300      	str	r3, [sp, #0]
 800047e:	000b      	movs	r3, r1
 8000480:	0021      	movs	r1, r4
 8000482:	f001 f901 	bl	8001688 <HAL_I2C_Master_Transmit>
}
 8000486:	46c0      	nop			@ (mov r8, r8)
 8000488:	46bd      	mov	sp, r7
 800048a:	b004      	add	sp, #16
 800048c:	bdb0      	pop	{r4, r5, r7, pc}
 800048e:	46c0      	nop			@ (mov r8, r8)
 8000490:	20000148 	.word	0x20000148
 8000494:	2000014c 	.word	0x2000014c

08000498 <SH1106_Init>:
/**
  * @brief This function initializes the display.
  * @param *hi2c:         i2c-handle pointer
  * @param deviceAddress: i2c device address
  */
void SH1106_Init(I2C_HandleTypeDef *hi2c, uint8_t deviceAddress) {
 8000498:	b580      	push	{r7, lr}
 800049a:	b084      	sub	sp, #16
 800049c:	af00      	add	r7, sp, #0
 800049e:	6078      	str	r0, [r7, #4]
 80004a0:	000a      	movs	r2, r1
 80004a2:	1cfb      	adds	r3, r7, #3
 80004a4:	701a      	strb	r2, [r3, #0]
  HI2C = hi2c;
 80004a6:	4b0e      	ldr	r3, [pc, #56]	@ (80004e0 <SH1106_Init+0x48>)
 80004a8:	687a      	ldr	r2, [r7, #4]
 80004aa:	601a      	str	r2, [r3, #0]
  DEVICE_ADDRESS = deviceAddress;
 80004ac:	4b0d      	ldr	r3, [pc, #52]	@ (80004e4 <SH1106_Init+0x4c>)
 80004ae:	1cfa      	adds	r2, r7, #3
 80004b0:	7812      	ldrb	r2, [r2, #0]
 80004b2:	701a      	strb	r2, [r3, #0]
  memset(screenBuffer, 0, sizeof(screenBuffer));
 80004b4:	2384      	movs	r3, #132	@ 0x84
 80004b6:	00da      	lsls	r2, r3, #3
 80004b8:	4b0b      	ldr	r3, [pc, #44]	@ (80004e8 <SH1106_Init+0x50>)
 80004ba:	2100      	movs	r1, #0
 80004bc:	0018      	movs	r0, r3
 80004be:	f003 f939 	bl	8003734 <memset>
  size_t totalBytesToTransmit = sizeof(dynamicInitDataArray) / sizeof(dynamicInitDataArray[0]);
 80004c2:	2329      	movs	r3, #41	@ 0x29
 80004c4:	60fb      	str	r3, [r7, #12]
  SH1106_CALL_HAL_I2C_Transmit(dynamicInitDataArray, totalBytesToTransmit, 1000);
 80004c6:	68fb      	ldr	r3, [r7, #12]
 80004c8:	b299      	uxth	r1, r3
 80004ca:	23fa      	movs	r3, #250	@ 0xfa
 80004cc:	009a      	lsls	r2, r3, #2
 80004ce:	4b07      	ldr	r3, [pc, #28]	@ (80004ec <SH1106_Init+0x54>)
 80004d0:	0018      	movs	r0, r3
 80004d2:	f7ff ffc1 	bl	8000458 <SH1106_CALL_HAL_I2C_Transmit>
}
 80004d6:	46c0      	nop			@ (mov r8, r8)
 80004d8:	46bd      	mov	sp, r7
 80004da:	b004      	add	sp, #16
 80004dc:	bd80      	pop	{r7, pc}
 80004de:	46c0      	nop			@ (mov r8, r8)
 80004e0:	20000148 	.word	0x20000148
 80004e4:	2000014c 	.word	0x2000014c
 80004e8:	20000150 	.word	0x20000150
 80004ec:	20000000 	.word	0x20000000

080004f0 <SH1106_Display_On>:

/**
  * @brief This function turns the display on and displays the RAM content.
  */
void SH1106_Display_On() {
 80004f0:	b580      	push	{r7, lr}
 80004f2:	b082      	sub	sp, #8
 80004f4:	af00      	add	r7, sp, #0
  uint8_t data[4] = {
 80004f6:	1d3b      	adds	r3, r7, #4
 80004f8:	4a06      	ldr	r2, [pc, #24]	@ (8000514 <SH1106_Display_On+0x24>)
 80004fa:	601a      	str	r2, [r3, #0]
    SH1106_COMMAND, DISPLAY_ON_RAM_CONTENT,
    SH1106_COMMAND, DISPLAY_ON_NORMAL_MODE
  };
  SH1106_CALL_HAL_I2C_Transmit(data, 4, 1000);
 80004fc:	23fa      	movs	r3, #250	@ 0xfa
 80004fe:	009a      	lsls	r2, r3, #2
 8000500:	1d3b      	adds	r3, r7, #4
 8000502:	2104      	movs	r1, #4
 8000504:	0018      	movs	r0, r3
 8000506:	f7ff ffa7 	bl	8000458 <SH1106_CALL_HAL_I2C_Transmit>
}
 800050a:	46c0      	nop			@ (mov r8, r8)
 800050c:	46bd      	mov	sp, r7
 800050e:	b002      	add	sp, #8
 8000510:	bd80      	pop	{r7, pc}
 8000512:	46c0      	nop			@ (mov r8, r8)
 8000514:	af00a400 	.word	0xaf00a400

08000518 <SH1106_Display_Clear>:
}

/**
  * @brief This function clears the display ram to all zeros.
  */
void SH1106_Display_Clear() {
 8000518:	b590      	push	{r4, r7, lr}
 800051a:	b0a3      	sub	sp, #140	@ 0x8c
 800051c:	af00      	add	r7, sp, #0
  uint8_t pixelOff[SH1106_WIDTH + 1];
  pixelOff[0] = SH1106_DATA;
 800051e:	003b      	movs	r3, r7
 8000520:	2240      	movs	r2, #64	@ 0x40
 8000522:	701a      	strb	r2, [r3, #0]
  memset(&pixelOff[1], 0x00, SH1106_WIDTH);
 8000524:	003b      	movs	r3, r7
 8000526:	3301      	adds	r3, #1
 8000528:	2284      	movs	r2, #132	@ 0x84
 800052a:	2100      	movs	r1, #0
 800052c:	0018      	movs	r0, r3
 800052e:	f003 f901 	bl	8003734 <memset>

  for(uint8_t page = 0; page < 8; page++){
 8000532:	2387      	movs	r3, #135	@ 0x87
 8000534:	18fb      	adds	r3, r7, r3
 8000536:	2200      	movs	r2, #0
 8000538:	701a      	strb	r2, [r3, #0]
 800053a:	e014      	b.n	8000566 <SH1106_Display_Clear+0x4e>
    SH1106_Set_Page_Address(page);
 800053c:	2487      	movs	r4, #135	@ 0x87
 800053e:	193b      	adds	r3, r7, r4
 8000540:	781b      	ldrb	r3, [r3, #0]
 8000542:	0018      	movs	r0, r3
 8000544:	f000 f83c 	bl	80005c0 <SH1106_Set_Page_Address>
    SH1106_Set_Column_Address(0);
 8000548:	2000      	movs	r0, #0
 800054a:	f000 f85f 	bl	800060c <SH1106_Set_Column_Address>

    SH1106_CALL_HAL_I2C_Transmit(pixelOff, sizeof(pixelOff), 1000);
 800054e:	23fa      	movs	r3, #250	@ 0xfa
 8000550:	009a      	lsls	r2, r3, #2
 8000552:	003b      	movs	r3, r7
 8000554:	2185      	movs	r1, #133	@ 0x85
 8000556:	0018      	movs	r0, r3
 8000558:	f7ff ff7e 	bl	8000458 <SH1106_CALL_HAL_I2C_Transmit>
  for(uint8_t page = 0; page < 8; page++){
 800055c:	193b      	adds	r3, r7, r4
 800055e:	781a      	ldrb	r2, [r3, #0]
 8000560:	193b      	adds	r3, r7, r4
 8000562:	3201      	adds	r2, #1
 8000564:	701a      	strb	r2, [r3, #0]
 8000566:	2387      	movs	r3, #135	@ 0x87
 8000568:	18fb      	adds	r3, r7, r3
 800056a:	781b      	ldrb	r3, [r3, #0]
 800056c:	2b07      	cmp	r3, #7
 800056e:	d9e5      	bls.n	800053c <SH1106_Display_Clear+0x24>
  }
}
 8000570:	46c0      	nop			@ (mov r8, r8)
 8000572:	46c0      	nop			@ (mov r8, r8)
 8000574:	46bd      	mov	sp, r7
 8000576:	b023      	add	sp, #140	@ 0x8c
 8000578:	bd90      	pop	{r4, r7, pc}
	...

0800057c <SH1106_Set_Cursor>:
/**
  * @brief This function sets the cursor to a position
  * @param page:          y-position (0-7)
  * @param column:        x-position (0-127)
  */
void SH1106_Set_Cursor(uint8_t page, uint8_t column) {
 800057c:	b580      	push	{r7, lr}
 800057e:	b082      	sub	sp, #8
 8000580:	af00      	add	r7, sp, #0
 8000582:	0002      	movs	r2, r0
 8000584:	1dfb      	adds	r3, r7, #7
 8000586:	701a      	strb	r2, [r3, #0]
 8000588:	1dbb      	adds	r3, r7, #6
 800058a:	1c0a      	adds	r2, r1, #0
 800058c:	701a      	strb	r2, [r3, #0]
  POS_Y = page;
 800058e:	4b0a      	ldr	r3, [pc, #40]	@ (80005b8 <SH1106_Set_Cursor+0x3c>)
 8000590:	1dfa      	adds	r2, r7, #7
 8000592:	7812      	ldrb	r2, [r2, #0]
 8000594:	701a      	strb	r2, [r3, #0]
  POS_X = column;
 8000596:	4b09      	ldr	r3, [pc, #36]	@ (80005bc <SH1106_Set_Cursor+0x40>)
 8000598:	1dba      	adds	r2, r7, #6
 800059a:	7812      	ldrb	r2, [r2, #0]
 800059c:	701a      	strb	r2, [r3, #0]
  SH1106_Set_Page_And_Column_Address(POS_Y, POS_X);
 800059e:	4b06      	ldr	r3, [pc, #24]	@ (80005b8 <SH1106_Set_Cursor+0x3c>)
 80005a0:	781a      	ldrb	r2, [r3, #0]
 80005a2:	4b06      	ldr	r3, [pc, #24]	@ (80005bc <SH1106_Set_Cursor+0x40>)
 80005a4:	781b      	ldrb	r3, [r3, #0]
 80005a6:	0019      	movs	r1, r3
 80005a8:	0010      	movs	r0, r2
 80005aa:	f000 f871 	bl	8000690 <SH1106_Set_Page_And_Column_Address>
}
 80005ae:	46c0      	nop			@ (mov r8, r8)
 80005b0:	46bd      	mov	sp, r7
 80005b2:	b002      	add	sp, #8
 80005b4:	bd80      	pop	{r7, pc}
 80005b6:	46c0      	nop			@ (mov r8, r8)
 80005b8:	2000014e 	.word	0x2000014e
 80005bc:	2000014d 	.word	0x2000014d

080005c0 <SH1106_Set_Page_Address>:

/**
  * @brief This function sets the page.
  * @param page:          page number from 0-7
  */
void SH1106_Set_Page_Address(uint8_t page) {
 80005c0:	b580      	push	{r7, lr}
 80005c2:	b084      	sub	sp, #16
 80005c4:	af00      	add	r7, sp, #0
 80005c6:	0002      	movs	r2, r0
 80005c8:	1dfb      	adds	r3, r7, #7
 80005ca:	701a      	strb	r2, [r3, #0]
  POS_Y = page;
 80005cc:	4b0e      	ldr	r3, [pc, #56]	@ (8000608 <SH1106_Set_Page_Address+0x48>)
 80005ce:	1dfa      	adds	r2, r7, #7
 80005d0:	7812      	ldrb	r2, [r2, #0]
 80005d2:	701a      	strb	r2, [r3, #0]
  if(page > 7) {
 80005d4:	1dfb      	adds	r3, r7, #7
 80005d6:	781b      	ldrb	r3, [r3, #0]
 80005d8:	2b07      	cmp	r3, #7
 80005da:	d811      	bhi.n	8000600 <SH1106_Set_Page_Address+0x40>
    return; // Check if page is in bounds.
  }
  uint8_t setPageAddress[2] = {SH1106_COMMAND, SET_PAGE_ADDRESS_FOR_PAGE_ADDRESSING_MODE + page};
 80005dc:	210c      	movs	r1, #12
 80005de:	187b      	adds	r3, r7, r1
 80005e0:	2200      	movs	r2, #0
 80005e2:	701a      	strb	r2, [r3, #0]
 80005e4:	1dfb      	adds	r3, r7, #7
 80005e6:	781b      	ldrb	r3, [r3, #0]
 80005e8:	3b50      	subs	r3, #80	@ 0x50
 80005ea:	b2da      	uxtb	r2, r3
 80005ec:	187b      	adds	r3, r7, r1
 80005ee:	705a      	strb	r2, [r3, #1]
  SH1106_CALL_HAL_I2C_Transmit(setPageAddress, 2, 1000);
 80005f0:	23fa      	movs	r3, #250	@ 0xfa
 80005f2:	009a      	lsls	r2, r3, #2
 80005f4:	187b      	adds	r3, r7, r1
 80005f6:	2102      	movs	r1, #2
 80005f8:	0018      	movs	r0, r3
 80005fa:	f7ff ff2d 	bl	8000458 <SH1106_CALL_HAL_I2C_Transmit>
 80005fe:	e000      	b.n	8000602 <SH1106_Set_Page_Address+0x42>
    return; // Check if page is in bounds.
 8000600:	46c0      	nop			@ (mov r8, r8)
}
 8000602:	46bd      	mov	sp, r7
 8000604:	b004      	add	sp, #16
 8000606:	bd80      	pop	{r7, pc}
 8000608:	2000014e 	.word	0x2000014e

0800060c <SH1106_Set_Column_Address>:

/**
  * @brief This function sets the column.
  * @param column:        lower-column number from 0-131
  */
void SH1106_Set_Column_Address(uint8_t column) {
 800060c:	b5b0      	push	{r4, r5, r7, lr}
 800060e:	b084      	sub	sp, #16
 8000610:	af00      	add	r7, sp, #0
 8000612:	0002      	movs	r2, r0
 8000614:	1dfb      	adds	r3, r7, #7
 8000616:	701a      	strb	r2, [r3, #0]
  POS_X = column;
 8000618:	4b1c      	ldr	r3, [pc, #112]	@ (800068c <SH1106_Set_Column_Address+0x80>)
 800061a:	1dfa      	adds	r2, r7, #7
 800061c:	7812      	ldrb	r2, [r2, #0]
 800061e:	701a      	strb	r2, [r3, #0]
  column = column + 2; // Add 2 to account for bytes in ram without pixels.
 8000620:	1dfb      	adds	r3, r7, #7
 8000622:	1dfa      	adds	r2, r7, #7
 8000624:	7812      	ldrb	r2, [r2, #0]
 8000626:	3202      	adds	r2, #2
 8000628:	701a      	strb	r2, [r3, #0]
  uint8_t lowerNibble  = column & 0x0F; // Mask the lower nibble
 800062a:	200f      	movs	r0, #15
 800062c:	183b      	adds	r3, r7, r0
 800062e:	1dfa      	adds	r2, r7, #7
 8000630:	7812      	ldrb	r2, [r2, #0]
 8000632:	210f      	movs	r1, #15
 8000634:	400a      	ands	r2, r1
 8000636:	701a      	strb	r2, [r3, #0]
  uint8_t higherNibble = (column >> 4) & 0x0F; // Shift and mask the higher nibble
 8000638:	250e      	movs	r5, #14
 800063a:	197b      	adds	r3, r7, r5
 800063c:	1dfa      	adds	r2, r7, #7
 800063e:	7812      	ldrb	r2, [r2, #0]
 8000640:	0912      	lsrs	r2, r2, #4
 8000642:	701a      	strb	r2, [r3, #0]
  uint8_t setColumnLowerAddress[2]  = {SH1106_COMMAND, 0x00 + lowerNibble};
 8000644:	210c      	movs	r1, #12
 8000646:	187b      	adds	r3, r7, r1
 8000648:	2200      	movs	r2, #0
 800064a:	701a      	strb	r2, [r3, #0]
 800064c:	187b      	adds	r3, r7, r1
 800064e:	183a      	adds	r2, r7, r0
 8000650:	7812      	ldrb	r2, [r2, #0]
 8000652:	705a      	strb	r2, [r3, #1]
  uint8_t setColumnHigherAddress[2] = {SH1106_COMMAND, 0x10 + higherNibble};
 8000654:	2408      	movs	r4, #8
 8000656:	193b      	adds	r3, r7, r4
 8000658:	2200      	movs	r2, #0
 800065a:	701a      	strb	r2, [r3, #0]
 800065c:	197b      	adds	r3, r7, r5
 800065e:	781b      	ldrb	r3, [r3, #0]
 8000660:	3310      	adds	r3, #16
 8000662:	b2da      	uxtb	r2, r3
 8000664:	193b      	adds	r3, r7, r4
 8000666:	705a      	strb	r2, [r3, #1]
  SH1106_CALL_HAL_I2C_Transmit(setColumnLowerAddress, 2, 1000);
 8000668:	23fa      	movs	r3, #250	@ 0xfa
 800066a:	009a      	lsls	r2, r3, #2
 800066c:	187b      	adds	r3, r7, r1
 800066e:	2102      	movs	r1, #2
 8000670:	0018      	movs	r0, r3
 8000672:	f7ff fef1 	bl	8000458 <SH1106_CALL_HAL_I2C_Transmit>
  SH1106_CALL_HAL_I2C_Transmit(setColumnHigherAddress, 2, 1000);
 8000676:	23fa      	movs	r3, #250	@ 0xfa
 8000678:	009a      	lsls	r2, r3, #2
 800067a:	193b      	adds	r3, r7, r4
 800067c:	2102      	movs	r1, #2
 800067e:	0018      	movs	r0, r3
 8000680:	f7ff feea 	bl	8000458 <SH1106_CALL_HAL_I2C_Transmit>
}
 8000684:	46c0      	nop			@ (mov r8, r8)
 8000686:	46bd      	mov	sp, r7
 8000688:	b004      	add	sp, #16
 800068a:	bdb0      	pop	{r4, r5, r7, pc}
 800068c:	2000014d 	.word	0x2000014d

08000690 <SH1106_Set_Page_And_Column_Address>:
/**
  * @brief This function sets the page and the column address.
  * @param page:          page number from 0-7
  * @param column:        lower-column number from 0-131
  */
void SH1106_Set_Page_And_Column_Address(uint8_t page, uint8_t column) {
 8000690:	b580      	push	{r7, lr}
 8000692:	b082      	sub	sp, #8
 8000694:	af00      	add	r7, sp, #0
 8000696:	0002      	movs	r2, r0
 8000698:	1dfb      	adds	r3, r7, #7
 800069a:	701a      	strb	r2, [r3, #0]
 800069c:	1dbb      	adds	r3, r7, #6
 800069e:	1c0a      	adds	r2, r1, #0
 80006a0:	701a      	strb	r2, [r3, #0]
  POS_Y = page;
 80006a2:	4b0b      	ldr	r3, [pc, #44]	@ (80006d0 <SH1106_Set_Page_And_Column_Address+0x40>)
 80006a4:	1dfa      	adds	r2, r7, #7
 80006a6:	7812      	ldrb	r2, [r2, #0]
 80006a8:	701a      	strb	r2, [r3, #0]
  POS_X = column;
 80006aa:	4b0a      	ldr	r3, [pc, #40]	@ (80006d4 <SH1106_Set_Page_And_Column_Address+0x44>)
 80006ac:	1dba      	adds	r2, r7, #6
 80006ae:	7812      	ldrb	r2, [r2, #0]
 80006b0:	701a      	strb	r2, [r3, #0]
  SH1106_Set_Page_Address(page);
 80006b2:	1dfb      	adds	r3, r7, #7
 80006b4:	781b      	ldrb	r3, [r3, #0]
 80006b6:	0018      	movs	r0, r3
 80006b8:	f7ff ff82 	bl	80005c0 <SH1106_Set_Page_Address>
  SH1106_Set_Column_Address(column);
 80006bc:	1dbb      	adds	r3, r7, #6
 80006be:	781b      	ldrb	r3, [r3, #0]
 80006c0:	0018      	movs	r0, r3
 80006c2:	f7ff ffa3 	bl	800060c <SH1106_Set_Column_Address>
}
 80006c6:	46c0      	nop			@ (mov r8, r8)
 80006c8:	46bd      	mov	sp, r7
 80006ca:	b002      	add	sp, #8
 80006cc:	bd80      	pop	{r7, pc}
 80006ce:	46c0      	nop			@ (mov r8, r8)
 80006d0:	2000014e 	.word	0x2000014e
 80006d4:	2000014d 	.word	0x2000014d

080006d8 <SH1106_Transmit_Data>:

/**
  * @brief This function sends one byte of data to the display.
  * @param data:          data to transmit
  */
void SH1106_Transmit_Data(uint8_t data) {
 80006d8:	b580      	push	{r7, lr}
 80006da:	b084      	sub	sp, #16
 80006dc:	af00      	add	r7, sp, #0
 80006de:	0002      	movs	r2, r0
 80006e0:	1dfb      	adds	r3, r7, #7
 80006e2:	701a      	strb	r2, [r3, #0]
  uint8_t buffer[2];
    buffer[0] = SH1106_DATA;
 80006e4:	210c      	movs	r1, #12
 80006e6:	187b      	adds	r3, r7, r1
 80006e8:	2240      	movs	r2, #64	@ 0x40
 80006ea:	701a      	strb	r2, [r3, #0]
    buffer[1] = data;
 80006ec:	187b      	adds	r3, r7, r1
 80006ee:	1dfa      	adds	r2, r7, #7
 80006f0:	7812      	ldrb	r2, [r2, #0]
 80006f2:	705a      	strb	r2, [r3, #1]
    SH1106_CALL_HAL_I2C_Transmit(buffer, 2, 1000);
 80006f4:	23fa      	movs	r3, #250	@ 0xfa
 80006f6:	009a      	lsls	r2, r3, #2
 80006f8:	187b      	adds	r3, r7, r1
 80006fa:	2102      	movs	r1, #2
 80006fc:	0018      	movs	r0, r3
 80006fe:	f7ff feab 	bl	8000458 <SH1106_CALL_HAL_I2C_Transmit>
}
 8000702:	46c0      	nop			@ (mov r8, r8)
 8000704:	46bd      	mov	sp, r7
 8000706:	b004      	add	sp, #16
 8000708:	bd80      	pop	{r7, pc}
	...

0800070c <SH1106_Display_Character>:

/**
  * @brief This function sends a single character to the display.
  * @param character:     character to transmit
  */
void SH1106_Display_Character(uint8_t character) {
 800070c:	b580      	push	{r7, lr}
 800070e:	b084      	sub	sp, #16
 8000710:	af00      	add	r7, sp, #0
 8000712:	0002      	movs	r2, r0
 8000714:	1dfb      	adds	r3, r7, #7
 8000716:	701a      	strb	r2, [r3, #0]
  if(character >= 257) {
    return; // Do nothing when character is out of bound.
  }
  for(int i = 0; i < 7; i++) {
 8000718:	2300      	movs	r3, #0
 800071a:	60fb      	str	r3, [r7, #12]
 800071c:	e012      	b.n	8000744 <SH1106_Display_Character+0x38>
    SH1106_Transmit_Data(minecraft_condensed[character][i]);
 800071e:	1dfb      	adds	r3, r7, #7
 8000720:	781a      	ldrb	r2, [r3, #0]
 8000722:	490b      	ldr	r1, [pc, #44]	@ (8000750 <SH1106_Display_Character+0x44>)
 8000724:	0013      	movs	r3, r2
 8000726:	00db      	lsls	r3, r3, #3
 8000728:	1a9b      	subs	r3, r3, r2
 800072a:	18ca      	adds	r2, r1, r3
 800072c:	68fb      	ldr	r3, [r7, #12]
 800072e:	18d3      	adds	r3, r2, r3
 8000730:	781b      	ldrb	r3, [r3, #0]
 8000732:	0018      	movs	r0, r3
 8000734:	f7ff ffd0 	bl	80006d8 <SH1106_Transmit_Data>
    HAL_Delay(1); // Small delay for processing time.
 8000738:	2001      	movs	r0, #1
 800073a:	f000 fb35 	bl	8000da8 <HAL_Delay>
  for(int i = 0; i < 7; i++) {
 800073e:	68fb      	ldr	r3, [r7, #12]
 8000740:	3301      	adds	r3, #1
 8000742:	60fb      	str	r3, [r7, #12]
 8000744:	68fb      	ldr	r3, [r7, #12]
 8000746:	2b06      	cmp	r3, #6
 8000748:	dde9      	ble.n	800071e <SH1106_Display_Character+0x12>
  }
}
 800074a:	46bd      	mov	sp, r7
 800074c:	b004      	add	sp, #16
 800074e:	bd80      	pop	{r7, pc}
 8000750:	08004630 	.word	0x08004630

08000754 <SH1106_Display_Text>:
/**
  * @brief This function sends multiple characters to the display and wraps to the next line if the last word won't fit into the current line.
  * @param page:          page to start writing
  * @param string:        string to transmit
  */
void SH1106_Display_Text(char* string) {
 8000754:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000756:	46c6      	mov	lr, r8
 8000758:	b500      	push	{lr}
 800075a:	b090      	sub	sp, #64	@ 0x40
 800075c:	af00      	add	r7, sp, #0
 800075e:	61f8      	str	r0, [r7, #28]
 8000760:	466b      	mov	r3, sp
 8000762:	4698      	mov	r8, r3
  SH1106_Set_Page_And_Column_Address(POS_Y, POS_X);
 8000764:	4b58      	ldr	r3, [pc, #352]	@ (80008c8 <SH1106_Display_Text+0x174>)
 8000766:	781a      	ldrb	r2, [r3, #0]
 8000768:	4b58      	ldr	r3, [pc, #352]	@ (80008cc <SH1106_Display_Text+0x178>)
 800076a:	781b      	ldrb	r3, [r3, #0]
 800076c:	0019      	movs	r1, r3
 800076e:	0010      	movs	r0, r2
 8000770:	f7ff ff8e 	bl	8000690 <SH1106_Set_Page_And_Column_Address>

  const char delim[2] = " "; // Delimeter, can also use multiple delimeters " ,;:"
 8000774:	230c      	movs	r3, #12
 8000776:	2218      	movs	r2, #24
 8000778:	189b      	adds	r3, r3, r2
 800077a:	19db      	adds	r3, r3, r7
 800077c:	2220      	movs	r2, #32
 800077e:	801a      	strh	r2, [r3, #0]
  char buffer[strlen(string) + 1];
 8000780:	69fb      	ldr	r3, [r7, #28]
 8000782:	0018      	movs	r0, r3
 8000784:	f7ff fcc0 	bl	8000108 <strlen>
 8000788:	0003      	movs	r3, r0
 800078a:	1c5e      	adds	r6, r3, #1
 800078c:	0033      	movs	r3, r6
 800078e:	3b01      	subs	r3, #1
 8000790:	633b      	str	r3, [r7, #48]	@ 0x30
 8000792:	60be      	str	r6, [r7, #8]
 8000794:	2300      	movs	r3, #0
 8000796:	60fb      	str	r3, [r7, #12]
 8000798:	68b9      	ldr	r1, [r7, #8]
 800079a:	68fa      	ldr	r2, [r7, #12]
 800079c:	0008      	movs	r0, r1
 800079e:	0f43      	lsrs	r3, r0, #29
 80007a0:	0010      	movs	r0, r2
 80007a2:	00c0      	lsls	r0, r0, #3
 80007a4:	6178      	str	r0, [r7, #20]
 80007a6:	6978      	ldr	r0, [r7, #20]
 80007a8:	4318      	orrs	r0, r3
 80007aa:	6178      	str	r0, [r7, #20]
 80007ac:	000a      	movs	r2, r1
 80007ae:	00d2      	lsls	r2, r2, #3
 80007b0:	613a      	str	r2, [r7, #16]
 80007b2:	603e      	str	r6, [r7, #0]
 80007b4:	2300      	movs	r3, #0
 80007b6:	607b      	str	r3, [r7, #4]
 80007b8:	6839      	ldr	r1, [r7, #0]
 80007ba:	687a      	ldr	r2, [r7, #4]
 80007bc:	0008      	movs	r0, r1
 80007be:	0f43      	lsrs	r3, r0, #29
 80007c0:	0010      	movs	r0, r2
 80007c2:	00c5      	lsls	r5, r0, #3
 80007c4:	431d      	orrs	r5, r3
 80007c6:	000a      	movs	r2, r1
 80007c8:	00d4      	lsls	r4, r2, #3
 80007ca:	1df3      	adds	r3, r6, #7
 80007cc:	08db      	lsrs	r3, r3, #3
 80007ce:	00db      	lsls	r3, r3, #3
 80007d0:	466a      	mov	r2, sp
 80007d2:	1ad2      	subs	r2, r2, r3
 80007d4:	4695      	mov	sp, r2
 80007d6:	466b      	mov	r3, sp
 80007d8:	3300      	adds	r3, #0
 80007da:	62fb      	str	r3, [r7, #44]	@ 0x2c
  strncpy(buffer, string, sizeof(buffer) - 1);
 80007dc:	1e72      	subs	r2, r6, #1
 80007de:	69f9      	ldr	r1, [r7, #28]
 80007e0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80007e2:	0018      	movs	r0, r3
 80007e4:	f002 ffae 	bl	8003744 <strncpy>
  buffer[sizeof(buffer)] = '\0';
 80007e8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80007ea:	2200      	movs	r2, #0
 80007ec:	559a      	strb	r2, [r3, r6]
  char *token = strtok(buffer, delim);
 80007ee:	230c      	movs	r3, #12
 80007f0:	2218      	movs	r2, #24
 80007f2:	189b      	adds	r3, r3, r2
 80007f4:	19da      	adds	r2, r3, r7
 80007f6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80007f8:	0011      	movs	r1, r2
 80007fa:	0018      	movs	r0, r3
 80007fc:	f002 ffb6 	bl	800376c <strtok>
 8000800:	0003      	movs	r3, r0
 8000802:	63fb      	str	r3, [r7, #60]	@ 0x3c
  size_t position = 0;
 8000804:	2300      	movs	r3, #0
 8000806:	63bb      	str	r3, [r7, #56]	@ 0x38

  while(token != NULL) {
 8000808:	e054      	b.n	80008b4 <SH1106_Display_Text+0x160>
    size_t tokenLength = strlen(token);
 800080a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800080c:	0018      	movs	r0, r3
 800080e:	f7ff fc7b 	bl	8000108 <strlen>
 8000812:	0003      	movs	r3, r0
 8000814:	62bb      	str	r3, [r7, #40]	@ 0x28
    if(position + tokenLength > LINE_WRAP_INTERVAL) {
 8000816:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8000818:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800081a:	18d3      	adds	r3, r2, r3
 800081c:	2212      	movs	r2, #18
 800081e:	4293      	cmp	r3, r2
 8000820:	d915      	bls.n	800084e <SH1106_Display_Text+0xfa>
      if(POS_Y > 0) {
 8000822:	4b29      	ldr	r3, [pc, #164]	@ (80008c8 <SH1106_Display_Text+0x174>)
 8000824:	781b      	ldrb	r3, [r3, #0]
 8000826:	2b00      	cmp	r3, #0
 8000828:	d006      	beq.n	8000838 <SH1106_Display_Text+0xe4>
        POS_Y--;
 800082a:	4b27      	ldr	r3, [pc, #156]	@ (80008c8 <SH1106_Display_Text+0x174>)
 800082c:	781b      	ldrb	r3, [r3, #0]
 800082e:	3b01      	subs	r3, #1
 8000830:	b2da      	uxtb	r2, r3
 8000832:	4b25      	ldr	r3, [pc, #148]	@ (80008c8 <SH1106_Display_Text+0x174>)
 8000834:	701a      	strb	r2, [r3, #0]
 8000836:	e002      	b.n	800083e <SH1106_Display_Text+0xea>
      } else {
        POS_Y = 7;
 8000838:	4b23      	ldr	r3, [pc, #140]	@ (80008c8 <SH1106_Display_Text+0x174>)
 800083a:	2207      	movs	r2, #7
 800083c:	701a      	strb	r2, [r3, #0]
      }
      SH1106_Set_Page_And_Column_Address(POS_Y, 0);
 800083e:	4b22      	ldr	r3, [pc, #136]	@ (80008c8 <SH1106_Display_Text+0x174>)
 8000840:	781b      	ldrb	r3, [r3, #0]
 8000842:	2100      	movs	r1, #0
 8000844:	0018      	movs	r0, r3
 8000846:	f7ff ff23 	bl	8000690 <SH1106_Set_Page_And_Column_Address>
      position = 0;
 800084a:	2300      	movs	r3, #0
 800084c:	63bb      	str	r3, [r7, #56]	@ 0x38
    }

    for(uint8_t i = 0; i < tokenLength; i++){
 800084e:	231f      	movs	r3, #31
 8000850:	2218      	movs	r2, #24
 8000852:	189b      	adds	r3, r3, r2
 8000854:	19db      	adds	r3, r3, r7
 8000856:	2200      	movs	r2, #0
 8000858:	701a      	strb	r2, [r3, #0]
 800085a:	e014      	b.n	8000886 <SH1106_Display_Text+0x132>
      SH1106_Display_Character(token[i]);
 800085c:	241f      	movs	r4, #31
 800085e:	2518      	movs	r5, #24
 8000860:	1963      	adds	r3, r4, r5
 8000862:	19db      	adds	r3, r3, r7
 8000864:	781b      	ldrb	r3, [r3, #0]
 8000866:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8000868:	18d3      	adds	r3, r2, r3
 800086a:	781b      	ldrb	r3, [r3, #0]
 800086c:	0018      	movs	r0, r3
 800086e:	f7ff ff4d 	bl	800070c <SH1106_Display_Character>
      position++;
 8000872:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8000874:	3301      	adds	r3, #1
 8000876:	63bb      	str	r3, [r7, #56]	@ 0x38
    for(uint8_t i = 0; i < tokenLength; i++){
 8000878:	1963      	adds	r3, r4, r5
 800087a:	19db      	adds	r3, r3, r7
 800087c:	781a      	ldrb	r2, [r3, #0]
 800087e:	1963      	adds	r3, r4, r5
 8000880:	19db      	adds	r3, r3, r7
 8000882:	3201      	adds	r2, #1
 8000884:	701a      	strb	r2, [r3, #0]
 8000886:	231f      	movs	r3, #31
 8000888:	2418      	movs	r4, #24
 800088a:	191b      	adds	r3, r3, r4
 800088c:	19db      	adds	r3, r3, r7
 800088e:	781b      	ldrb	r3, [r3, #0]
 8000890:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8000892:	429a      	cmp	r2, r3
 8000894:	d8e2      	bhi.n	800085c <SH1106_Display_Text+0x108>
    }
    SH1106_Display_Character(' ');
 8000896:	2020      	movs	r0, #32
 8000898:	f7ff ff38 	bl	800070c <SH1106_Display_Character>
    position++;
 800089c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800089e:	3301      	adds	r3, #1
 80008a0:	63bb      	str	r3, [r7, #56]	@ 0x38
    token = strtok(NULL, delim);
 80008a2:	230c      	movs	r3, #12
 80008a4:	191b      	adds	r3, r3, r4
 80008a6:	19db      	adds	r3, r3, r7
 80008a8:	0019      	movs	r1, r3
 80008aa:	2000      	movs	r0, #0
 80008ac:	f002 ff5e 	bl	800376c <strtok>
 80008b0:	0003      	movs	r3, r0
 80008b2:	63fb      	str	r3, [r7, #60]	@ 0x3c
  while(token != NULL) {
 80008b4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80008b6:	2b00      	cmp	r3, #0
 80008b8:	d1a7      	bne.n	800080a <SH1106_Display_Text+0xb6>
 80008ba:	46c5      	mov	sp, r8
  }
}
 80008bc:	46c0      	nop			@ (mov r8, r8)
 80008be:	46bd      	mov	sp, r7
 80008c0:	b010      	add	sp, #64	@ 0x40
 80008c2:	bc80      	pop	{r7}
 80008c4:	46b8      	mov	r8, r7
 80008c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80008c8:	2000014e 	.word	0x2000014e
 80008cc:	2000014d 	.word	0x2000014d

080008d0 <SH1106_Set_Pixel>:
/**
  * @brief This function sets a pixel at specific coordinates. CAREFUL: function overwrites the whole byte to set one bit.
  * @param x: x-position (0-127)
  * @param y: y-position (0-63)
  */
void SH1106_Set_Pixel(uint8_t x, uint8_t y) {
 80008d0:	b590      	push	{r4, r7, lr}
 80008d2:	b085      	sub	sp, #20
 80008d4:	af00      	add	r7, sp, #0
 80008d6:	0002      	movs	r2, r0
 80008d8:	1dfb      	adds	r3, r7, #7
 80008da:	701a      	strb	r2, [r3, #0]
 80008dc:	1dbb      	adds	r3, r7, #6
 80008de:	1c0a      	adds	r2, r1, #0
 80008e0:	701a      	strb	r2, [r3, #0]
  if(x >= SH1106_WIDTH || y >= SH1106_HEIGHT) {
 80008e2:	1dfb      	adds	r3, r7, #7
 80008e4:	781b      	ldrb	r3, [r3, #0]
 80008e6:	2b83      	cmp	r3, #131	@ 0x83
 80008e8:	d825      	bhi.n	8000936 <SH1106_Set_Pixel+0x66>
 80008ea:	1dbb      	adds	r3, r7, #6
 80008ec:	781b      	ldrb	r3, [r3, #0]
 80008ee:	2b3f      	cmp	r3, #63	@ 0x3f
 80008f0:	d821      	bhi.n	8000936 <SH1106_Set_Pixel+0x66>
    return;
  }

  uint8_t page = y / 8;
 80008f2:	210f      	movs	r1, #15
 80008f4:	187b      	adds	r3, r7, r1
 80008f6:	1dba      	adds	r2, r7, #6
 80008f8:	7812      	ldrb	r2, [r2, #0]
 80008fa:	08d2      	lsrs	r2, r2, #3
 80008fc:	701a      	strb	r2, [r3, #0]
  uint8_t bit = (1 << (y % 8));
 80008fe:	1dbb      	adds	r3, r7, #6
 8000900:	781b      	ldrb	r3, [r3, #0]
 8000902:	2207      	movs	r2, #7
 8000904:	4013      	ands	r3, r2
 8000906:	2201      	movs	r2, #1
 8000908:	409a      	lsls	r2, r3
 800090a:	240e      	movs	r4, #14
 800090c:	193b      	adds	r3, r7, r4
 800090e:	701a      	strb	r2, [r3, #0]

  uint8_t column = x;
 8000910:	200d      	movs	r0, #13
 8000912:	183b      	adds	r3, r7, r0
 8000914:	1dfa      	adds	r2, r7, #7
 8000916:	7812      	ldrb	r2, [r2, #0]
 8000918:	701a      	strb	r2, [r3, #0]

  SH1106_Set_Cursor(page, column);
 800091a:	183b      	adds	r3, r7, r0
 800091c:	781a      	ldrb	r2, [r3, #0]
 800091e:	187b      	adds	r3, r7, r1
 8000920:	781b      	ldrb	r3, [r3, #0]
 8000922:	0011      	movs	r1, r2
 8000924:	0018      	movs	r0, r3
 8000926:	f7ff fe29 	bl	800057c <SH1106_Set_Cursor>
  SH1106_Transmit_Data(bit);
 800092a:	193b      	adds	r3, r7, r4
 800092c:	781b      	ldrb	r3, [r3, #0]
 800092e:	0018      	movs	r0, r3
 8000930:	f7ff fed2 	bl	80006d8 <SH1106_Transmit_Data>
 8000934:	e000      	b.n	8000938 <SH1106_Set_Pixel+0x68>
    return;
 8000936:	46c0      	nop			@ (mov r8, r8)
}
 8000938:	46bd      	mov	sp, r7
 800093a:	b005      	add	sp, #20
 800093c:	bd90      	pop	{r4, r7, pc}
	...

08000940 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000940:	b580      	push	{r7, lr}
 8000942:	b082      	sub	sp, #8
 8000944:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000946:	4b0f      	ldr	r3, [pc, #60]	@ (8000984 <HAL_MspInit+0x44>)
 8000948:	699a      	ldr	r2, [r3, #24]
 800094a:	4b0e      	ldr	r3, [pc, #56]	@ (8000984 <HAL_MspInit+0x44>)
 800094c:	2101      	movs	r1, #1
 800094e:	430a      	orrs	r2, r1
 8000950:	619a      	str	r2, [r3, #24]
 8000952:	4b0c      	ldr	r3, [pc, #48]	@ (8000984 <HAL_MspInit+0x44>)
 8000954:	699b      	ldr	r3, [r3, #24]
 8000956:	2201      	movs	r2, #1
 8000958:	4013      	ands	r3, r2
 800095a:	607b      	str	r3, [r7, #4]
 800095c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800095e:	4b09      	ldr	r3, [pc, #36]	@ (8000984 <HAL_MspInit+0x44>)
 8000960:	69da      	ldr	r2, [r3, #28]
 8000962:	4b08      	ldr	r3, [pc, #32]	@ (8000984 <HAL_MspInit+0x44>)
 8000964:	2180      	movs	r1, #128	@ 0x80
 8000966:	0549      	lsls	r1, r1, #21
 8000968:	430a      	orrs	r2, r1
 800096a:	61da      	str	r2, [r3, #28]
 800096c:	4b05      	ldr	r3, [pc, #20]	@ (8000984 <HAL_MspInit+0x44>)
 800096e:	69da      	ldr	r2, [r3, #28]
 8000970:	2380      	movs	r3, #128	@ 0x80
 8000972:	055b      	lsls	r3, r3, #21
 8000974:	4013      	ands	r3, r2
 8000976:	603b      	str	r3, [r7, #0]
 8000978:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800097a:	46c0      	nop			@ (mov r8, r8)
 800097c:	46bd      	mov	sp, r7
 800097e:	b002      	add	sp, #8
 8000980:	bd80      	pop	{r7, pc}
 8000982:	46c0      	nop			@ (mov r8, r8)
 8000984:	40021000 	.word	0x40021000

08000988 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000988:	b590      	push	{r4, r7, lr}
 800098a:	b08b      	sub	sp, #44	@ 0x2c
 800098c:	af00      	add	r7, sp, #0
 800098e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000990:	2414      	movs	r4, #20
 8000992:	193b      	adds	r3, r7, r4
 8000994:	0018      	movs	r0, r3
 8000996:	2314      	movs	r3, #20
 8000998:	001a      	movs	r2, r3
 800099a:	2100      	movs	r1, #0
 800099c:	f002 feca 	bl	8003734 <memset>
  if(hi2c->Instance==I2C1)
 80009a0:	687b      	ldr	r3, [r7, #4]
 80009a2:	681b      	ldr	r3, [r3, #0]
 80009a4:	4a33      	ldr	r2, [pc, #204]	@ (8000a74 <HAL_I2C_MspInit+0xec>)
 80009a6:	4293      	cmp	r3, r2
 80009a8:	d15f      	bne.n	8000a6a <HAL_I2C_MspInit+0xe2>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80009aa:	4b33      	ldr	r3, [pc, #204]	@ (8000a78 <HAL_I2C_MspInit+0xf0>)
 80009ac:	695a      	ldr	r2, [r3, #20]
 80009ae:	4b32      	ldr	r3, [pc, #200]	@ (8000a78 <HAL_I2C_MspInit+0xf0>)
 80009b0:	2180      	movs	r1, #128	@ 0x80
 80009b2:	02c9      	lsls	r1, r1, #11
 80009b4:	430a      	orrs	r2, r1
 80009b6:	615a      	str	r2, [r3, #20]
 80009b8:	4b2f      	ldr	r3, [pc, #188]	@ (8000a78 <HAL_I2C_MspInit+0xf0>)
 80009ba:	695a      	ldr	r2, [r3, #20]
 80009bc:	2380      	movs	r3, #128	@ 0x80
 80009be:	02db      	lsls	r3, r3, #11
 80009c0:	4013      	ands	r3, r2
 80009c2:	613b      	str	r3, [r7, #16]
 80009c4:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80009c6:	0021      	movs	r1, r4
 80009c8:	187b      	adds	r3, r7, r1
 80009ca:	22c0      	movs	r2, #192	@ 0xc0
 80009cc:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80009ce:	187b      	adds	r3, r7, r1
 80009d0:	2212      	movs	r2, #18
 80009d2:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 80009d4:	187b      	adds	r3, r7, r1
 80009d6:	2201      	movs	r2, #1
 80009d8:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80009da:	187b      	adds	r3, r7, r1
 80009dc:	2203      	movs	r2, #3
 80009de:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 80009e0:	187b      	adds	r3, r7, r1
 80009e2:	2201      	movs	r2, #1
 80009e4:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80009e6:	187b      	adds	r3, r7, r1
 80009e8:	4a24      	ldr	r2, [pc, #144]	@ (8000a7c <HAL_I2C_MspInit+0xf4>)
 80009ea:	0019      	movs	r1, r3
 80009ec:	0010      	movs	r0, r2
 80009ee:	f000 fc35 	bl	800125c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 80009f2:	4b21      	ldr	r3, [pc, #132]	@ (8000a78 <HAL_I2C_MspInit+0xf0>)
 80009f4:	69da      	ldr	r2, [r3, #28]
 80009f6:	4b20      	ldr	r3, [pc, #128]	@ (8000a78 <HAL_I2C_MspInit+0xf0>)
 80009f8:	2180      	movs	r1, #128	@ 0x80
 80009fa:	0389      	lsls	r1, r1, #14
 80009fc:	430a      	orrs	r2, r1
 80009fe:	61da      	str	r2, [r3, #28]
 8000a00:	4b1d      	ldr	r3, [pc, #116]	@ (8000a78 <HAL_I2C_MspInit+0xf0>)
 8000a02:	69da      	ldr	r2, [r3, #28]
 8000a04:	2380      	movs	r3, #128	@ 0x80
 8000a06:	039b      	lsls	r3, r3, #14
 8000a08:	4013      	ands	r3, r2
 8000a0a:	60fb      	str	r3, [r7, #12]
 8000a0c:	68fb      	ldr	r3, [r7, #12]

    /* I2C1 DMA Init */
    /* I2C1_TX Init */
    hdma_i2c1_tx.Instance = DMA1_Channel2;
 8000a0e:	4b1c      	ldr	r3, [pc, #112]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a10:	4a1c      	ldr	r2, [pc, #112]	@ (8000a84 <HAL_I2C_MspInit+0xfc>)
 8000a12:	601a      	str	r2, [r3, #0]
    hdma_i2c1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8000a14:	4b1a      	ldr	r3, [pc, #104]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a16:	2210      	movs	r2, #16
 8000a18:	605a      	str	r2, [r3, #4]
    hdma_i2c1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8000a1a:	4b19      	ldr	r3, [pc, #100]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a1c:	2200      	movs	r2, #0
 8000a1e:	609a      	str	r2, [r3, #8]
    hdma_i2c1_tx.Init.MemInc = DMA_MINC_ENABLE;
 8000a20:	4b17      	ldr	r3, [pc, #92]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a22:	2280      	movs	r2, #128	@ 0x80
 8000a24:	60da      	str	r2, [r3, #12]
    hdma_i2c1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8000a26:	4b16      	ldr	r3, [pc, #88]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a28:	2200      	movs	r2, #0
 8000a2a:	611a      	str	r2, [r3, #16]
    hdma_i2c1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8000a2c:	4b14      	ldr	r3, [pc, #80]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a2e:	2200      	movs	r2, #0
 8000a30:	615a      	str	r2, [r3, #20]
    hdma_i2c1_tx.Init.Mode = DMA_NORMAL;
 8000a32:	4b13      	ldr	r3, [pc, #76]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a34:	2200      	movs	r2, #0
 8000a36:	619a      	str	r2, [r3, #24]
    hdma_i2c1_tx.Init.Priority = DMA_PRIORITY_LOW;
 8000a38:	4b11      	ldr	r3, [pc, #68]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a3a:	2200      	movs	r2, #0
 8000a3c:	61da      	str	r2, [r3, #28]
    if (HAL_DMA_Init(&hdma_i2c1_tx) != HAL_OK)
 8000a3e:	4b10      	ldr	r3, [pc, #64]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a40:	0018      	movs	r0, r3
 8000a42:	f000 fab3 	bl	8000fac <HAL_DMA_Init>
 8000a46:	1e03      	subs	r3, r0, #0
 8000a48:	d001      	beq.n	8000a4e <HAL_I2C_MspInit+0xc6>
    {
      Error_Handler();
 8000a4a:	f7ff fcff 	bl	800044c <Error_Handler>
    }

    __HAL_LINKDMA(hi2c,hdmatx,hdma_i2c1_tx);
 8000a4e:	687b      	ldr	r3, [r7, #4]
 8000a50:	4a0b      	ldr	r2, [pc, #44]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a52:	639a      	str	r2, [r3, #56]	@ 0x38
 8000a54:	4b0a      	ldr	r3, [pc, #40]	@ (8000a80 <HAL_I2C_MspInit+0xf8>)
 8000a56:	687a      	ldr	r2, [r7, #4]
 8000a58:	625a      	str	r2, [r3, #36]	@ 0x24

    /* I2C1 interrupt Init */
    HAL_NVIC_SetPriority(I2C1_IRQn, 0, 0);
 8000a5a:	2200      	movs	r2, #0
 8000a5c:	2100      	movs	r1, #0
 8000a5e:	2017      	movs	r0, #23
 8000a60:	f000 fa72 	bl	8000f48 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C1_IRQn);
 8000a64:	2017      	movs	r0, #23
 8000a66:	f000 fa84 	bl	8000f72 <HAL_NVIC_EnableIRQ>

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 8000a6a:	46c0      	nop			@ (mov r8, r8)
 8000a6c:	46bd      	mov	sp, r7
 8000a6e:	b00b      	add	sp, #44	@ 0x2c
 8000a70:	bd90      	pop	{r4, r7, pc}
 8000a72:	46c0      	nop			@ (mov r8, r8)
 8000a74:	40005400 	.word	0x40005400
 8000a78:	40021000 	.word	0x40021000
 8000a7c:	48000400 	.word	0x48000400
 8000a80:	20000104 	.word	0x20000104
 8000a84:	4002001c 	.word	0x4002001c

08000a88 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000a8c:	46c0      	nop			@ (mov r8, r8)
 8000a8e:	e7fd      	b.n	8000a8c <NMI_Handler+0x4>

08000a90 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000a90:	b580      	push	{r7, lr}
 8000a92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000a94:	46c0      	nop			@ (mov r8, r8)
 8000a96:	e7fd      	b.n	8000a94 <HardFault_Handler+0x4>

08000a98 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000a98:	b580      	push	{r7, lr}
 8000a9a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8000a9c:	46c0      	nop			@ (mov r8, r8)
 8000a9e:	46bd      	mov	sp, r7
 8000aa0:	bd80      	pop	{r7, pc}

08000aa2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000aa2:	b580      	push	{r7, lr}
 8000aa4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000aa6:	46c0      	nop			@ (mov r8, r8)
 8000aa8:	46bd      	mov	sp, r7
 8000aaa:	bd80      	pop	{r7, pc}

08000aac <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000aac:	b580      	push	{r7, lr}
 8000aae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000ab0:	f000 f95e 	bl	8000d70 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000ab4:	46c0      	nop			@ (mov r8, r8)
 8000ab6:	46bd      	mov	sp, r7
 8000ab8:	bd80      	pop	{r7, pc}
	...

08000abc <DMA1_Channel2_3_IRQHandler>:

/**
  * @brief This function handles DMA1 channel 2 and 3 interrupts.
  */
void DMA1_Channel2_3_IRQHandler(void)
{
 8000abc:	b580      	push	{r7, lr}
 8000abe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */

  /* USER CODE END DMA1_Channel2_3_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 8000ac0:	4b03      	ldr	r3, [pc, #12]	@ (8000ad0 <DMA1_Channel2_3_IRQHandler+0x14>)
 8000ac2:	0018      	movs	r0, r3
 8000ac4:	f000 faff 	bl	80010c6 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */

  /* USER CODE END DMA1_Channel2_3_IRQn 1 */
}
 8000ac8:	46c0      	nop			@ (mov r8, r8)
 8000aca:	46bd      	mov	sp, r7
 8000acc:	bd80      	pop	{r7, pc}
 8000ace:	46c0      	nop			@ (mov r8, r8)
 8000ad0:	20000104 	.word	0x20000104

08000ad4 <I2C1_IRQHandler>:

/**
  * @brief This function handles I2C1 global interrupt.
  */
void I2C1_IRQHandler(void)
{
 8000ad4:	b580      	push	{r7, lr}
 8000ad6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN I2C1_IRQn 0 */

  /* USER CODE END I2C1_IRQn 0 */
  if (hi2c1.Instance->ISR & (I2C_FLAG_BERR | I2C_FLAG_ARLO | I2C_FLAG_OVR)) {
 8000ad8:	4b09      	ldr	r3, [pc, #36]	@ (8000b00 <I2C1_IRQHandler+0x2c>)
 8000ada:	681b      	ldr	r3, [r3, #0]
 8000adc:	699a      	ldr	r2, [r3, #24]
 8000ade:	23e0      	movs	r3, #224	@ 0xe0
 8000ae0:	00db      	lsls	r3, r3, #3
 8000ae2:	4013      	ands	r3, r2
 8000ae4:	d004      	beq.n	8000af0 <I2C1_IRQHandler+0x1c>
    HAL_I2C_ER_IRQHandler(&hi2c1);
 8000ae6:	4b06      	ldr	r3, [pc, #24]	@ (8000b00 <I2C1_IRQHandler+0x2c>)
 8000ae8:	0018      	movs	r0, r3
 8000aea:	f000 ff11 	bl	8001910 <HAL_I2C_ER_IRQHandler>
    HAL_I2C_EV_IRQHandler(&hi2c1);
  }
  /* USER CODE BEGIN I2C1_IRQn 1 */

  /* USER CODE END I2C1_IRQn 1 */
}
 8000aee:	e003      	b.n	8000af8 <I2C1_IRQHandler+0x24>
    HAL_I2C_EV_IRQHandler(&hi2c1);
 8000af0:	4b03      	ldr	r3, [pc, #12]	@ (8000b00 <I2C1_IRQHandler+0x2c>)
 8000af2:	0018      	movs	r0, r3
 8000af4:	f000 fef2 	bl	80018dc <HAL_I2C_EV_IRQHandler>
}
 8000af8:	46c0      	nop			@ (mov r8, r8)
 8000afa:	46bd      	mov	sp, r7
 8000afc:	bd80      	pop	{r7, pc}
 8000afe:	46c0      	nop			@ (mov r8, r8)
 8000b00:	200000b0 	.word	0x200000b0

08000b04 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000b04:	b580      	push	{r7, lr}
 8000b06:	af00      	add	r7, sp, #0
  return 1;
 8000b08:	2301      	movs	r3, #1
}
 8000b0a:	0018      	movs	r0, r3
 8000b0c:	46bd      	mov	sp, r7
 8000b0e:	bd80      	pop	{r7, pc}

08000b10 <_kill>:

int _kill(int pid, int sig)
{
 8000b10:	b580      	push	{r7, lr}
 8000b12:	b082      	sub	sp, #8
 8000b14:	af00      	add	r7, sp, #0
 8000b16:	6078      	str	r0, [r7, #4]
 8000b18:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000b1a:	f002 fed5 	bl	80038c8 <__errno>
 8000b1e:	0003      	movs	r3, r0
 8000b20:	2216      	movs	r2, #22
 8000b22:	601a      	str	r2, [r3, #0]
  return -1;
 8000b24:	2301      	movs	r3, #1
 8000b26:	425b      	negs	r3, r3
}
 8000b28:	0018      	movs	r0, r3
 8000b2a:	46bd      	mov	sp, r7
 8000b2c:	b002      	add	sp, #8
 8000b2e:	bd80      	pop	{r7, pc}

08000b30 <_exit>:

void _exit (int status)
{
 8000b30:	b580      	push	{r7, lr}
 8000b32:	b082      	sub	sp, #8
 8000b34:	af00      	add	r7, sp, #0
 8000b36:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8000b38:	2301      	movs	r3, #1
 8000b3a:	425a      	negs	r2, r3
 8000b3c:	687b      	ldr	r3, [r7, #4]
 8000b3e:	0011      	movs	r1, r2
 8000b40:	0018      	movs	r0, r3
 8000b42:	f7ff ffe5 	bl	8000b10 <_kill>
  while (1) {}    /* Make sure we hang here */
 8000b46:	46c0      	nop			@ (mov r8, r8)
 8000b48:	e7fd      	b.n	8000b46 <_exit+0x16>

08000b4a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000b4a:	b580      	push	{r7, lr}
 8000b4c:	b086      	sub	sp, #24
 8000b4e:	af00      	add	r7, sp, #0
 8000b50:	60f8      	str	r0, [r7, #12]
 8000b52:	60b9      	str	r1, [r7, #8]
 8000b54:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000b56:	2300      	movs	r3, #0
 8000b58:	617b      	str	r3, [r7, #20]
 8000b5a:	e00a      	b.n	8000b72 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000b5c:	e000      	b.n	8000b60 <_read+0x16>
 8000b5e:	bf00      	nop
 8000b60:	0001      	movs	r1, r0
 8000b62:	68bb      	ldr	r3, [r7, #8]
 8000b64:	1c5a      	adds	r2, r3, #1
 8000b66:	60ba      	str	r2, [r7, #8]
 8000b68:	b2ca      	uxtb	r2, r1
 8000b6a:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000b6c:	697b      	ldr	r3, [r7, #20]
 8000b6e:	3301      	adds	r3, #1
 8000b70:	617b      	str	r3, [r7, #20]
 8000b72:	697a      	ldr	r2, [r7, #20]
 8000b74:	687b      	ldr	r3, [r7, #4]
 8000b76:	429a      	cmp	r2, r3
 8000b78:	dbf0      	blt.n	8000b5c <_read+0x12>
  }

  return len;
 8000b7a:	687b      	ldr	r3, [r7, #4]
}
 8000b7c:	0018      	movs	r0, r3
 8000b7e:	46bd      	mov	sp, r7
 8000b80:	b006      	add	sp, #24
 8000b82:	bd80      	pop	{r7, pc}

08000b84 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000b84:	b580      	push	{r7, lr}
 8000b86:	b086      	sub	sp, #24
 8000b88:	af00      	add	r7, sp, #0
 8000b8a:	60f8      	str	r0, [r7, #12]
 8000b8c:	60b9      	str	r1, [r7, #8]
 8000b8e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000b90:	2300      	movs	r3, #0
 8000b92:	617b      	str	r3, [r7, #20]
 8000b94:	e009      	b.n	8000baa <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000b96:	68bb      	ldr	r3, [r7, #8]
 8000b98:	1c5a      	adds	r2, r3, #1
 8000b9a:	60ba      	str	r2, [r7, #8]
 8000b9c:	781b      	ldrb	r3, [r3, #0]
 8000b9e:	0018      	movs	r0, r3
 8000ba0:	e000      	b.n	8000ba4 <_write+0x20>
 8000ba2:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ba4:	697b      	ldr	r3, [r7, #20]
 8000ba6:	3301      	adds	r3, #1
 8000ba8:	617b      	str	r3, [r7, #20]
 8000baa:	697a      	ldr	r2, [r7, #20]
 8000bac:	687b      	ldr	r3, [r7, #4]
 8000bae:	429a      	cmp	r2, r3
 8000bb0:	dbf1      	blt.n	8000b96 <_write+0x12>
  }
  return len;
 8000bb2:	687b      	ldr	r3, [r7, #4]
}
 8000bb4:	0018      	movs	r0, r3
 8000bb6:	46bd      	mov	sp, r7
 8000bb8:	b006      	add	sp, #24
 8000bba:	bd80      	pop	{r7, pc}

08000bbc <_close>:

int _close(int file)
{
 8000bbc:	b580      	push	{r7, lr}
 8000bbe:	b082      	sub	sp, #8
 8000bc0:	af00      	add	r7, sp, #0
 8000bc2:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000bc4:	2301      	movs	r3, #1
 8000bc6:	425b      	negs	r3, r3
}
 8000bc8:	0018      	movs	r0, r3
 8000bca:	46bd      	mov	sp, r7
 8000bcc:	b002      	add	sp, #8
 8000bce:	bd80      	pop	{r7, pc}

08000bd0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000bd0:	b580      	push	{r7, lr}
 8000bd2:	b082      	sub	sp, #8
 8000bd4:	af00      	add	r7, sp, #0
 8000bd6:	6078      	str	r0, [r7, #4]
 8000bd8:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000bda:	683b      	ldr	r3, [r7, #0]
 8000bdc:	2280      	movs	r2, #128	@ 0x80
 8000bde:	0192      	lsls	r2, r2, #6
 8000be0:	605a      	str	r2, [r3, #4]
  return 0;
 8000be2:	2300      	movs	r3, #0
}
 8000be4:	0018      	movs	r0, r3
 8000be6:	46bd      	mov	sp, r7
 8000be8:	b002      	add	sp, #8
 8000bea:	bd80      	pop	{r7, pc}

08000bec <_isatty>:

int _isatty(int file)
{
 8000bec:	b580      	push	{r7, lr}
 8000bee:	b082      	sub	sp, #8
 8000bf0:	af00      	add	r7, sp, #0
 8000bf2:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000bf4:	2301      	movs	r3, #1
}
 8000bf6:	0018      	movs	r0, r3
 8000bf8:	46bd      	mov	sp, r7
 8000bfa:	b002      	add	sp, #8
 8000bfc:	bd80      	pop	{r7, pc}

08000bfe <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000bfe:	b580      	push	{r7, lr}
 8000c00:	b084      	sub	sp, #16
 8000c02:	af00      	add	r7, sp, #0
 8000c04:	60f8      	str	r0, [r7, #12]
 8000c06:	60b9      	str	r1, [r7, #8]
 8000c08:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000c0a:	2300      	movs	r3, #0
}
 8000c0c:	0018      	movs	r0, r3
 8000c0e:	46bd      	mov	sp, r7
 8000c10:	b004      	add	sp, #16
 8000c12:	bd80      	pop	{r7, pc}

08000c14 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000c14:	b580      	push	{r7, lr}
 8000c16:	b086      	sub	sp, #24
 8000c18:	af00      	add	r7, sp, #0
 8000c1a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000c1c:	4a14      	ldr	r2, [pc, #80]	@ (8000c70 <_sbrk+0x5c>)
 8000c1e:	4b15      	ldr	r3, [pc, #84]	@ (8000c74 <_sbrk+0x60>)
 8000c20:	1ad3      	subs	r3, r2, r3
 8000c22:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000c24:	697b      	ldr	r3, [r7, #20]
 8000c26:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000c28:	4b13      	ldr	r3, [pc, #76]	@ (8000c78 <_sbrk+0x64>)
 8000c2a:	681b      	ldr	r3, [r3, #0]
 8000c2c:	2b00      	cmp	r3, #0
 8000c2e:	d102      	bne.n	8000c36 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000c30:	4b11      	ldr	r3, [pc, #68]	@ (8000c78 <_sbrk+0x64>)
 8000c32:	4a12      	ldr	r2, [pc, #72]	@ (8000c7c <_sbrk+0x68>)
 8000c34:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000c36:	4b10      	ldr	r3, [pc, #64]	@ (8000c78 <_sbrk+0x64>)
 8000c38:	681a      	ldr	r2, [r3, #0]
 8000c3a:	687b      	ldr	r3, [r7, #4]
 8000c3c:	18d3      	adds	r3, r2, r3
 8000c3e:	693a      	ldr	r2, [r7, #16]
 8000c40:	429a      	cmp	r2, r3
 8000c42:	d207      	bcs.n	8000c54 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000c44:	f002 fe40 	bl	80038c8 <__errno>
 8000c48:	0003      	movs	r3, r0
 8000c4a:	220c      	movs	r2, #12
 8000c4c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000c4e:	2301      	movs	r3, #1
 8000c50:	425b      	negs	r3, r3
 8000c52:	e009      	b.n	8000c68 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000c54:	4b08      	ldr	r3, [pc, #32]	@ (8000c78 <_sbrk+0x64>)
 8000c56:	681b      	ldr	r3, [r3, #0]
 8000c58:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000c5a:	4b07      	ldr	r3, [pc, #28]	@ (8000c78 <_sbrk+0x64>)
 8000c5c:	681a      	ldr	r2, [r3, #0]
 8000c5e:	687b      	ldr	r3, [r7, #4]
 8000c60:	18d2      	adds	r2, r2, r3
 8000c62:	4b05      	ldr	r3, [pc, #20]	@ (8000c78 <_sbrk+0x64>)
 8000c64:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8000c66:	68fb      	ldr	r3, [r7, #12]
}
 8000c68:	0018      	movs	r0, r3
 8000c6a:	46bd      	mov	sp, r7
 8000c6c:	b006      	add	sp, #24
 8000c6e:	bd80      	pop	{r7, pc}
 8000c70:	20002000 	.word	0x20002000
 8000c74:	00000400 	.word	0x00000400
 8000c78:	20000570 	.word	0x20000570
 8000c7c:	200006c8 	.word	0x200006c8

08000c80 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000c80:	b580      	push	{r7, lr}
 8000c82:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8000c84:	46c0      	nop			@ (mov r8, r8)
 8000c86:	46bd      	mov	sp, r7
 8000c88:	bd80      	pop	{r7, pc}
	...

08000c8c <Reset_Handler>:
 8000c8c:	480d      	ldr	r0, [pc, #52]	@ (8000cc4 <LoopForever+0x2>)
 8000c8e:	4685      	mov	sp, r0
 8000c90:	f7ff fff6 	bl	8000c80 <SystemInit>
 8000c94:	480c      	ldr	r0, [pc, #48]	@ (8000cc8 <LoopForever+0x6>)
 8000c96:	490d      	ldr	r1, [pc, #52]	@ (8000ccc <LoopForever+0xa>)
 8000c98:	4a0d      	ldr	r2, [pc, #52]	@ (8000cd0 <LoopForever+0xe>)
 8000c9a:	2300      	movs	r3, #0
 8000c9c:	e002      	b.n	8000ca4 <LoopCopyDataInit>

08000c9e <CopyDataInit>:
 8000c9e:	58d4      	ldr	r4, [r2, r3]
 8000ca0:	50c4      	str	r4, [r0, r3]
 8000ca2:	3304      	adds	r3, #4

08000ca4 <LoopCopyDataInit>:
 8000ca4:	18c4      	adds	r4, r0, r3
 8000ca6:	428c      	cmp	r4, r1
 8000ca8:	d3f9      	bcc.n	8000c9e <CopyDataInit>
 8000caa:	4a0a      	ldr	r2, [pc, #40]	@ (8000cd4 <LoopForever+0x12>)
 8000cac:	4c0a      	ldr	r4, [pc, #40]	@ (8000cd8 <LoopForever+0x16>)
 8000cae:	2300      	movs	r3, #0
 8000cb0:	e001      	b.n	8000cb6 <LoopFillZerobss>

08000cb2 <FillZerobss>:
 8000cb2:	6013      	str	r3, [r2, #0]
 8000cb4:	3204      	adds	r2, #4

08000cb6 <LoopFillZerobss>:
 8000cb6:	42a2      	cmp	r2, r4
 8000cb8:	d3fb      	bcc.n	8000cb2 <FillZerobss>
 8000cba:	f002 fe0b 	bl	80038d4 <__libc_init_array>
 8000cbe:	f7ff fac1 	bl	8000244 <main>

08000cc2 <LoopForever>:
 8000cc2:	e7fe      	b.n	8000cc2 <LoopForever>
 8000cc4:	20002000 	.word	0x20002000
 8000cc8:	20000000 	.word	0x20000000
 8000ccc:	20000094 	.word	0x20000094
 8000cd0:	08004e50 	.word	0x08004e50
 8000cd4:	20000094 	.word	0x20000094
 8000cd8:	200006c4 	.word	0x200006c4

08000cdc <ADC1_IRQHandler>:
 8000cdc:	e7fe      	b.n	8000cdc <ADC1_IRQHandler>
	...

08000ce0 <HAL_Init>:
 8000ce0:	b580      	push	{r7, lr}
 8000ce2:	af00      	add	r7, sp, #0
 8000ce4:	4b07      	ldr	r3, [pc, #28]	@ (8000d04 <HAL_Init+0x24>)
 8000ce6:	681a      	ldr	r2, [r3, #0]
 8000ce8:	4b06      	ldr	r3, [pc, #24]	@ (8000d04 <HAL_Init+0x24>)
 8000cea:	2110      	movs	r1, #16
 8000cec:	430a      	orrs	r2, r1
 8000cee:	601a      	str	r2, [r3, #0]
 8000cf0:	2003      	movs	r0, #3
 8000cf2:	f000 f809 	bl	8000d08 <HAL_InitTick>
 8000cf6:	f7ff fe23 	bl	8000940 <HAL_MspInit>
 8000cfa:	2300      	movs	r3, #0
 8000cfc:	0018      	movs	r0, r3
 8000cfe:	46bd      	mov	sp, r7
 8000d00:	bd80      	pop	{r7, pc}
 8000d02:	46c0      	nop			@ (mov r8, r8)
 8000d04:	40022000 	.word	0x40022000

08000d08 <HAL_InitTick>:
 8000d08:	b590      	push	{r4, r7, lr}
 8000d0a:	b083      	sub	sp, #12
 8000d0c:	af00      	add	r7, sp, #0
 8000d0e:	6078      	str	r0, [r7, #4]
 8000d10:	4b14      	ldr	r3, [pc, #80]	@ (8000d64 <HAL_InitTick+0x5c>)
 8000d12:	681c      	ldr	r4, [r3, #0]
 8000d14:	4b14      	ldr	r3, [pc, #80]	@ (8000d68 <HAL_InitTick+0x60>)
 8000d16:	781b      	ldrb	r3, [r3, #0]
 8000d18:	0019      	movs	r1, r3
 8000d1a:	23fa      	movs	r3, #250	@ 0xfa
 8000d1c:	0098      	lsls	r0, r3, #2
 8000d1e:	f7ff fa05 	bl	800012c <__udivsi3>
 8000d22:	0003      	movs	r3, r0
 8000d24:	0019      	movs	r1, r3
 8000d26:	0020      	movs	r0, r4
 8000d28:	f7ff fa00 	bl	800012c <__udivsi3>
 8000d2c:	0003      	movs	r3, r0
 8000d2e:	0018      	movs	r0, r3
 8000d30:	f000 f92f 	bl	8000f92 <HAL_SYSTICK_Config>
 8000d34:	1e03      	subs	r3, r0, #0
 8000d36:	d001      	beq.n	8000d3c <HAL_InitTick+0x34>
 8000d38:	2301      	movs	r3, #1
 8000d3a:	e00f      	b.n	8000d5c <HAL_InitTick+0x54>
 8000d3c:	687b      	ldr	r3, [r7, #4]
 8000d3e:	2b03      	cmp	r3, #3
 8000d40:	d80b      	bhi.n	8000d5a <HAL_InitTick+0x52>
 8000d42:	6879      	ldr	r1, [r7, #4]
 8000d44:	2301      	movs	r3, #1
 8000d46:	425b      	negs	r3, r3
 8000d48:	2200      	movs	r2, #0
 8000d4a:	0018      	movs	r0, r3
 8000d4c:	f000 f8fc 	bl	8000f48 <HAL_NVIC_SetPriority>
 8000d50:	4b06      	ldr	r3, [pc, #24]	@ (8000d6c <HAL_InitTick+0x64>)
 8000d52:	687a      	ldr	r2, [r7, #4]
 8000d54:	601a      	str	r2, [r3, #0]
 8000d56:	2300      	movs	r3, #0
 8000d58:	e000      	b.n	8000d5c <HAL_InitTick+0x54>
 8000d5a:	2301      	movs	r3, #1
 8000d5c:	0018      	movs	r0, r3
 8000d5e:	46bd      	mov	sp, r7
 8000d60:	b003      	add	sp, #12
 8000d62:	bd90      	pop	{r4, r7, pc}
 8000d64:	2000002c 	.word	0x2000002c
 8000d68:	20000034 	.word	0x20000034
 8000d6c:	20000030 	.word	0x20000030

08000d70 <HAL_IncTick>:
 8000d70:	b580      	push	{r7, lr}
 8000d72:	af00      	add	r7, sp, #0
 8000d74:	4b05      	ldr	r3, [pc, #20]	@ (8000d8c <HAL_IncTick+0x1c>)
 8000d76:	781b      	ldrb	r3, [r3, #0]
 8000d78:	001a      	movs	r2, r3
 8000d7a:	4b05      	ldr	r3, [pc, #20]	@ (8000d90 <HAL_IncTick+0x20>)
 8000d7c:	681b      	ldr	r3, [r3, #0]
 8000d7e:	18d2      	adds	r2, r2, r3
 8000d80:	4b03      	ldr	r3, [pc, #12]	@ (8000d90 <HAL_IncTick+0x20>)
 8000d82:	601a      	str	r2, [r3, #0]
 8000d84:	46c0      	nop			@ (mov r8, r8)
 8000d86:	46bd      	mov	sp, r7
 8000d88:	bd80      	pop	{r7, pc}
 8000d8a:	46c0      	nop			@ (mov r8, r8)
 8000d8c:	20000034 	.word	0x20000034
 8000d90:	20000574 	.word	0x20000574

08000d94 <HAL_GetTick>:
 8000d94:	b580      	push	{r7, lr}
 8000d96:	af00      	add	r7, sp, #0
 8000d98:	4b02      	ldr	r3, [pc, #8]	@ (8000da4 <HAL_GetTick+0x10>)
 8000d9a:	681b      	ldr	r3, [r3, #0]
 8000d9c:	0018      	movs	r0, r3
 8000d9e:	46bd      	mov	sp, r7
 8000da0:	bd80      	pop	{r7, pc}
 8000da2:	46c0      	nop			@ (mov r8, r8)
 8000da4:	20000574 	.word	0x20000574

08000da8 <HAL_Delay>:
 8000da8:	b580      	push	{r7, lr}
 8000daa:	b084      	sub	sp, #16
 8000dac:	af00      	add	r7, sp, #0
 8000dae:	6078      	str	r0, [r7, #4]
 8000db0:	f7ff fff0 	bl	8000d94 <HAL_GetTick>
 8000db4:	0003      	movs	r3, r0
 8000db6:	60bb      	str	r3, [r7, #8]
 8000db8:	687b      	ldr	r3, [r7, #4]
 8000dba:	60fb      	str	r3, [r7, #12]
 8000dbc:	68fb      	ldr	r3, [r7, #12]
 8000dbe:	3301      	adds	r3, #1
 8000dc0:	d005      	beq.n	8000dce <HAL_Delay+0x26>
 8000dc2:	4b0a      	ldr	r3, [pc, #40]	@ (8000dec <HAL_Delay+0x44>)
 8000dc4:	781b      	ldrb	r3, [r3, #0]
 8000dc6:	001a      	movs	r2, r3
 8000dc8:	68fb      	ldr	r3, [r7, #12]
 8000dca:	189b      	adds	r3, r3, r2
 8000dcc:	60fb      	str	r3, [r7, #12]
 8000dce:	46c0      	nop			@ (mov r8, r8)
 8000dd0:	f7ff ffe0 	bl	8000d94 <HAL_GetTick>
 8000dd4:	0002      	movs	r2, r0
 8000dd6:	68bb      	ldr	r3, [r7, #8]
 8000dd8:	1ad3      	subs	r3, r2, r3
 8000dda:	68fa      	ldr	r2, [r7, #12]
 8000ddc:	429a      	cmp	r2, r3
 8000dde:	d8f7      	bhi.n	8000dd0 <HAL_Delay+0x28>
 8000de0:	46c0      	nop			@ (mov r8, r8)
 8000de2:	46c0      	nop			@ (mov r8, r8)
 8000de4:	46bd      	mov	sp, r7
 8000de6:	b004      	add	sp, #16
 8000de8:	bd80      	pop	{r7, pc}
 8000dea:	46c0      	nop			@ (mov r8, r8)
 8000dec:	20000034 	.word	0x20000034

08000df0 <__NVIC_EnableIRQ>:
 8000df0:	b580      	push	{r7, lr}
 8000df2:	b082      	sub	sp, #8
 8000df4:	af00      	add	r7, sp, #0
 8000df6:	0002      	movs	r2, r0
 8000df8:	1dfb      	adds	r3, r7, #7
 8000dfa:	701a      	strb	r2, [r3, #0]
 8000dfc:	1dfb      	adds	r3, r7, #7
 8000dfe:	781b      	ldrb	r3, [r3, #0]
 8000e00:	2b7f      	cmp	r3, #127	@ 0x7f
 8000e02:	d809      	bhi.n	8000e18 <__NVIC_EnableIRQ+0x28>
 8000e04:	1dfb      	adds	r3, r7, #7
 8000e06:	781b      	ldrb	r3, [r3, #0]
 8000e08:	001a      	movs	r2, r3
 8000e0a:	231f      	movs	r3, #31
 8000e0c:	401a      	ands	r2, r3
 8000e0e:	4b04      	ldr	r3, [pc, #16]	@ (8000e20 <__NVIC_EnableIRQ+0x30>)
 8000e10:	2101      	movs	r1, #1
 8000e12:	4091      	lsls	r1, r2
 8000e14:	000a      	movs	r2, r1
 8000e16:	601a      	str	r2, [r3, #0]
 8000e18:	46c0      	nop			@ (mov r8, r8)
 8000e1a:	46bd      	mov	sp, r7
 8000e1c:	b002      	add	sp, #8
 8000e1e:	bd80      	pop	{r7, pc}
 8000e20:	e000e100 	.word	0xe000e100

08000e24 <__NVIC_SetPriority>:
 8000e24:	b590      	push	{r4, r7, lr}
 8000e26:	b083      	sub	sp, #12
 8000e28:	af00      	add	r7, sp, #0
 8000e2a:	0002      	movs	r2, r0
 8000e2c:	6039      	str	r1, [r7, #0]
 8000e2e:	1dfb      	adds	r3, r7, #7
 8000e30:	701a      	strb	r2, [r3, #0]
 8000e32:	1dfb      	adds	r3, r7, #7
 8000e34:	781b      	ldrb	r3, [r3, #0]
 8000e36:	2b7f      	cmp	r3, #127	@ 0x7f
 8000e38:	d828      	bhi.n	8000e8c <__NVIC_SetPriority+0x68>
 8000e3a:	4a2f      	ldr	r2, [pc, #188]	@ (8000ef8 <__NVIC_SetPriority+0xd4>)
 8000e3c:	1dfb      	adds	r3, r7, #7
 8000e3e:	781b      	ldrb	r3, [r3, #0]
 8000e40:	b25b      	sxtb	r3, r3
 8000e42:	089b      	lsrs	r3, r3, #2
 8000e44:	33c0      	adds	r3, #192	@ 0xc0
 8000e46:	009b      	lsls	r3, r3, #2
 8000e48:	589b      	ldr	r3, [r3, r2]
 8000e4a:	1dfa      	adds	r2, r7, #7
 8000e4c:	7812      	ldrb	r2, [r2, #0]
 8000e4e:	0011      	movs	r1, r2
 8000e50:	2203      	movs	r2, #3
 8000e52:	400a      	ands	r2, r1
 8000e54:	00d2      	lsls	r2, r2, #3
 8000e56:	21ff      	movs	r1, #255	@ 0xff
 8000e58:	4091      	lsls	r1, r2
 8000e5a:	000a      	movs	r2, r1
 8000e5c:	43d2      	mvns	r2, r2
 8000e5e:	401a      	ands	r2, r3
 8000e60:	0011      	movs	r1, r2
 8000e62:	683b      	ldr	r3, [r7, #0]
 8000e64:	019b      	lsls	r3, r3, #6
 8000e66:	22ff      	movs	r2, #255	@ 0xff
 8000e68:	401a      	ands	r2, r3
 8000e6a:	1dfb      	adds	r3, r7, #7
 8000e6c:	781b      	ldrb	r3, [r3, #0]
 8000e6e:	0018      	movs	r0, r3
 8000e70:	2303      	movs	r3, #3
 8000e72:	4003      	ands	r3, r0
 8000e74:	00db      	lsls	r3, r3, #3
 8000e76:	409a      	lsls	r2, r3
 8000e78:	481f      	ldr	r0, [pc, #124]	@ (8000ef8 <__NVIC_SetPriority+0xd4>)
 8000e7a:	1dfb      	adds	r3, r7, #7
 8000e7c:	781b      	ldrb	r3, [r3, #0]
 8000e7e:	b25b      	sxtb	r3, r3
 8000e80:	089b      	lsrs	r3, r3, #2
 8000e82:	430a      	orrs	r2, r1
 8000e84:	33c0      	adds	r3, #192	@ 0xc0
 8000e86:	009b      	lsls	r3, r3, #2
 8000e88:	501a      	str	r2, [r3, r0]
 8000e8a:	e031      	b.n	8000ef0 <__NVIC_SetPriority+0xcc>
 8000e8c:	4a1b      	ldr	r2, [pc, #108]	@ (8000efc <__NVIC_SetPriority+0xd8>)
 8000e8e:	1dfb      	adds	r3, r7, #7
 8000e90:	781b      	ldrb	r3, [r3, #0]
 8000e92:	0019      	movs	r1, r3
 8000e94:	230f      	movs	r3, #15
 8000e96:	400b      	ands	r3, r1
 8000e98:	3b08      	subs	r3, #8
 8000e9a:	089b      	lsrs	r3, r3, #2
 8000e9c:	3306      	adds	r3, #6
 8000e9e:	009b      	lsls	r3, r3, #2
 8000ea0:	18d3      	adds	r3, r2, r3
 8000ea2:	3304      	adds	r3, #4
 8000ea4:	681b      	ldr	r3, [r3, #0]
 8000ea6:	1dfa      	adds	r2, r7, #7
 8000ea8:	7812      	ldrb	r2, [r2, #0]
 8000eaa:	0011      	movs	r1, r2
 8000eac:	2203      	movs	r2, #3
 8000eae:	400a      	ands	r2, r1
 8000eb0:	00d2      	lsls	r2, r2, #3
 8000eb2:	21ff      	movs	r1, #255	@ 0xff
 8000eb4:	4091      	lsls	r1, r2
 8000eb6:	000a      	movs	r2, r1
 8000eb8:	43d2      	mvns	r2, r2
 8000eba:	401a      	ands	r2, r3
 8000ebc:	0011      	movs	r1, r2
 8000ebe:	683b      	ldr	r3, [r7, #0]
 8000ec0:	019b      	lsls	r3, r3, #6
 8000ec2:	22ff      	movs	r2, #255	@ 0xff
 8000ec4:	401a      	ands	r2, r3
 8000ec6:	1dfb      	adds	r3, r7, #7
 8000ec8:	781b      	ldrb	r3, [r3, #0]
 8000eca:	0018      	movs	r0, r3
 8000ecc:	2303      	movs	r3, #3
 8000ece:	4003      	ands	r3, r0
 8000ed0:	00db      	lsls	r3, r3, #3
 8000ed2:	409a      	lsls	r2, r3
 8000ed4:	4809      	ldr	r0, [pc, #36]	@ (8000efc <__NVIC_SetPriority+0xd8>)
 8000ed6:	1dfb      	adds	r3, r7, #7
 8000ed8:	781b      	ldrb	r3, [r3, #0]
 8000eda:	001c      	movs	r4, r3
 8000edc:	230f      	movs	r3, #15
 8000ede:	4023      	ands	r3, r4
 8000ee0:	3b08      	subs	r3, #8
 8000ee2:	089b      	lsrs	r3, r3, #2
 8000ee4:	430a      	orrs	r2, r1
 8000ee6:	3306      	adds	r3, #6
 8000ee8:	009b      	lsls	r3, r3, #2
 8000eea:	18c3      	adds	r3, r0, r3
 8000eec:	3304      	adds	r3, #4
 8000eee:	601a      	str	r2, [r3, #0]
 8000ef0:	46c0      	nop			@ (mov r8, r8)
 8000ef2:	46bd      	mov	sp, r7
 8000ef4:	b003      	add	sp, #12
 8000ef6:	bd90      	pop	{r4, r7, pc}
 8000ef8:	e000e100 	.word	0xe000e100
 8000efc:	e000ed00 	.word	0xe000ed00

08000f00 <SysTick_Config>:
 8000f00:	b580      	push	{r7, lr}
 8000f02:	b082      	sub	sp, #8
 8000f04:	af00      	add	r7, sp, #0
 8000f06:	6078      	str	r0, [r7, #4]
 8000f08:	687b      	ldr	r3, [r7, #4]
 8000f0a:	1e5a      	subs	r2, r3, #1
 8000f0c:	2380      	movs	r3, #128	@ 0x80
 8000f0e:	045b      	lsls	r3, r3, #17
 8000f10:	429a      	cmp	r2, r3
 8000f12:	d301      	bcc.n	8000f18 <SysTick_Config+0x18>
 8000f14:	2301      	movs	r3, #1
 8000f16:	e010      	b.n	8000f3a <SysTick_Config+0x3a>
 8000f18:	4b0a      	ldr	r3, [pc, #40]	@ (8000f44 <SysTick_Config+0x44>)
 8000f1a:	687a      	ldr	r2, [r7, #4]
 8000f1c:	3a01      	subs	r2, #1
 8000f1e:	605a      	str	r2, [r3, #4]
 8000f20:	2301      	movs	r3, #1
 8000f22:	425b      	negs	r3, r3
 8000f24:	2103      	movs	r1, #3
 8000f26:	0018      	movs	r0, r3
 8000f28:	f7ff ff7c 	bl	8000e24 <__NVIC_SetPriority>
 8000f2c:	4b05      	ldr	r3, [pc, #20]	@ (8000f44 <SysTick_Config+0x44>)
 8000f2e:	2200      	movs	r2, #0
 8000f30:	609a      	str	r2, [r3, #8]
 8000f32:	4b04      	ldr	r3, [pc, #16]	@ (8000f44 <SysTick_Config+0x44>)
 8000f34:	2207      	movs	r2, #7
 8000f36:	601a      	str	r2, [r3, #0]
 8000f38:	2300      	movs	r3, #0
 8000f3a:	0018      	movs	r0, r3
 8000f3c:	46bd      	mov	sp, r7
 8000f3e:	b002      	add	sp, #8
 8000f40:	bd80      	pop	{r7, pc}
 8000f42:	46c0      	nop			@ (mov r8, r8)
 8000f44:	e000e010 	.word	0xe000e010

08000f48 <HAL_NVIC_SetPriority>:
 8000f48:	b580      	push	{r7, lr}
 8000f4a:	b084      	sub	sp, #16
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	60b9      	str	r1, [r7, #8]
 8000f50:	607a      	str	r2, [r7, #4]
 8000f52:	210f      	movs	r1, #15
 8000f54:	187b      	adds	r3, r7, r1
 8000f56:	1c02      	adds	r2, r0, #0
 8000f58:	701a      	strb	r2, [r3, #0]
 8000f5a:	68ba      	ldr	r2, [r7, #8]
 8000f5c:	187b      	adds	r3, r7, r1
 8000f5e:	781b      	ldrb	r3, [r3, #0]
 8000f60:	b25b      	sxtb	r3, r3
 8000f62:	0011      	movs	r1, r2
 8000f64:	0018      	movs	r0, r3
 8000f66:	f7ff ff5d 	bl	8000e24 <__NVIC_SetPriority>
 8000f6a:	46c0      	nop			@ (mov r8, r8)
 8000f6c:	46bd      	mov	sp, r7
 8000f6e:	b004      	add	sp, #16
 8000f70:	bd80      	pop	{r7, pc}

08000f72 <HAL_NVIC_EnableIRQ>:
 8000f72:	b580      	push	{r7, lr}
 8000f74:	b082      	sub	sp, #8
 8000f76:	af00      	add	r7, sp, #0
 8000f78:	0002      	movs	r2, r0
 8000f7a:	1dfb      	adds	r3, r7, #7
 8000f7c:	701a      	strb	r2, [r3, #0]
 8000f7e:	1dfb      	adds	r3, r7, #7
 8000f80:	781b      	ldrb	r3, [r3, #0]
 8000f82:	b25b      	sxtb	r3, r3
 8000f84:	0018      	movs	r0, r3
 8000f86:	f7ff ff33 	bl	8000df0 <__NVIC_EnableIRQ>
 8000f8a:	46c0      	nop			@ (mov r8, r8)
 8000f8c:	46bd      	mov	sp, r7
 8000f8e:	b002      	add	sp, #8
 8000f90:	bd80      	pop	{r7, pc}

08000f92 <HAL_SYSTICK_Config>:
 8000f92:	b580      	push	{r7, lr}
 8000f94:	b082      	sub	sp, #8
 8000f96:	af00      	add	r7, sp, #0
 8000f98:	6078      	str	r0, [r7, #4]
 8000f9a:	687b      	ldr	r3, [r7, #4]
 8000f9c:	0018      	movs	r0, r3
 8000f9e:	f7ff ffaf 	bl	8000f00 <SysTick_Config>
 8000fa2:	0003      	movs	r3, r0
 8000fa4:	0018      	movs	r0, r3
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	b002      	add	sp, #8
 8000faa:	bd80      	pop	{r7, pc}

08000fac <HAL_DMA_Init>:
 8000fac:	b580      	push	{r7, lr}
 8000fae:	b084      	sub	sp, #16
 8000fb0:	af00      	add	r7, sp, #0
 8000fb2:	6078      	str	r0, [r7, #4]
 8000fb4:	2300      	movs	r3, #0
 8000fb6:	60fb      	str	r3, [r7, #12]
 8000fb8:	687b      	ldr	r3, [r7, #4]
 8000fba:	2b00      	cmp	r3, #0
 8000fbc:	d101      	bne.n	8000fc2 <HAL_DMA_Init+0x16>
 8000fbe:	2301      	movs	r3, #1
 8000fc0:	e036      	b.n	8001030 <HAL_DMA_Init+0x84>
 8000fc2:	687b      	ldr	r3, [r7, #4]
 8000fc4:	2221      	movs	r2, #33	@ 0x21
 8000fc6:	2102      	movs	r1, #2
 8000fc8:	5499      	strb	r1, [r3, r2]
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	681b      	ldr	r3, [r3, #0]
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	60fb      	str	r3, [r7, #12]
 8000fd2:	68fb      	ldr	r3, [r7, #12]
 8000fd4:	4a18      	ldr	r2, [pc, #96]	@ (8001038 <HAL_DMA_Init+0x8c>)
 8000fd6:	4013      	ands	r3, r2
 8000fd8:	60fb      	str	r3, [r7, #12]
 8000fda:	687b      	ldr	r3, [r7, #4]
 8000fdc:	685a      	ldr	r2, [r3, #4]
 8000fde:	687b      	ldr	r3, [r7, #4]
 8000fe0:	689b      	ldr	r3, [r3, #8]
 8000fe2:	431a      	orrs	r2, r3
 8000fe4:	687b      	ldr	r3, [r7, #4]
 8000fe6:	68db      	ldr	r3, [r3, #12]
 8000fe8:	431a      	orrs	r2, r3
 8000fea:	687b      	ldr	r3, [r7, #4]
 8000fec:	691b      	ldr	r3, [r3, #16]
 8000fee:	431a      	orrs	r2, r3
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	695b      	ldr	r3, [r3, #20]
 8000ff4:	431a      	orrs	r2, r3
 8000ff6:	687b      	ldr	r3, [r7, #4]
 8000ff8:	699b      	ldr	r3, [r3, #24]
 8000ffa:	431a      	orrs	r2, r3
 8000ffc:	687b      	ldr	r3, [r7, #4]
 8000ffe:	69db      	ldr	r3, [r3, #28]
 8001000:	4313      	orrs	r3, r2
 8001002:	68fa      	ldr	r2, [r7, #12]
 8001004:	4313      	orrs	r3, r2
 8001006:	60fb      	str	r3, [r7, #12]
 8001008:	687b      	ldr	r3, [r7, #4]
 800100a:	681b      	ldr	r3, [r3, #0]
 800100c:	68fa      	ldr	r2, [r7, #12]
 800100e:	601a      	str	r2, [r3, #0]
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	0018      	movs	r0, r3
 8001014:	f000 f906 	bl	8001224 <DMA_CalcBaseAndBitshift>
 8001018:	687b      	ldr	r3, [r7, #4]
 800101a:	2200      	movs	r2, #0
 800101c:	639a      	str	r2, [r3, #56]	@ 0x38
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	2221      	movs	r2, #33	@ 0x21
 8001022:	2101      	movs	r1, #1
 8001024:	5499      	strb	r1, [r3, r2]
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	2220      	movs	r2, #32
 800102a:	2100      	movs	r1, #0
 800102c:	5499      	strb	r1, [r3, r2]
 800102e:	2300      	movs	r3, #0
 8001030:	0018      	movs	r0, r3
 8001032:	46bd      	mov	sp, r7
 8001034:	b004      	add	sp, #16
 8001036:	bd80      	pop	{r7, pc}
 8001038:	ffffc00f 	.word	0xffffc00f

0800103c <HAL_DMA_Abort_IT>:
 800103c:	b580      	push	{r7, lr}
 800103e:	b084      	sub	sp, #16
 8001040:	af00      	add	r7, sp, #0
 8001042:	6078      	str	r0, [r7, #4]
 8001044:	210f      	movs	r1, #15
 8001046:	187b      	adds	r3, r7, r1
 8001048:	2200      	movs	r2, #0
 800104a:	701a      	strb	r2, [r3, #0]
 800104c:	687b      	ldr	r3, [r7, #4]
 800104e:	2221      	movs	r2, #33	@ 0x21
 8001050:	5c9b      	ldrb	r3, [r3, r2]
 8001052:	b2db      	uxtb	r3, r3
 8001054:	2b02      	cmp	r3, #2
 8001056:	d006      	beq.n	8001066 <HAL_DMA_Abort_IT+0x2a>
 8001058:	687b      	ldr	r3, [r7, #4]
 800105a:	2204      	movs	r2, #4
 800105c:	639a      	str	r2, [r3, #56]	@ 0x38
 800105e:	187b      	adds	r3, r7, r1
 8001060:	2201      	movs	r2, #1
 8001062:	701a      	strb	r2, [r3, #0]
 8001064:	e028      	b.n	80010b8 <HAL_DMA_Abort_IT+0x7c>
 8001066:	687b      	ldr	r3, [r7, #4]
 8001068:	681b      	ldr	r3, [r3, #0]
 800106a:	681a      	ldr	r2, [r3, #0]
 800106c:	687b      	ldr	r3, [r7, #4]
 800106e:	681b      	ldr	r3, [r3, #0]
 8001070:	210e      	movs	r1, #14
 8001072:	438a      	bics	r2, r1
 8001074:	601a      	str	r2, [r3, #0]
 8001076:	687b      	ldr	r3, [r7, #4]
 8001078:	681b      	ldr	r3, [r3, #0]
 800107a:	681a      	ldr	r2, [r3, #0]
 800107c:	687b      	ldr	r3, [r7, #4]
 800107e:	681b      	ldr	r3, [r3, #0]
 8001080:	2101      	movs	r1, #1
 8001082:	438a      	bics	r2, r1
 8001084:	601a      	str	r2, [r3, #0]
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800108a:	687b      	ldr	r3, [r7, #4]
 800108c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800108e:	2101      	movs	r1, #1
 8001090:	4091      	lsls	r1, r2
 8001092:	000a      	movs	r2, r1
 8001094:	605a      	str	r2, [r3, #4]
 8001096:	687b      	ldr	r3, [r7, #4]
 8001098:	2221      	movs	r2, #33	@ 0x21
 800109a:	2101      	movs	r1, #1
 800109c:	5499      	strb	r1, [r3, r2]
 800109e:	687b      	ldr	r3, [r7, #4]
 80010a0:	2220      	movs	r2, #32
 80010a2:	2100      	movs	r1, #0
 80010a4:	5499      	strb	r1, [r3, r2]
 80010a6:	687b      	ldr	r3, [r7, #4]
 80010a8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80010aa:	2b00      	cmp	r3, #0
 80010ac:	d004      	beq.n	80010b8 <HAL_DMA_Abort_IT+0x7c>
 80010ae:	687b      	ldr	r3, [r7, #4]
 80010b0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80010b2:	687a      	ldr	r2, [r7, #4]
 80010b4:	0010      	movs	r0, r2
 80010b6:	4798      	blx	r3
 80010b8:	230f      	movs	r3, #15
 80010ba:	18fb      	adds	r3, r7, r3
 80010bc:	781b      	ldrb	r3, [r3, #0]
 80010be:	0018      	movs	r0, r3
 80010c0:	46bd      	mov	sp, r7
 80010c2:	b004      	add	sp, #16
 80010c4:	bd80      	pop	{r7, pc}

080010c6 <HAL_DMA_IRQHandler>:
 80010c6:	b580      	push	{r7, lr}
 80010c8:	b084      	sub	sp, #16
 80010ca:	af00      	add	r7, sp, #0
 80010cc:	6078      	str	r0, [r7, #4]
 80010ce:	687b      	ldr	r3, [r7, #4]
 80010d0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80010d2:	681b      	ldr	r3, [r3, #0]
 80010d4:	60fb      	str	r3, [r7, #12]
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	681b      	ldr	r3, [r3, #0]
 80010da:	681b      	ldr	r3, [r3, #0]
 80010dc:	60bb      	str	r3, [r7, #8]
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80010e2:	2204      	movs	r2, #4
 80010e4:	409a      	lsls	r2, r3
 80010e6:	0013      	movs	r3, r2
 80010e8:	68fa      	ldr	r2, [r7, #12]
 80010ea:	4013      	ands	r3, r2
 80010ec:	d024      	beq.n	8001138 <HAL_DMA_IRQHandler+0x72>
 80010ee:	68bb      	ldr	r3, [r7, #8]
 80010f0:	2204      	movs	r2, #4
 80010f2:	4013      	ands	r3, r2
 80010f4:	d020      	beq.n	8001138 <HAL_DMA_IRQHandler+0x72>
 80010f6:	687b      	ldr	r3, [r7, #4]
 80010f8:	681b      	ldr	r3, [r3, #0]
 80010fa:	681b      	ldr	r3, [r3, #0]
 80010fc:	2220      	movs	r2, #32
 80010fe:	4013      	ands	r3, r2
 8001100:	d107      	bne.n	8001112 <HAL_DMA_IRQHandler+0x4c>
 8001102:	687b      	ldr	r3, [r7, #4]
 8001104:	681b      	ldr	r3, [r3, #0]
 8001106:	681a      	ldr	r2, [r3, #0]
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	681b      	ldr	r3, [r3, #0]
 800110c:	2104      	movs	r1, #4
 800110e:	438a      	bics	r2, r1
 8001110:	601a      	str	r2, [r3, #0]
 8001112:	687b      	ldr	r3, [r7, #4]
 8001114:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001116:	687b      	ldr	r3, [r7, #4]
 8001118:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800111a:	2104      	movs	r1, #4
 800111c:	4091      	lsls	r1, r2
 800111e:	000a      	movs	r2, r1
 8001120:	605a      	str	r2, [r3, #4]
 8001122:	687b      	ldr	r3, [r7, #4]
 8001124:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001126:	2b00      	cmp	r3, #0
 8001128:	d100      	bne.n	800112c <HAL_DMA_IRQHandler+0x66>
 800112a:	e06a      	b.n	8001202 <HAL_DMA_IRQHandler+0x13c>
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001130:	687a      	ldr	r2, [r7, #4]
 8001132:	0010      	movs	r0, r2
 8001134:	4798      	blx	r3
 8001136:	e064      	b.n	8001202 <HAL_DMA_IRQHandler+0x13c>
 8001138:	687b      	ldr	r3, [r7, #4]
 800113a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800113c:	2202      	movs	r2, #2
 800113e:	409a      	lsls	r2, r3
 8001140:	0013      	movs	r3, r2
 8001142:	68fa      	ldr	r2, [r7, #12]
 8001144:	4013      	ands	r3, r2
 8001146:	d02b      	beq.n	80011a0 <HAL_DMA_IRQHandler+0xda>
 8001148:	68bb      	ldr	r3, [r7, #8]
 800114a:	2202      	movs	r2, #2
 800114c:	4013      	ands	r3, r2
 800114e:	d027      	beq.n	80011a0 <HAL_DMA_IRQHandler+0xda>
 8001150:	687b      	ldr	r3, [r7, #4]
 8001152:	681b      	ldr	r3, [r3, #0]
 8001154:	681b      	ldr	r3, [r3, #0]
 8001156:	2220      	movs	r2, #32
 8001158:	4013      	ands	r3, r2
 800115a:	d10b      	bne.n	8001174 <HAL_DMA_IRQHandler+0xae>
 800115c:	687b      	ldr	r3, [r7, #4]
 800115e:	681b      	ldr	r3, [r3, #0]
 8001160:	681a      	ldr	r2, [r3, #0]
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	681b      	ldr	r3, [r3, #0]
 8001166:	210a      	movs	r1, #10
 8001168:	438a      	bics	r2, r1
 800116a:	601a      	str	r2, [r3, #0]
 800116c:	687b      	ldr	r3, [r7, #4]
 800116e:	2221      	movs	r2, #33	@ 0x21
 8001170:	2101      	movs	r1, #1
 8001172:	5499      	strb	r1, [r3, r2]
 8001174:	687b      	ldr	r3, [r7, #4]
 8001176:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8001178:	687b      	ldr	r3, [r7, #4]
 800117a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800117c:	2102      	movs	r1, #2
 800117e:	4091      	lsls	r1, r2
 8001180:	000a      	movs	r2, r1
 8001182:	605a      	str	r2, [r3, #4]
 8001184:	687b      	ldr	r3, [r7, #4]
 8001186:	2220      	movs	r2, #32
 8001188:	2100      	movs	r1, #0
 800118a:	5499      	strb	r1, [r3, r2]
 800118c:	687b      	ldr	r3, [r7, #4]
 800118e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001190:	2b00      	cmp	r3, #0
 8001192:	d036      	beq.n	8001202 <HAL_DMA_IRQHandler+0x13c>
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001198:	687a      	ldr	r2, [r7, #4]
 800119a:	0010      	movs	r0, r2
 800119c:	4798      	blx	r3
 800119e:	e030      	b.n	8001202 <HAL_DMA_IRQHandler+0x13c>
 80011a0:	687b      	ldr	r3, [r7, #4]
 80011a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011a4:	2208      	movs	r2, #8
 80011a6:	409a      	lsls	r2, r3
 80011a8:	0013      	movs	r3, r2
 80011aa:	68fa      	ldr	r2, [r7, #12]
 80011ac:	4013      	ands	r3, r2
 80011ae:	d028      	beq.n	8001202 <HAL_DMA_IRQHandler+0x13c>
 80011b0:	68bb      	ldr	r3, [r7, #8]
 80011b2:	2208      	movs	r2, #8
 80011b4:	4013      	ands	r3, r2
 80011b6:	d024      	beq.n	8001202 <HAL_DMA_IRQHandler+0x13c>
 80011b8:	687b      	ldr	r3, [r7, #4]
 80011ba:	681b      	ldr	r3, [r3, #0]
 80011bc:	681a      	ldr	r2, [r3, #0]
 80011be:	687b      	ldr	r3, [r7, #4]
 80011c0:	681b      	ldr	r3, [r3, #0]
 80011c2:	210e      	movs	r1, #14
 80011c4:	438a      	bics	r2, r1
 80011c6:	601a      	str	r2, [r3, #0]
 80011c8:	687b      	ldr	r3, [r7, #4]
 80011ca:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80011cc:	687b      	ldr	r3, [r7, #4]
 80011ce:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80011d0:	2101      	movs	r1, #1
 80011d2:	4091      	lsls	r1, r2
 80011d4:	000a      	movs	r2, r1
 80011d6:	605a      	str	r2, [r3, #4]
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	2201      	movs	r2, #1
 80011dc:	639a      	str	r2, [r3, #56]	@ 0x38
 80011de:	687b      	ldr	r3, [r7, #4]
 80011e0:	2221      	movs	r2, #33	@ 0x21
 80011e2:	2101      	movs	r1, #1
 80011e4:	5499      	strb	r1, [r3, r2]
 80011e6:	687b      	ldr	r3, [r7, #4]
 80011e8:	2220      	movs	r2, #32
 80011ea:	2100      	movs	r1, #0
 80011ec:	5499      	strb	r1, [r3, r2]
 80011ee:	687b      	ldr	r3, [r7, #4]
 80011f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d005      	beq.n	8001202 <HAL_DMA_IRQHandler+0x13c>
 80011f6:	687b      	ldr	r3, [r7, #4]
 80011f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80011fa:	687a      	ldr	r2, [r7, #4]
 80011fc:	0010      	movs	r0, r2
 80011fe:	4798      	blx	r3
 8001200:	e7ff      	b.n	8001202 <HAL_DMA_IRQHandler+0x13c>
 8001202:	46c0      	nop			@ (mov r8, r8)
 8001204:	46bd      	mov	sp, r7
 8001206:	b004      	add	sp, #16
 8001208:	bd80      	pop	{r7, pc}

0800120a <HAL_DMA_GetState>:
 800120a:	b580      	push	{r7, lr}
 800120c:	b082      	sub	sp, #8
 800120e:	af00      	add	r7, sp, #0
 8001210:	6078      	str	r0, [r7, #4]
 8001212:	687b      	ldr	r3, [r7, #4]
 8001214:	2221      	movs	r2, #33	@ 0x21
 8001216:	5c9b      	ldrb	r3, [r3, r2]
 8001218:	b2db      	uxtb	r3, r3
 800121a:	0018      	movs	r0, r3
 800121c:	46bd      	mov	sp, r7
 800121e:	b002      	add	sp, #8
 8001220:	bd80      	pop	{r7, pc}
	...

08001224 <DMA_CalcBaseAndBitshift>:
 8001224:	b580      	push	{r7, lr}
 8001226:	b082      	sub	sp, #8
 8001228:	af00      	add	r7, sp, #0
 800122a:	6078      	str	r0, [r7, #4]
 800122c:	687b      	ldr	r3, [r7, #4]
 800122e:	681b      	ldr	r3, [r3, #0]
 8001230:	4a08      	ldr	r2, [pc, #32]	@ (8001254 <DMA_CalcBaseAndBitshift+0x30>)
 8001232:	4694      	mov	ip, r2
 8001234:	4463      	add	r3, ip
 8001236:	2114      	movs	r1, #20
 8001238:	0018      	movs	r0, r3
 800123a:	f7fe ff77 	bl	800012c <__udivsi3>
 800123e:	0003      	movs	r3, r0
 8001240:	009a      	lsls	r2, r3, #2
 8001242:	687b      	ldr	r3, [r7, #4]
 8001244:	641a      	str	r2, [r3, #64]	@ 0x40
 8001246:	687b      	ldr	r3, [r7, #4]
 8001248:	4a03      	ldr	r2, [pc, #12]	@ (8001258 <DMA_CalcBaseAndBitshift+0x34>)
 800124a:	63da      	str	r2, [r3, #60]	@ 0x3c
 800124c:	46c0      	nop			@ (mov r8, r8)
 800124e:	46bd      	mov	sp, r7
 8001250:	b002      	add	sp, #8
 8001252:	bd80      	pop	{r7, pc}
 8001254:	bffdfff8 	.word	0xbffdfff8
 8001258:	40020000 	.word	0x40020000

0800125c <HAL_GPIO_Init>:
 800125c:	b580      	push	{r7, lr}
 800125e:	b086      	sub	sp, #24
 8001260:	af00      	add	r7, sp, #0
 8001262:	6078      	str	r0, [r7, #4]
 8001264:	6039      	str	r1, [r7, #0]
 8001266:	2300      	movs	r3, #0
 8001268:	617b      	str	r3, [r7, #20]
 800126a:	e14f      	b.n	800150c <HAL_GPIO_Init+0x2b0>
 800126c:	683b      	ldr	r3, [r7, #0]
 800126e:	681b      	ldr	r3, [r3, #0]
 8001270:	2101      	movs	r1, #1
 8001272:	697a      	ldr	r2, [r7, #20]
 8001274:	4091      	lsls	r1, r2
 8001276:	000a      	movs	r2, r1
 8001278:	4013      	ands	r3, r2
 800127a:	60fb      	str	r3, [r7, #12]
 800127c:	68fb      	ldr	r3, [r7, #12]
 800127e:	2b00      	cmp	r3, #0
 8001280:	d100      	bne.n	8001284 <HAL_GPIO_Init+0x28>
 8001282:	e140      	b.n	8001506 <HAL_GPIO_Init+0x2aa>
 8001284:	683b      	ldr	r3, [r7, #0]
 8001286:	685b      	ldr	r3, [r3, #4]
 8001288:	2203      	movs	r2, #3
 800128a:	4013      	ands	r3, r2
 800128c:	2b01      	cmp	r3, #1
 800128e:	d005      	beq.n	800129c <HAL_GPIO_Init+0x40>
 8001290:	683b      	ldr	r3, [r7, #0]
 8001292:	685b      	ldr	r3, [r3, #4]
 8001294:	2203      	movs	r2, #3
 8001296:	4013      	ands	r3, r2
 8001298:	2b02      	cmp	r3, #2
 800129a:	d130      	bne.n	80012fe <HAL_GPIO_Init+0xa2>
 800129c:	687b      	ldr	r3, [r7, #4]
 800129e:	689b      	ldr	r3, [r3, #8]
 80012a0:	613b      	str	r3, [r7, #16]
 80012a2:	697b      	ldr	r3, [r7, #20]
 80012a4:	005b      	lsls	r3, r3, #1
 80012a6:	2203      	movs	r2, #3
 80012a8:	409a      	lsls	r2, r3
 80012aa:	0013      	movs	r3, r2
 80012ac:	43da      	mvns	r2, r3
 80012ae:	693b      	ldr	r3, [r7, #16]
 80012b0:	4013      	ands	r3, r2
 80012b2:	613b      	str	r3, [r7, #16]
 80012b4:	683b      	ldr	r3, [r7, #0]
 80012b6:	68da      	ldr	r2, [r3, #12]
 80012b8:	697b      	ldr	r3, [r7, #20]
 80012ba:	005b      	lsls	r3, r3, #1
 80012bc:	409a      	lsls	r2, r3
 80012be:	0013      	movs	r3, r2
 80012c0:	693a      	ldr	r2, [r7, #16]
 80012c2:	4313      	orrs	r3, r2
 80012c4:	613b      	str	r3, [r7, #16]
 80012c6:	687b      	ldr	r3, [r7, #4]
 80012c8:	693a      	ldr	r2, [r7, #16]
 80012ca:	609a      	str	r2, [r3, #8]
 80012cc:	687b      	ldr	r3, [r7, #4]
 80012ce:	685b      	ldr	r3, [r3, #4]
 80012d0:	613b      	str	r3, [r7, #16]
 80012d2:	2201      	movs	r2, #1
 80012d4:	697b      	ldr	r3, [r7, #20]
 80012d6:	409a      	lsls	r2, r3
 80012d8:	0013      	movs	r3, r2
 80012da:	43da      	mvns	r2, r3
 80012dc:	693b      	ldr	r3, [r7, #16]
 80012de:	4013      	ands	r3, r2
 80012e0:	613b      	str	r3, [r7, #16]
 80012e2:	683b      	ldr	r3, [r7, #0]
 80012e4:	685b      	ldr	r3, [r3, #4]
 80012e6:	091b      	lsrs	r3, r3, #4
 80012e8:	2201      	movs	r2, #1
 80012ea:	401a      	ands	r2, r3
 80012ec:	697b      	ldr	r3, [r7, #20]
 80012ee:	409a      	lsls	r2, r3
 80012f0:	0013      	movs	r3, r2
 80012f2:	693a      	ldr	r2, [r7, #16]
 80012f4:	4313      	orrs	r3, r2
 80012f6:	613b      	str	r3, [r7, #16]
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	693a      	ldr	r2, [r7, #16]
 80012fc:	605a      	str	r2, [r3, #4]
 80012fe:	683b      	ldr	r3, [r7, #0]
 8001300:	685b      	ldr	r3, [r3, #4]
 8001302:	2203      	movs	r2, #3
 8001304:	4013      	ands	r3, r2
 8001306:	2b03      	cmp	r3, #3
 8001308:	d017      	beq.n	800133a <HAL_GPIO_Init+0xde>
 800130a:	687b      	ldr	r3, [r7, #4]
 800130c:	68db      	ldr	r3, [r3, #12]
 800130e:	613b      	str	r3, [r7, #16]
 8001310:	697b      	ldr	r3, [r7, #20]
 8001312:	005b      	lsls	r3, r3, #1
 8001314:	2203      	movs	r2, #3
 8001316:	409a      	lsls	r2, r3
 8001318:	0013      	movs	r3, r2
 800131a:	43da      	mvns	r2, r3
 800131c:	693b      	ldr	r3, [r7, #16]
 800131e:	4013      	ands	r3, r2
 8001320:	613b      	str	r3, [r7, #16]
 8001322:	683b      	ldr	r3, [r7, #0]
 8001324:	689a      	ldr	r2, [r3, #8]
 8001326:	697b      	ldr	r3, [r7, #20]
 8001328:	005b      	lsls	r3, r3, #1
 800132a:	409a      	lsls	r2, r3
 800132c:	0013      	movs	r3, r2
 800132e:	693a      	ldr	r2, [r7, #16]
 8001330:	4313      	orrs	r3, r2
 8001332:	613b      	str	r3, [r7, #16]
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	693a      	ldr	r2, [r7, #16]
 8001338:	60da      	str	r2, [r3, #12]
 800133a:	683b      	ldr	r3, [r7, #0]
 800133c:	685b      	ldr	r3, [r3, #4]
 800133e:	2203      	movs	r2, #3
 8001340:	4013      	ands	r3, r2
 8001342:	2b02      	cmp	r3, #2
 8001344:	d123      	bne.n	800138e <HAL_GPIO_Init+0x132>
 8001346:	697b      	ldr	r3, [r7, #20]
 8001348:	08da      	lsrs	r2, r3, #3
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	3208      	adds	r2, #8
 800134e:	0092      	lsls	r2, r2, #2
 8001350:	58d3      	ldr	r3, [r2, r3]
 8001352:	613b      	str	r3, [r7, #16]
 8001354:	697b      	ldr	r3, [r7, #20]
 8001356:	2207      	movs	r2, #7
 8001358:	4013      	ands	r3, r2
 800135a:	009b      	lsls	r3, r3, #2
 800135c:	220f      	movs	r2, #15
 800135e:	409a      	lsls	r2, r3
 8001360:	0013      	movs	r3, r2
 8001362:	43da      	mvns	r2, r3
 8001364:	693b      	ldr	r3, [r7, #16]
 8001366:	4013      	ands	r3, r2
 8001368:	613b      	str	r3, [r7, #16]
 800136a:	683b      	ldr	r3, [r7, #0]
 800136c:	691a      	ldr	r2, [r3, #16]
 800136e:	697b      	ldr	r3, [r7, #20]
 8001370:	2107      	movs	r1, #7
 8001372:	400b      	ands	r3, r1
 8001374:	009b      	lsls	r3, r3, #2
 8001376:	409a      	lsls	r2, r3
 8001378:	0013      	movs	r3, r2
 800137a:	693a      	ldr	r2, [r7, #16]
 800137c:	4313      	orrs	r3, r2
 800137e:	613b      	str	r3, [r7, #16]
 8001380:	697b      	ldr	r3, [r7, #20]
 8001382:	08da      	lsrs	r2, r3, #3
 8001384:	687b      	ldr	r3, [r7, #4]
 8001386:	3208      	adds	r2, #8
 8001388:	0092      	lsls	r2, r2, #2
 800138a:	6939      	ldr	r1, [r7, #16]
 800138c:	50d1      	str	r1, [r2, r3]
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	681b      	ldr	r3, [r3, #0]
 8001392:	613b      	str	r3, [r7, #16]
 8001394:	697b      	ldr	r3, [r7, #20]
 8001396:	005b      	lsls	r3, r3, #1
 8001398:	2203      	movs	r2, #3
 800139a:	409a      	lsls	r2, r3
 800139c:	0013      	movs	r3, r2
 800139e:	43da      	mvns	r2, r3
 80013a0:	693b      	ldr	r3, [r7, #16]
 80013a2:	4013      	ands	r3, r2
 80013a4:	613b      	str	r3, [r7, #16]
 80013a6:	683b      	ldr	r3, [r7, #0]
 80013a8:	685b      	ldr	r3, [r3, #4]
 80013aa:	2203      	movs	r2, #3
 80013ac:	401a      	ands	r2, r3
 80013ae:	697b      	ldr	r3, [r7, #20]
 80013b0:	005b      	lsls	r3, r3, #1
 80013b2:	409a      	lsls	r2, r3
 80013b4:	0013      	movs	r3, r2
 80013b6:	693a      	ldr	r2, [r7, #16]
 80013b8:	4313      	orrs	r3, r2
 80013ba:	613b      	str	r3, [r7, #16]
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	693a      	ldr	r2, [r7, #16]
 80013c0:	601a      	str	r2, [r3, #0]
 80013c2:	683b      	ldr	r3, [r7, #0]
 80013c4:	685a      	ldr	r2, [r3, #4]
 80013c6:	23c0      	movs	r3, #192	@ 0xc0
 80013c8:	029b      	lsls	r3, r3, #10
 80013ca:	4013      	ands	r3, r2
 80013cc:	d100      	bne.n	80013d0 <HAL_GPIO_Init+0x174>
 80013ce:	e09a      	b.n	8001506 <HAL_GPIO_Init+0x2aa>
 80013d0:	4b54      	ldr	r3, [pc, #336]	@ (8001524 <HAL_GPIO_Init+0x2c8>)
 80013d2:	699a      	ldr	r2, [r3, #24]
 80013d4:	4b53      	ldr	r3, [pc, #332]	@ (8001524 <HAL_GPIO_Init+0x2c8>)
 80013d6:	2101      	movs	r1, #1
 80013d8:	430a      	orrs	r2, r1
 80013da:	619a      	str	r2, [r3, #24]
 80013dc:	4b51      	ldr	r3, [pc, #324]	@ (8001524 <HAL_GPIO_Init+0x2c8>)
 80013de:	699b      	ldr	r3, [r3, #24]
 80013e0:	2201      	movs	r2, #1
 80013e2:	4013      	ands	r3, r2
 80013e4:	60bb      	str	r3, [r7, #8]
 80013e6:	68bb      	ldr	r3, [r7, #8]
 80013e8:	4a4f      	ldr	r2, [pc, #316]	@ (8001528 <HAL_GPIO_Init+0x2cc>)
 80013ea:	697b      	ldr	r3, [r7, #20]
 80013ec:	089b      	lsrs	r3, r3, #2
 80013ee:	3302      	adds	r3, #2
 80013f0:	009b      	lsls	r3, r3, #2
 80013f2:	589b      	ldr	r3, [r3, r2]
 80013f4:	613b      	str	r3, [r7, #16]
 80013f6:	697b      	ldr	r3, [r7, #20]
 80013f8:	2203      	movs	r2, #3
 80013fa:	4013      	ands	r3, r2
 80013fc:	009b      	lsls	r3, r3, #2
 80013fe:	220f      	movs	r2, #15
 8001400:	409a      	lsls	r2, r3
 8001402:	0013      	movs	r3, r2
 8001404:	43da      	mvns	r2, r3
 8001406:	693b      	ldr	r3, [r7, #16]
 8001408:	4013      	ands	r3, r2
 800140a:	613b      	str	r3, [r7, #16]
 800140c:	687a      	ldr	r2, [r7, #4]
 800140e:	2390      	movs	r3, #144	@ 0x90
 8001410:	05db      	lsls	r3, r3, #23
 8001412:	429a      	cmp	r2, r3
 8001414:	d013      	beq.n	800143e <HAL_GPIO_Init+0x1e2>
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	4a44      	ldr	r2, [pc, #272]	@ (800152c <HAL_GPIO_Init+0x2d0>)
 800141a:	4293      	cmp	r3, r2
 800141c:	d00d      	beq.n	800143a <HAL_GPIO_Init+0x1de>
 800141e:	687b      	ldr	r3, [r7, #4]
 8001420:	4a43      	ldr	r2, [pc, #268]	@ (8001530 <HAL_GPIO_Init+0x2d4>)
 8001422:	4293      	cmp	r3, r2
 8001424:	d007      	beq.n	8001436 <HAL_GPIO_Init+0x1da>
 8001426:	687b      	ldr	r3, [r7, #4]
 8001428:	4a42      	ldr	r2, [pc, #264]	@ (8001534 <HAL_GPIO_Init+0x2d8>)
 800142a:	4293      	cmp	r3, r2
 800142c:	d101      	bne.n	8001432 <HAL_GPIO_Init+0x1d6>
 800142e:	2303      	movs	r3, #3
 8001430:	e006      	b.n	8001440 <HAL_GPIO_Init+0x1e4>
 8001432:	2305      	movs	r3, #5
 8001434:	e004      	b.n	8001440 <HAL_GPIO_Init+0x1e4>
 8001436:	2302      	movs	r3, #2
 8001438:	e002      	b.n	8001440 <HAL_GPIO_Init+0x1e4>
 800143a:	2301      	movs	r3, #1
 800143c:	e000      	b.n	8001440 <HAL_GPIO_Init+0x1e4>
 800143e:	2300      	movs	r3, #0
 8001440:	697a      	ldr	r2, [r7, #20]
 8001442:	2103      	movs	r1, #3
 8001444:	400a      	ands	r2, r1
 8001446:	0092      	lsls	r2, r2, #2
 8001448:	4093      	lsls	r3, r2
 800144a:	693a      	ldr	r2, [r7, #16]
 800144c:	4313      	orrs	r3, r2
 800144e:	613b      	str	r3, [r7, #16]
 8001450:	4935      	ldr	r1, [pc, #212]	@ (8001528 <HAL_GPIO_Init+0x2cc>)
 8001452:	697b      	ldr	r3, [r7, #20]
 8001454:	089b      	lsrs	r3, r3, #2
 8001456:	3302      	adds	r3, #2
 8001458:	009b      	lsls	r3, r3, #2
 800145a:	693a      	ldr	r2, [r7, #16]
 800145c:	505a      	str	r2, [r3, r1]
 800145e:	4b36      	ldr	r3, [pc, #216]	@ (8001538 <HAL_GPIO_Init+0x2dc>)
 8001460:	689b      	ldr	r3, [r3, #8]
 8001462:	613b      	str	r3, [r7, #16]
 8001464:	68fb      	ldr	r3, [r7, #12]
 8001466:	43da      	mvns	r2, r3
 8001468:	693b      	ldr	r3, [r7, #16]
 800146a:	4013      	ands	r3, r2
 800146c:	613b      	str	r3, [r7, #16]
 800146e:	683b      	ldr	r3, [r7, #0]
 8001470:	685a      	ldr	r2, [r3, #4]
 8001472:	2380      	movs	r3, #128	@ 0x80
 8001474:	035b      	lsls	r3, r3, #13
 8001476:	4013      	ands	r3, r2
 8001478:	d003      	beq.n	8001482 <HAL_GPIO_Init+0x226>
 800147a:	693a      	ldr	r2, [r7, #16]
 800147c:	68fb      	ldr	r3, [r7, #12]
 800147e:	4313      	orrs	r3, r2
 8001480:	613b      	str	r3, [r7, #16]
 8001482:	4b2d      	ldr	r3, [pc, #180]	@ (8001538 <HAL_GPIO_Init+0x2dc>)
 8001484:	693a      	ldr	r2, [r7, #16]
 8001486:	609a      	str	r2, [r3, #8]
 8001488:	4b2b      	ldr	r3, [pc, #172]	@ (8001538 <HAL_GPIO_Init+0x2dc>)
 800148a:	68db      	ldr	r3, [r3, #12]
 800148c:	613b      	str	r3, [r7, #16]
 800148e:	68fb      	ldr	r3, [r7, #12]
 8001490:	43da      	mvns	r2, r3
 8001492:	693b      	ldr	r3, [r7, #16]
 8001494:	4013      	ands	r3, r2
 8001496:	613b      	str	r3, [r7, #16]
 8001498:	683b      	ldr	r3, [r7, #0]
 800149a:	685a      	ldr	r2, [r3, #4]
 800149c:	2380      	movs	r3, #128	@ 0x80
 800149e:	039b      	lsls	r3, r3, #14
 80014a0:	4013      	ands	r3, r2
 80014a2:	d003      	beq.n	80014ac <HAL_GPIO_Init+0x250>
 80014a4:	693a      	ldr	r2, [r7, #16]
 80014a6:	68fb      	ldr	r3, [r7, #12]
 80014a8:	4313      	orrs	r3, r2
 80014aa:	613b      	str	r3, [r7, #16]
 80014ac:	4b22      	ldr	r3, [pc, #136]	@ (8001538 <HAL_GPIO_Init+0x2dc>)
 80014ae:	693a      	ldr	r2, [r7, #16]
 80014b0:	60da      	str	r2, [r3, #12]
 80014b2:	4b21      	ldr	r3, [pc, #132]	@ (8001538 <HAL_GPIO_Init+0x2dc>)
 80014b4:	685b      	ldr	r3, [r3, #4]
 80014b6:	613b      	str	r3, [r7, #16]
 80014b8:	68fb      	ldr	r3, [r7, #12]
 80014ba:	43da      	mvns	r2, r3
 80014bc:	693b      	ldr	r3, [r7, #16]
 80014be:	4013      	ands	r3, r2
 80014c0:	613b      	str	r3, [r7, #16]
 80014c2:	683b      	ldr	r3, [r7, #0]
 80014c4:	685a      	ldr	r2, [r3, #4]
 80014c6:	2380      	movs	r3, #128	@ 0x80
 80014c8:	029b      	lsls	r3, r3, #10
 80014ca:	4013      	ands	r3, r2
 80014cc:	d003      	beq.n	80014d6 <HAL_GPIO_Init+0x27a>
 80014ce:	693a      	ldr	r2, [r7, #16]
 80014d0:	68fb      	ldr	r3, [r7, #12]
 80014d2:	4313      	orrs	r3, r2
 80014d4:	613b      	str	r3, [r7, #16]
 80014d6:	4b18      	ldr	r3, [pc, #96]	@ (8001538 <HAL_GPIO_Init+0x2dc>)
 80014d8:	693a      	ldr	r2, [r7, #16]
 80014da:	605a      	str	r2, [r3, #4]
 80014dc:	4b16      	ldr	r3, [pc, #88]	@ (8001538 <HAL_GPIO_Init+0x2dc>)
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	613b      	str	r3, [r7, #16]
 80014e2:	68fb      	ldr	r3, [r7, #12]
 80014e4:	43da      	mvns	r2, r3
 80014e6:	693b      	ldr	r3, [r7, #16]
 80014e8:	4013      	ands	r3, r2
 80014ea:	613b      	str	r3, [r7, #16]
 80014ec:	683b      	ldr	r3, [r7, #0]
 80014ee:	685a      	ldr	r2, [r3, #4]
 80014f0:	2380      	movs	r3, #128	@ 0x80
 80014f2:	025b      	lsls	r3, r3, #9
 80014f4:	4013      	ands	r3, r2
 80014f6:	d003      	beq.n	8001500 <HAL_GPIO_Init+0x2a4>
 80014f8:	693a      	ldr	r2, [r7, #16]
 80014fa:	68fb      	ldr	r3, [r7, #12]
 80014fc:	4313      	orrs	r3, r2
 80014fe:	613b      	str	r3, [r7, #16]
 8001500:	4b0d      	ldr	r3, [pc, #52]	@ (8001538 <HAL_GPIO_Init+0x2dc>)
 8001502:	693a      	ldr	r2, [r7, #16]
 8001504:	601a      	str	r2, [r3, #0]
 8001506:	697b      	ldr	r3, [r7, #20]
 8001508:	3301      	adds	r3, #1
 800150a:	617b      	str	r3, [r7, #20]
 800150c:	683b      	ldr	r3, [r7, #0]
 800150e:	681a      	ldr	r2, [r3, #0]
 8001510:	697b      	ldr	r3, [r7, #20]
 8001512:	40da      	lsrs	r2, r3
 8001514:	1e13      	subs	r3, r2, #0
 8001516:	d000      	beq.n	800151a <HAL_GPIO_Init+0x2be>
 8001518:	e6a8      	b.n	800126c <HAL_GPIO_Init+0x10>
 800151a:	46c0      	nop			@ (mov r8, r8)
 800151c:	46c0      	nop			@ (mov r8, r8)
 800151e:	46bd      	mov	sp, r7
 8001520:	b006      	add	sp, #24
 8001522:	bd80      	pop	{r7, pc}
 8001524:	40021000 	.word	0x40021000
 8001528:	40010000 	.word	0x40010000
 800152c:	48000400 	.word	0x48000400
 8001530:	48000800 	.word	0x48000800
 8001534:	48000c00 	.word	0x48000c00
 8001538:	40010400 	.word	0x40010400

0800153c <HAL_I2C_Init>:
 800153c:	b580      	push	{r7, lr}
 800153e:	b082      	sub	sp, #8
 8001540:	af00      	add	r7, sp, #0
 8001542:	6078      	str	r0, [r7, #4]
 8001544:	687b      	ldr	r3, [r7, #4]
 8001546:	2b00      	cmp	r3, #0
 8001548:	d101      	bne.n	800154e <HAL_I2C_Init+0x12>
 800154a:	2301      	movs	r3, #1
 800154c:	e08f      	b.n	800166e <HAL_I2C_Init+0x132>
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	2241      	movs	r2, #65	@ 0x41
 8001552:	5c9b      	ldrb	r3, [r3, r2]
 8001554:	b2db      	uxtb	r3, r3
 8001556:	2b00      	cmp	r3, #0
 8001558:	d107      	bne.n	800156a <HAL_I2C_Init+0x2e>
 800155a:	687b      	ldr	r3, [r7, #4]
 800155c:	2240      	movs	r2, #64	@ 0x40
 800155e:	2100      	movs	r1, #0
 8001560:	5499      	strb	r1, [r3, r2]
 8001562:	687b      	ldr	r3, [r7, #4]
 8001564:	0018      	movs	r0, r3
 8001566:	f7ff fa0f 	bl	8000988 <HAL_I2C_MspInit>
 800156a:	687b      	ldr	r3, [r7, #4]
 800156c:	2241      	movs	r2, #65	@ 0x41
 800156e:	2124      	movs	r1, #36	@ 0x24
 8001570:	5499      	strb	r1, [r3, r2]
 8001572:	687b      	ldr	r3, [r7, #4]
 8001574:	681b      	ldr	r3, [r3, #0]
 8001576:	681a      	ldr	r2, [r3, #0]
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	681b      	ldr	r3, [r3, #0]
 800157c:	2101      	movs	r1, #1
 800157e:	438a      	bics	r2, r1
 8001580:	601a      	str	r2, [r3, #0]
 8001582:	687b      	ldr	r3, [r7, #4]
 8001584:	685a      	ldr	r2, [r3, #4]
 8001586:	687b      	ldr	r3, [r7, #4]
 8001588:	681b      	ldr	r3, [r3, #0]
 800158a:	493b      	ldr	r1, [pc, #236]	@ (8001678 <HAL_I2C_Init+0x13c>)
 800158c:	400a      	ands	r2, r1
 800158e:	611a      	str	r2, [r3, #16]
 8001590:	687b      	ldr	r3, [r7, #4]
 8001592:	681b      	ldr	r3, [r3, #0]
 8001594:	689a      	ldr	r2, [r3, #8]
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	681b      	ldr	r3, [r3, #0]
 800159a:	4938      	ldr	r1, [pc, #224]	@ (800167c <HAL_I2C_Init+0x140>)
 800159c:	400a      	ands	r2, r1
 800159e:	609a      	str	r2, [r3, #8]
 80015a0:	687b      	ldr	r3, [r7, #4]
 80015a2:	68db      	ldr	r3, [r3, #12]
 80015a4:	2b01      	cmp	r3, #1
 80015a6:	d108      	bne.n	80015ba <HAL_I2C_Init+0x7e>
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	689a      	ldr	r2, [r3, #8]
 80015ac:	687b      	ldr	r3, [r7, #4]
 80015ae:	681b      	ldr	r3, [r3, #0]
 80015b0:	2180      	movs	r1, #128	@ 0x80
 80015b2:	0209      	lsls	r1, r1, #8
 80015b4:	430a      	orrs	r2, r1
 80015b6:	609a      	str	r2, [r3, #8]
 80015b8:	e007      	b.n	80015ca <HAL_I2C_Init+0x8e>
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	689a      	ldr	r2, [r3, #8]
 80015be:	687b      	ldr	r3, [r7, #4]
 80015c0:	681b      	ldr	r3, [r3, #0]
 80015c2:	2184      	movs	r1, #132	@ 0x84
 80015c4:	0209      	lsls	r1, r1, #8
 80015c6:	430a      	orrs	r2, r1
 80015c8:	609a      	str	r2, [r3, #8]
 80015ca:	687b      	ldr	r3, [r7, #4]
 80015cc:	68db      	ldr	r3, [r3, #12]
 80015ce:	2b02      	cmp	r3, #2
 80015d0:	d109      	bne.n	80015e6 <HAL_I2C_Init+0xaa>
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	681b      	ldr	r3, [r3, #0]
 80015d6:	685a      	ldr	r2, [r3, #4]
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	2180      	movs	r1, #128	@ 0x80
 80015de:	0109      	lsls	r1, r1, #4
 80015e0:	430a      	orrs	r2, r1
 80015e2:	605a      	str	r2, [r3, #4]
 80015e4:	e007      	b.n	80015f6 <HAL_I2C_Init+0xba>
 80015e6:	687b      	ldr	r3, [r7, #4]
 80015e8:	681b      	ldr	r3, [r3, #0]
 80015ea:	685a      	ldr	r2, [r3, #4]
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	4923      	ldr	r1, [pc, #140]	@ (8001680 <HAL_I2C_Init+0x144>)
 80015f2:	400a      	ands	r2, r1
 80015f4:	605a      	str	r2, [r3, #4]
 80015f6:	687b      	ldr	r3, [r7, #4]
 80015f8:	681b      	ldr	r3, [r3, #0]
 80015fa:	685a      	ldr	r2, [r3, #4]
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	681b      	ldr	r3, [r3, #0]
 8001600:	4920      	ldr	r1, [pc, #128]	@ (8001684 <HAL_I2C_Init+0x148>)
 8001602:	430a      	orrs	r2, r1
 8001604:	605a      	str	r2, [r3, #4]
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	68da      	ldr	r2, [r3, #12]
 800160c:	687b      	ldr	r3, [r7, #4]
 800160e:	681b      	ldr	r3, [r3, #0]
 8001610:	491a      	ldr	r1, [pc, #104]	@ (800167c <HAL_I2C_Init+0x140>)
 8001612:	400a      	ands	r2, r1
 8001614:	60da      	str	r2, [r3, #12]
 8001616:	687b      	ldr	r3, [r7, #4]
 8001618:	691a      	ldr	r2, [r3, #16]
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	695b      	ldr	r3, [r3, #20]
 800161e:	431a      	orrs	r2, r3
 8001620:	0011      	movs	r1, r2
 8001622:	687b      	ldr	r3, [r7, #4]
 8001624:	699b      	ldr	r3, [r3, #24]
 8001626:	021a      	lsls	r2, r3, #8
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	681b      	ldr	r3, [r3, #0]
 800162c:	430a      	orrs	r2, r1
 800162e:	60da      	str	r2, [r3, #12]
 8001630:	687b      	ldr	r3, [r7, #4]
 8001632:	69d9      	ldr	r1, [r3, #28]
 8001634:	687b      	ldr	r3, [r7, #4]
 8001636:	6a1a      	ldr	r2, [r3, #32]
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	430a      	orrs	r2, r1
 800163e:	601a      	str	r2, [r3, #0]
 8001640:	687b      	ldr	r3, [r7, #4]
 8001642:	681b      	ldr	r3, [r3, #0]
 8001644:	681a      	ldr	r2, [r3, #0]
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	681b      	ldr	r3, [r3, #0]
 800164a:	2101      	movs	r1, #1
 800164c:	430a      	orrs	r2, r1
 800164e:	601a      	str	r2, [r3, #0]
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	2200      	movs	r2, #0
 8001654:	645a      	str	r2, [r3, #68]	@ 0x44
 8001656:	687b      	ldr	r3, [r7, #4]
 8001658:	2241      	movs	r2, #65	@ 0x41
 800165a:	2120      	movs	r1, #32
 800165c:	5499      	strb	r1, [r3, r2]
 800165e:	687b      	ldr	r3, [r7, #4]
 8001660:	2200      	movs	r2, #0
 8001662:	631a      	str	r2, [r3, #48]	@ 0x30
 8001664:	687b      	ldr	r3, [r7, #4]
 8001666:	2242      	movs	r2, #66	@ 0x42
 8001668:	2100      	movs	r1, #0
 800166a:	5499      	strb	r1, [r3, r2]
 800166c:	2300      	movs	r3, #0
 800166e:	0018      	movs	r0, r3
 8001670:	46bd      	mov	sp, r7
 8001672:	b002      	add	sp, #8
 8001674:	bd80      	pop	{r7, pc}
 8001676:	46c0      	nop			@ (mov r8, r8)
 8001678:	f0ffffff 	.word	0xf0ffffff
 800167c:	ffff7fff 	.word	0xffff7fff
 8001680:	fffff7ff 	.word	0xfffff7ff
 8001684:	02008000 	.word	0x02008000

08001688 <HAL_I2C_Master_Transmit>:
 8001688:	b590      	push	{r4, r7, lr}
 800168a:	b089      	sub	sp, #36	@ 0x24
 800168c:	af02      	add	r7, sp, #8
 800168e:	60f8      	str	r0, [r7, #12]
 8001690:	0008      	movs	r0, r1
 8001692:	607a      	str	r2, [r7, #4]
 8001694:	0019      	movs	r1, r3
 8001696:	230a      	movs	r3, #10
 8001698:	18fb      	adds	r3, r7, r3
 800169a:	1c02      	adds	r2, r0, #0
 800169c:	801a      	strh	r2, [r3, #0]
 800169e:	2308      	movs	r3, #8
 80016a0:	18fb      	adds	r3, r7, r3
 80016a2:	1c0a      	adds	r2, r1, #0
 80016a4:	801a      	strh	r2, [r3, #0]
 80016a6:	68fb      	ldr	r3, [r7, #12]
 80016a8:	2241      	movs	r2, #65	@ 0x41
 80016aa:	5c9b      	ldrb	r3, [r3, r2]
 80016ac:	b2db      	uxtb	r3, r3
 80016ae:	2b20      	cmp	r3, #32
 80016b0:	d000      	beq.n	80016b4 <HAL_I2C_Master_Transmit+0x2c>
 80016b2:	e10a      	b.n	80018ca <HAL_I2C_Master_Transmit+0x242>
 80016b4:	68fb      	ldr	r3, [r7, #12]
 80016b6:	2240      	movs	r2, #64	@ 0x40
 80016b8:	5c9b      	ldrb	r3, [r3, r2]
 80016ba:	2b01      	cmp	r3, #1
 80016bc:	d101      	bne.n	80016c2 <HAL_I2C_Master_Transmit+0x3a>
 80016be:	2302      	movs	r3, #2
 80016c0:	e104      	b.n	80018cc <HAL_I2C_Master_Transmit+0x244>
 80016c2:	68fb      	ldr	r3, [r7, #12]
 80016c4:	2240      	movs	r2, #64	@ 0x40
 80016c6:	2101      	movs	r1, #1
 80016c8:	5499      	strb	r1, [r3, r2]
 80016ca:	f7ff fb63 	bl	8000d94 <HAL_GetTick>
 80016ce:	0003      	movs	r3, r0
 80016d0:	613b      	str	r3, [r7, #16]
 80016d2:	2380      	movs	r3, #128	@ 0x80
 80016d4:	0219      	lsls	r1, r3, #8
 80016d6:	68f8      	ldr	r0, [r7, #12]
 80016d8:	693b      	ldr	r3, [r7, #16]
 80016da:	9300      	str	r3, [sp, #0]
 80016dc:	2319      	movs	r3, #25
 80016de:	2201      	movs	r2, #1
 80016e0:	f000 fefc 	bl	80024dc <I2C_WaitOnFlagUntilTimeout>
 80016e4:	1e03      	subs	r3, r0, #0
 80016e6:	d001      	beq.n	80016ec <HAL_I2C_Master_Transmit+0x64>
 80016e8:	2301      	movs	r3, #1
 80016ea:	e0ef      	b.n	80018cc <HAL_I2C_Master_Transmit+0x244>
 80016ec:	68fb      	ldr	r3, [r7, #12]
 80016ee:	2241      	movs	r2, #65	@ 0x41
 80016f0:	2121      	movs	r1, #33	@ 0x21
 80016f2:	5499      	strb	r1, [r3, r2]
 80016f4:	68fb      	ldr	r3, [r7, #12]
 80016f6:	2242      	movs	r2, #66	@ 0x42
 80016f8:	2110      	movs	r1, #16
 80016fa:	5499      	strb	r1, [r3, r2]
 80016fc:	68fb      	ldr	r3, [r7, #12]
 80016fe:	2200      	movs	r2, #0
 8001700:	645a      	str	r2, [r3, #68]	@ 0x44
 8001702:	68fb      	ldr	r3, [r7, #12]
 8001704:	687a      	ldr	r2, [r7, #4]
 8001706:	625a      	str	r2, [r3, #36]	@ 0x24
 8001708:	68fb      	ldr	r3, [r7, #12]
 800170a:	2208      	movs	r2, #8
 800170c:	18ba      	adds	r2, r7, r2
 800170e:	8812      	ldrh	r2, [r2, #0]
 8001710:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001712:	68fb      	ldr	r3, [r7, #12]
 8001714:	2200      	movs	r2, #0
 8001716:	635a      	str	r2, [r3, #52]	@ 0x34
 8001718:	68fb      	ldr	r3, [r7, #12]
 800171a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800171c:	b29b      	uxth	r3, r3
 800171e:	2bff      	cmp	r3, #255	@ 0xff
 8001720:	d906      	bls.n	8001730 <HAL_I2C_Master_Transmit+0xa8>
 8001722:	68fb      	ldr	r3, [r7, #12]
 8001724:	22ff      	movs	r2, #255	@ 0xff
 8001726:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001728:	2380      	movs	r3, #128	@ 0x80
 800172a:	045b      	lsls	r3, r3, #17
 800172c:	617b      	str	r3, [r7, #20]
 800172e:	e007      	b.n	8001740 <HAL_I2C_Master_Transmit+0xb8>
 8001730:	68fb      	ldr	r3, [r7, #12]
 8001732:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001734:	b29a      	uxth	r2, r3
 8001736:	68fb      	ldr	r3, [r7, #12]
 8001738:	851a      	strh	r2, [r3, #40]	@ 0x28
 800173a:	2380      	movs	r3, #128	@ 0x80
 800173c:	049b      	lsls	r3, r3, #18
 800173e:	617b      	str	r3, [r7, #20]
 8001740:	68fb      	ldr	r3, [r7, #12]
 8001742:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001744:	2b00      	cmp	r3, #0
 8001746:	d027      	beq.n	8001798 <HAL_I2C_Master_Transmit+0x110>
 8001748:	68fb      	ldr	r3, [r7, #12]
 800174a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800174c:	781a      	ldrb	r2, [r3, #0]
 800174e:	68fb      	ldr	r3, [r7, #12]
 8001750:	681b      	ldr	r3, [r3, #0]
 8001752:	629a      	str	r2, [r3, #40]	@ 0x28
 8001754:	68fb      	ldr	r3, [r7, #12]
 8001756:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001758:	1c5a      	adds	r2, r3, #1
 800175a:	68fb      	ldr	r3, [r7, #12]
 800175c:	625a      	str	r2, [r3, #36]	@ 0x24
 800175e:	68fb      	ldr	r3, [r7, #12]
 8001760:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001762:	b29b      	uxth	r3, r3
 8001764:	3b01      	subs	r3, #1
 8001766:	b29a      	uxth	r2, r3
 8001768:	68fb      	ldr	r3, [r7, #12]
 800176a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800176c:	68fb      	ldr	r3, [r7, #12]
 800176e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001770:	3b01      	subs	r3, #1
 8001772:	b29a      	uxth	r2, r3
 8001774:	68fb      	ldr	r3, [r7, #12]
 8001776:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001778:	68fb      	ldr	r3, [r7, #12]
 800177a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800177c:	b2db      	uxtb	r3, r3
 800177e:	3301      	adds	r3, #1
 8001780:	b2da      	uxtb	r2, r3
 8001782:	697c      	ldr	r4, [r7, #20]
 8001784:	230a      	movs	r3, #10
 8001786:	18fb      	adds	r3, r7, r3
 8001788:	8819      	ldrh	r1, [r3, #0]
 800178a:	68f8      	ldr	r0, [r7, #12]
 800178c:	4b51      	ldr	r3, [pc, #324]	@ (80018d4 <HAL_I2C_Master_Transmit+0x24c>)
 800178e:	9300      	str	r3, [sp, #0]
 8001790:	0023      	movs	r3, r4
 8001792:	f001 f87d 	bl	8002890 <I2C_TransferConfig>
 8001796:	e06f      	b.n	8001878 <HAL_I2C_Master_Transmit+0x1f0>
 8001798:	68fb      	ldr	r3, [r7, #12]
 800179a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800179c:	b2da      	uxtb	r2, r3
 800179e:	697c      	ldr	r4, [r7, #20]
 80017a0:	230a      	movs	r3, #10
 80017a2:	18fb      	adds	r3, r7, r3
 80017a4:	8819      	ldrh	r1, [r3, #0]
 80017a6:	68f8      	ldr	r0, [r7, #12]
 80017a8:	4b4a      	ldr	r3, [pc, #296]	@ (80018d4 <HAL_I2C_Master_Transmit+0x24c>)
 80017aa:	9300      	str	r3, [sp, #0]
 80017ac:	0023      	movs	r3, r4
 80017ae:	f001 f86f 	bl	8002890 <I2C_TransferConfig>
 80017b2:	e061      	b.n	8001878 <HAL_I2C_Master_Transmit+0x1f0>
 80017b4:	693a      	ldr	r2, [r7, #16]
 80017b6:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80017b8:	68fb      	ldr	r3, [r7, #12]
 80017ba:	0018      	movs	r0, r3
 80017bc:	f000 fee6 	bl	800258c <I2C_WaitOnTXISFlagUntilTimeout>
 80017c0:	1e03      	subs	r3, r0, #0
 80017c2:	d001      	beq.n	80017c8 <HAL_I2C_Master_Transmit+0x140>
 80017c4:	2301      	movs	r3, #1
 80017c6:	e081      	b.n	80018cc <HAL_I2C_Master_Transmit+0x244>
 80017c8:	68fb      	ldr	r3, [r7, #12]
 80017ca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80017cc:	781a      	ldrb	r2, [r3, #0]
 80017ce:	68fb      	ldr	r3, [r7, #12]
 80017d0:	681b      	ldr	r3, [r3, #0]
 80017d2:	629a      	str	r2, [r3, #40]	@ 0x28
 80017d4:	68fb      	ldr	r3, [r7, #12]
 80017d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80017d8:	1c5a      	adds	r2, r3, #1
 80017da:	68fb      	ldr	r3, [r7, #12]
 80017dc:	625a      	str	r2, [r3, #36]	@ 0x24
 80017de:	68fb      	ldr	r3, [r7, #12]
 80017e0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80017e2:	b29b      	uxth	r3, r3
 80017e4:	3b01      	subs	r3, #1
 80017e6:	b29a      	uxth	r2, r3
 80017e8:	68fb      	ldr	r3, [r7, #12]
 80017ea:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80017ec:	68fb      	ldr	r3, [r7, #12]
 80017ee:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80017f0:	3b01      	subs	r3, #1
 80017f2:	b29a      	uxth	r2, r3
 80017f4:	68fb      	ldr	r3, [r7, #12]
 80017f6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80017f8:	68fb      	ldr	r3, [r7, #12]
 80017fa:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80017fc:	b29b      	uxth	r3, r3
 80017fe:	2b00      	cmp	r3, #0
 8001800:	d03a      	beq.n	8001878 <HAL_I2C_Master_Transmit+0x1f0>
 8001802:	68fb      	ldr	r3, [r7, #12]
 8001804:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001806:	2b00      	cmp	r3, #0
 8001808:	d136      	bne.n	8001878 <HAL_I2C_Master_Transmit+0x1f0>
 800180a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800180c:	68f8      	ldr	r0, [r7, #12]
 800180e:	693b      	ldr	r3, [r7, #16]
 8001810:	9300      	str	r3, [sp, #0]
 8001812:	0013      	movs	r3, r2
 8001814:	2200      	movs	r2, #0
 8001816:	2180      	movs	r1, #128	@ 0x80
 8001818:	f000 fe60 	bl	80024dc <I2C_WaitOnFlagUntilTimeout>
 800181c:	1e03      	subs	r3, r0, #0
 800181e:	d001      	beq.n	8001824 <HAL_I2C_Master_Transmit+0x19c>
 8001820:	2301      	movs	r3, #1
 8001822:	e053      	b.n	80018cc <HAL_I2C_Master_Transmit+0x244>
 8001824:	68fb      	ldr	r3, [r7, #12]
 8001826:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001828:	b29b      	uxth	r3, r3
 800182a:	2bff      	cmp	r3, #255	@ 0xff
 800182c:	d911      	bls.n	8001852 <HAL_I2C_Master_Transmit+0x1ca>
 800182e:	68fb      	ldr	r3, [r7, #12]
 8001830:	22ff      	movs	r2, #255	@ 0xff
 8001832:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001834:	68fb      	ldr	r3, [r7, #12]
 8001836:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001838:	b2da      	uxtb	r2, r3
 800183a:	2380      	movs	r3, #128	@ 0x80
 800183c:	045c      	lsls	r4, r3, #17
 800183e:	230a      	movs	r3, #10
 8001840:	18fb      	adds	r3, r7, r3
 8001842:	8819      	ldrh	r1, [r3, #0]
 8001844:	68f8      	ldr	r0, [r7, #12]
 8001846:	2300      	movs	r3, #0
 8001848:	9300      	str	r3, [sp, #0]
 800184a:	0023      	movs	r3, r4
 800184c:	f001 f820 	bl	8002890 <I2C_TransferConfig>
 8001850:	e012      	b.n	8001878 <HAL_I2C_Master_Transmit+0x1f0>
 8001852:	68fb      	ldr	r3, [r7, #12]
 8001854:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001856:	b29a      	uxth	r2, r3
 8001858:	68fb      	ldr	r3, [r7, #12]
 800185a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800185c:	68fb      	ldr	r3, [r7, #12]
 800185e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001860:	b2da      	uxtb	r2, r3
 8001862:	2380      	movs	r3, #128	@ 0x80
 8001864:	049c      	lsls	r4, r3, #18
 8001866:	230a      	movs	r3, #10
 8001868:	18fb      	adds	r3, r7, r3
 800186a:	8819      	ldrh	r1, [r3, #0]
 800186c:	68f8      	ldr	r0, [r7, #12]
 800186e:	2300      	movs	r3, #0
 8001870:	9300      	str	r3, [sp, #0]
 8001872:	0023      	movs	r3, r4
 8001874:	f001 f80c 	bl	8002890 <I2C_TransferConfig>
 8001878:	68fb      	ldr	r3, [r7, #12]
 800187a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800187c:	b29b      	uxth	r3, r3
 800187e:	2b00      	cmp	r3, #0
 8001880:	d198      	bne.n	80017b4 <HAL_I2C_Master_Transmit+0x12c>
 8001882:	693a      	ldr	r2, [r7, #16]
 8001884:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8001886:	68fb      	ldr	r3, [r7, #12]
 8001888:	0018      	movs	r0, r3
 800188a:	f000 fec5 	bl	8002618 <I2C_WaitOnSTOPFlagUntilTimeout>
 800188e:	1e03      	subs	r3, r0, #0
 8001890:	d001      	beq.n	8001896 <HAL_I2C_Master_Transmit+0x20e>
 8001892:	2301      	movs	r3, #1
 8001894:	e01a      	b.n	80018cc <HAL_I2C_Master_Transmit+0x244>
 8001896:	68fb      	ldr	r3, [r7, #12]
 8001898:	681b      	ldr	r3, [r3, #0]
 800189a:	2220      	movs	r2, #32
 800189c:	61da      	str	r2, [r3, #28]
 800189e:	68fb      	ldr	r3, [r7, #12]
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	685a      	ldr	r2, [r3, #4]
 80018a4:	68fb      	ldr	r3, [r7, #12]
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	490b      	ldr	r1, [pc, #44]	@ (80018d8 <HAL_I2C_Master_Transmit+0x250>)
 80018aa:	400a      	ands	r2, r1
 80018ac:	605a      	str	r2, [r3, #4]
 80018ae:	68fb      	ldr	r3, [r7, #12]
 80018b0:	2241      	movs	r2, #65	@ 0x41
 80018b2:	2120      	movs	r1, #32
 80018b4:	5499      	strb	r1, [r3, r2]
 80018b6:	68fb      	ldr	r3, [r7, #12]
 80018b8:	2242      	movs	r2, #66	@ 0x42
 80018ba:	2100      	movs	r1, #0
 80018bc:	5499      	strb	r1, [r3, r2]
 80018be:	68fb      	ldr	r3, [r7, #12]
 80018c0:	2240      	movs	r2, #64	@ 0x40
 80018c2:	2100      	movs	r1, #0
 80018c4:	5499      	strb	r1, [r3, r2]
 80018c6:	2300      	movs	r3, #0
 80018c8:	e000      	b.n	80018cc <HAL_I2C_Master_Transmit+0x244>
 80018ca:	2302      	movs	r3, #2
 80018cc:	0018      	movs	r0, r3
 80018ce:	46bd      	mov	sp, r7
 80018d0:	b007      	add	sp, #28
 80018d2:	bd90      	pop	{r4, r7, pc}
 80018d4:	80002000 	.word	0x80002000
 80018d8:	fe00e800 	.word	0xfe00e800

080018dc <HAL_I2C_EV_IRQHandler>:
 80018dc:	b580      	push	{r7, lr}
 80018de:	b084      	sub	sp, #16
 80018e0:	af00      	add	r7, sp, #0
 80018e2:	6078      	str	r0, [r7, #4]
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	699b      	ldr	r3, [r3, #24]
 80018ea:	60fb      	str	r3, [r7, #12]
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	681b      	ldr	r3, [r3, #0]
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	60bb      	str	r3, [r7, #8]
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d005      	beq.n	8001908 <HAL_I2C_EV_IRQHandler+0x2c>
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8001900:	68ba      	ldr	r2, [r7, #8]
 8001902:	68f9      	ldr	r1, [r7, #12]
 8001904:	6878      	ldr	r0, [r7, #4]
 8001906:	4798      	blx	r3
 8001908:	46c0      	nop			@ (mov r8, r8)
 800190a:	46bd      	mov	sp, r7
 800190c:	b004      	add	sp, #16
 800190e:	bd80      	pop	{r7, pc}

08001910 <HAL_I2C_ER_IRQHandler>:
 8001910:	b580      	push	{r7, lr}
 8001912:	b086      	sub	sp, #24
 8001914:	af00      	add	r7, sp, #0
 8001916:	6078      	str	r0, [r7, #4]
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	681b      	ldr	r3, [r3, #0]
 800191c:	699b      	ldr	r3, [r3, #24]
 800191e:	617b      	str	r3, [r7, #20]
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	613b      	str	r3, [r7, #16]
 8001928:	697a      	ldr	r2, [r7, #20]
 800192a:	2380      	movs	r3, #128	@ 0x80
 800192c:	005b      	lsls	r3, r3, #1
 800192e:	4013      	ands	r3, r2
 8001930:	d00e      	beq.n	8001950 <HAL_I2C_ER_IRQHandler+0x40>
 8001932:	693b      	ldr	r3, [r7, #16]
 8001934:	2280      	movs	r2, #128	@ 0x80
 8001936:	4013      	ands	r3, r2
 8001938:	d00a      	beq.n	8001950 <HAL_I2C_ER_IRQHandler+0x40>
 800193a:	687b      	ldr	r3, [r7, #4]
 800193c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800193e:	2201      	movs	r2, #1
 8001940:	431a      	orrs	r2, r3
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	645a      	str	r2, [r3, #68]	@ 0x44
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	681b      	ldr	r3, [r3, #0]
 800194a:	2280      	movs	r2, #128	@ 0x80
 800194c:	0052      	lsls	r2, r2, #1
 800194e:	61da      	str	r2, [r3, #28]
 8001950:	697a      	ldr	r2, [r7, #20]
 8001952:	2380      	movs	r3, #128	@ 0x80
 8001954:	00db      	lsls	r3, r3, #3
 8001956:	4013      	ands	r3, r2
 8001958:	d00e      	beq.n	8001978 <HAL_I2C_ER_IRQHandler+0x68>
 800195a:	693b      	ldr	r3, [r7, #16]
 800195c:	2280      	movs	r2, #128	@ 0x80
 800195e:	4013      	ands	r3, r2
 8001960:	d00a      	beq.n	8001978 <HAL_I2C_ER_IRQHandler+0x68>
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001966:	2208      	movs	r2, #8
 8001968:	431a      	orrs	r2, r3
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	645a      	str	r2, [r3, #68]	@ 0x44
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	2280      	movs	r2, #128	@ 0x80
 8001974:	00d2      	lsls	r2, r2, #3
 8001976:	61da      	str	r2, [r3, #28]
 8001978:	697a      	ldr	r2, [r7, #20]
 800197a:	2380      	movs	r3, #128	@ 0x80
 800197c:	009b      	lsls	r3, r3, #2
 800197e:	4013      	ands	r3, r2
 8001980:	d00e      	beq.n	80019a0 <HAL_I2C_ER_IRQHandler+0x90>
 8001982:	693b      	ldr	r3, [r7, #16]
 8001984:	2280      	movs	r2, #128	@ 0x80
 8001986:	4013      	ands	r3, r2
 8001988:	d00a      	beq.n	80019a0 <HAL_I2C_ER_IRQHandler+0x90>
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800198e:	2202      	movs	r2, #2
 8001990:	431a      	orrs	r2, r3
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	645a      	str	r2, [r3, #68]	@ 0x44
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	681b      	ldr	r3, [r3, #0]
 800199a:	2280      	movs	r2, #128	@ 0x80
 800199c:	0092      	lsls	r2, r2, #2
 800199e:	61da      	str	r2, [r3, #28]
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80019a4:	60fb      	str	r3, [r7, #12]
 80019a6:	68fb      	ldr	r3, [r7, #12]
 80019a8:	220b      	movs	r2, #11
 80019aa:	4013      	ands	r3, r2
 80019ac:	d005      	beq.n	80019ba <HAL_I2C_ER_IRQHandler+0xaa>
 80019ae:	68fa      	ldr	r2, [r7, #12]
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	0011      	movs	r1, r2
 80019b4:	0018      	movs	r0, r3
 80019b6:	f000 fc25 	bl	8002204 <I2C_ITError>
 80019ba:	46c0      	nop			@ (mov r8, r8)
 80019bc:	46bd      	mov	sp, r7
 80019be:	b006      	add	sp, #24
 80019c0:	bd80      	pop	{r7, pc}

080019c2 <HAL_I2C_SlaveTxCpltCallback>:
 80019c2:	b580      	push	{r7, lr}
 80019c4:	b082      	sub	sp, #8
 80019c6:	af00      	add	r7, sp, #0
 80019c8:	6078      	str	r0, [r7, #4]
 80019ca:	46c0      	nop			@ (mov r8, r8)
 80019cc:	46bd      	mov	sp, r7
 80019ce:	b002      	add	sp, #8
 80019d0:	bd80      	pop	{r7, pc}

080019d2 <HAL_I2C_SlaveRxCpltCallback>:
 80019d2:	b580      	push	{r7, lr}
 80019d4:	b082      	sub	sp, #8
 80019d6:	af00      	add	r7, sp, #0
 80019d8:	6078      	str	r0, [r7, #4]
 80019da:	46c0      	nop			@ (mov r8, r8)
 80019dc:	46bd      	mov	sp, r7
 80019de:	b002      	add	sp, #8
 80019e0:	bd80      	pop	{r7, pc}

080019e2 <HAL_I2C_AddrCallback>:
 80019e2:	b580      	push	{r7, lr}
 80019e4:	b082      	sub	sp, #8
 80019e6:	af00      	add	r7, sp, #0
 80019e8:	6078      	str	r0, [r7, #4]
 80019ea:	0008      	movs	r0, r1
 80019ec:	0011      	movs	r1, r2
 80019ee:	1cfb      	adds	r3, r7, #3
 80019f0:	1c02      	adds	r2, r0, #0
 80019f2:	701a      	strb	r2, [r3, #0]
 80019f4:	003b      	movs	r3, r7
 80019f6:	1c0a      	adds	r2, r1, #0
 80019f8:	801a      	strh	r2, [r3, #0]
 80019fa:	46c0      	nop			@ (mov r8, r8)
 80019fc:	46bd      	mov	sp, r7
 80019fe:	b002      	add	sp, #8
 8001a00:	bd80      	pop	{r7, pc}

08001a02 <HAL_I2C_ListenCpltCallback>:
 8001a02:	b580      	push	{r7, lr}
 8001a04:	b082      	sub	sp, #8
 8001a06:	af00      	add	r7, sp, #0
 8001a08:	6078      	str	r0, [r7, #4]
 8001a0a:	46c0      	nop			@ (mov r8, r8)
 8001a0c:	46bd      	mov	sp, r7
 8001a0e:	b002      	add	sp, #8
 8001a10:	bd80      	pop	{r7, pc}

08001a12 <HAL_I2C_ErrorCallback>:
 8001a12:	b580      	push	{r7, lr}
 8001a14:	b082      	sub	sp, #8
 8001a16:	af00      	add	r7, sp, #0
 8001a18:	6078      	str	r0, [r7, #4]
 8001a1a:	46c0      	nop			@ (mov r8, r8)
 8001a1c:	46bd      	mov	sp, r7
 8001a1e:	b002      	add	sp, #8
 8001a20:	bd80      	pop	{r7, pc}

08001a22 <HAL_I2C_AbortCpltCallback>:
 8001a22:	b580      	push	{r7, lr}
 8001a24:	b082      	sub	sp, #8
 8001a26:	af00      	add	r7, sp, #0
 8001a28:	6078      	str	r0, [r7, #4]
 8001a2a:	46c0      	nop			@ (mov r8, r8)
 8001a2c:	46bd      	mov	sp, r7
 8001a2e:	b002      	add	sp, #8
 8001a30:	bd80      	pop	{r7, pc}
	...

08001a34 <I2C_Slave_ISR_IT>:
 8001a34:	b580      	push	{r7, lr}
 8001a36:	b086      	sub	sp, #24
 8001a38:	af00      	add	r7, sp, #0
 8001a3a:	60f8      	str	r0, [r7, #12]
 8001a3c:	60b9      	str	r1, [r7, #8]
 8001a3e:	607a      	str	r2, [r7, #4]
 8001a40:	68fb      	ldr	r3, [r7, #12]
 8001a42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001a44:	617b      	str	r3, [r7, #20]
 8001a46:	68bb      	ldr	r3, [r7, #8]
 8001a48:	613b      	str	r3, [r7, #16]
 8001a4a:	68fb      	ldr	r3, [r7, #12]
 8001a4c:	2240      	movs	r2, #64	@ 0x40
 8001a4e:	5c9b      	ldrb	r3, [r3, r2]
 8001a50:	2b01      	cmp	r3, #1
 8001a52:	d101      	bne.n	8001a58 <I2C_Slave_ISR_IT+0x24>
 8001a54:	2302      	movs	r3, #2
 8001a56:	e0e7      	b.n	8001c28 <I2C_Slave_ISR_IT+0x1f4>
 8001a58:	68fb      	ldr	r3, [r7, #12]
 8001a5a:	2240      	movs	r2, #64	@ 0x40
 8001a5c:	2101      	movs	r1, #1
 8001a5e:	5499      	strb	r1, [r3, r2]
 8001a60:	693b      	ldr	r3, [r7, #16]
 8001a62:	2220      	movs	r2, #32
 8001a64:	4013      	ands	r3, r2
 8001a66:	d00a      	beq.n	8001a7e <I2C_Slave_ISR_IT+0x4a>
 8001a68:	687b      	ldr	r3, [r7, #4]
 8001a6a:	2220      	movs	r2, #32
 8001a6c:	4013      	ands	r3, r2
 8001a6e:	d006      	beq.n	8001a7e <I2C_Slave_ISR_IT+0x4a>
 8001a70:	693a      	ldr	r2, [r7, #16]
 8001a72:	68fb      	ldr	r3, [r7, #12]
 8001a74:	0011      	movs	r1, r2
 8001a76:	0018      	movs	r0, r3
 8001a78:	f000 f9e4 	bl	8001e44 <I2C_ITSlaveCplt>
 8001a7c:	e0cf      	b.n	8001c1e <I2C_Slave_ISR_IT+0x1ea>
 8001a7e:	693b      	ldr	r3, [r7, #16]
 8001a80:	2210      	movs	r2, #16
 8001a82:	4013      	ands	r3, r2
 8001a84:	d052      	beq.n	8001b2c <I2C_Slave_ISR_IT+0xf8>
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	2210      	movs	r2, #16
 8001a8a:	4013      	ands	r3, r2
 8001a8c:	d04e      	beq.n	8001b2c <I2C_Slave_ISR_IT+0xf8>
 8001a8e:	68fb      	ldr	r3, [r7, #12]
 8001a90:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001a92:	b29b      	uxth	r3, r3
 8001a94:	2b00      	cmp	r3, #0
 8001a96:	d12d      	bne.n	8001af4 <I2C_Slave_ISR_IT+0xc0>
 8001a98:	68fb      	ldr	r3, [r7, #12]
 8001a9a:	2241      	movs	r2, #65	@ 0x41
 8001a9c:	5c9b      	ldrb	r3, [r3, r2]
 8001a9e:	b2db      	uxtb	r3, r3
 8001aa0:	2b28      	cmp	r3, #40	@ 0x28
 8001aa2:	d10b      	bne.n	8001abc <I2C_Slave_ISR_IT+0x88>
 8001aa4:	697a      	ldr	r2, [r7, #20]
 8001aa6:	2380      	movs	r3, #128	@ 0x80
 8001aa8:	049b      	lsls	r3, r3, #18
 8001aaa:	429a      	cmp	r2, r3
 8001aac:	d106      	bne.n	8001abc <I2C_Slave_ISR_IT+0x88>
 8001aae:	693a      	ldr	r2, [r7, #16]
 8001ab0:	68fb      	ldr	r3, [r7, #12]
 8001ab2:	0011      	movs	r1, r2
 8001ab4:	0018      	movs	r0, r3
 8001ab6:	f000 fb4d 	bl	8002154 <I2C_ITListenCplt>
 8001aba:	e036      	b.n	8001b2a <I2C_Slave_ISR_IT+0xf6>
 8001abc:	68fb      	ldr	r3, [r7, #12]
 8001abe:	2241      	movs	r2, #65	@ 0x41
 8001ac0:	5c9b      	ldrb	r3, [r3, r2]
 8001ac2:	b2db      	uxtb	r3, r3
 8001ac4:	2b29      	cmp	r3, #41	@ 0x29
 8001ac6:	d110      	bne.n	8001aea <I2C_Slave_ISR_IT+0xb6>
 8001ac8:	697b      	ldr	r3, [r7, #20]
 8001aca:	4a59      	ldr	r2, [pc, #356]	@ (8001c30 <I2C_Slave_ISR_IT+0x1fc>)
 8001acc:	4293      	cmp	r3, r2
 8001ace:	d00c      	beq.n	8001aea <I2C_Slave_ISR_IT+0xb6>
 8001ad0:	68fb      	ldr	r3, [r7, #12]
 8001ad2:	681b      	ldr	r3, [r3, #0]
 8001ad4:	2210      	movs	r2, #16
 8001ad6:	61da      	str	r2, [r3, #28]
 8001ad8:	68fb      	ldr	r3, [r7, #12]
 8001ada:	0018      	movs	r0, r3
 8001adc:	f000 fcbd 	bl	800245a <I2C_Flush_TXDR>
 8001ae0:	68fb      	ldr	r3, [r7, #12]
 8001ae2:	0018      	movs	r0, r3
 8001ae4:	f000 f94a 	bl	8001d7c <I2C_ITSlaveSeqCplt>
 8001ae8:	e01f      	b.n	8001b2a <I2C_Slave_ISR_IT+0xf6>
 8001aea:	68fb      	ldr	r3, [r7, #12]
 8001aec:	681b      	ldr	r3, [r3, #0]
 8001aee:	2210      	movs	r2, #16
 8001af0:	61da      	str	r2, [r3, #28]
 8001af2:	e091      	b.n	8001c18 <I2C_Slave_ISR_IT+0x1e4>
 8001af4:	68fb      	ldr	r3, [r7, #12]
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	2210      	movs	r2, #16
 8001afa:	61da      	str	r2, [r3, #28]
 8001afc:	68fb      	ldr	r3, [r7, #12]
 8001afe:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001b00:	2204      	movs	r2, #4
 8001b02:	431a      	orrs	r2, r3
 8001b04:	68fb      	ldr	r3, [r7, #12]
 8001b06:	645a      	str	r2, [r3, #68]	@ 0x44
 8001b08:	697b      	ldr	r3, [r7, #20]
 8001b0a:	2b00      	cmp	r3, #0
 8001b0c:	d005      	beq.n	8001b1a <I2C_Slave_ISR_IT+0xe6>
 8001b0e:	697a      	ldr	r2, [r7, #20]
 8001b10:	2380      	movs	r3, #128	@ 0x80
 8001b12:	045b      	lsls	r3, r3, #17
 8001b14:	429a      	cmp	r2, r3
 8001b16:	d000      	beq.n	8001b1a <I2C_Slave_ISR_IT+0xe6>
 8001b18:	e07e      	b.n	8001c18 <I2C_Slave_ISR_IT+0x1e4>
 8001b1a:	68fb      	ldr	r3, [r7, #12]
 8001b1c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001b1e:	68fb      	ldr	r3, [r7, #12]
 8001b20:	0011      	movs	r1, r2
 8001b22:	0018      	movs	r0, r3
 8001b24:	f000 fb6e 	bl	8002204 <I2C_ITError>
 8001b28:	e076      	b.n	8001c18 <I2C_Slave_ISR_IT+0x1e4>
 8001b2a:	e075      	b.n	8001c18 <I2C_Slave_ISR_IT+0x1e4>
 8001b2c:	693b      	ldr	r3, [r7, #16]
 8001b2e:	2204      	movs	r2, #4
 8001b30:	4013      	ands	r3, r2
 8001b32:	d02f      	beq.n	8001b94 <I2C_Slave_ISR_IT+0x160>
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	2204      	movs	r2, #4
 8001b38:	4013      	ands	r3, r2
 8001b3a:	d02b      	beq.n	8001b94 <I2C_Slave_ISR_IT+0x160>
 8001b3c:	68fb      	ldr	r3, [r7, #12]
 8001b3e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001b40:	b29b      	uxth	r3, r3
 8001b42:	2b00      	cmp	r3, #0
 8001b44:	d018      	beq.n	8001b78 <I2C_Slave_ISR_IT+0x144>
 8001b46:	68fb      	ldr	r3, [r7, #12]
 8001b48:	681b      	ldr	r3, [r3, #0]
 8001b4a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001b4c:	68fb      	ldr	r3, [r7, #12]
 8001b4e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001b50:	b2d2      	uxtb	r2, r2
 8001b52:	701a      	strb	r2, [r3, #0]
 8001b54:	68fb      	ldr	r3, [r7, #12]
 8001b56:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001b58:	1c5a      	adds	r2, r3, #1
 8001b5a:	68fb      	ldr	r3, [r7, #12]
 8001b5c:	625a      	str	r2, [r3, #36]	@ 0x24
 8001b5e:	68fb      	ldr	r3, [r7, #12]
 8001b60:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001b62:	3b01      	subs	r3, #1
 8001b64:	b29a      	uxth	r2, r3
 8001b66:	68fb      	ldr	r3, [r7, #12]
 8001b68:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001b6a:	68fb      	ldr	r3, [r7, #12]
 8001b6c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001b6e:	b29b      	uxth	r3, r3
 8001b70:	3b01      	subs	r3, #1
 8001b72:	b29a      	uxth	r2, r3
 8001b74:	68fb      	ldr	r3, [r7, #12]
 8001b76:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001b78:	68fb      	ldr	r3, [r7, #12]
 8001b7a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001b7c:	b29b      	uxth	r3, r3
 8001b7e:	2b00      	cmp	r3, #0
 8001b80:	d14c      	bne.n	8001c1c <I2C_Slave_ISR_IT+0x1e8>
 8001b82:	697b      	ldr	r3, [r7, #20]
 8001b84:	4a2a      	ldr	r2, [pc, #168]	@ (8001c30 <I2C_Slave_ISR_IT+0x1fc>)
 8001b86:	4293      	cmp	r3, r2
 8001b88:	d048      	beq.n	8001c1c <I2C_Slave_ISR_IT+0x1e8>
 8001b8a:	68fb      	ldr	r3, [r7, #12]
 8001b8c:	0018      	movs	r0, r3
 8001b8e:	f000 f8f5 	bl	8001d7c <I2C_ITSlaveSeqCplt>
 8001b92:	e043      	b.n	8001c1c <I2C_Slave_ISR_IT+0x1e8>
 8001b94:	693b      	ldr	r3, [r7, #16]
 8001b96:	2208      	movs	r2, #8
 8001b98:	4013      	ands	r3, r2
 8001b9a:	d00a      	beq.n	8001bb2 <I2C_Slave_ISR_IT+0x17e>
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	2208      	movs	r2, #8
 8001ba0:	4013      	ands	r3, r2
 8001ba2:	d006      	beq.n	8001bb2 <I2C_Slave_ISR_IT+0x17e>
 8001ba4:	693a      	ldr	r2, [r7, #16]
 8001ba6:	68fb      	ldr	r3, [r7, #12]
 8001ba8:	0011      	movs	r1, r2
 8001baa:	0018      	movs	r0, r3
 8001bac:	f000 f842 	bl	8001c34 <I2C_ITAddrCplt>
 8001bb0:	e035      	b.n	8001c1e <I2C_Slave_ISR_IT+0x1ea>
 8001bb2:	693b      	ldr	r3, [r7, #16]
 8001bb4:	2202      	movs	r2, #2
 8001bb6:	4013      	ands	r3, r2
 8001bb8:	d031      	beq.n	8001c1e <I2C_Slave_ISR_IT+0x1ea>
 8001bba:	687b      	ldr	r3, [r7, #4]
 8001bbc:	2202      	movs	r2, #2
 8001bbe:	4013      	ands	r3, r2
 8001bc0:	d02d      	beq.n	8001c1e <I2C_Slave_ISR_IT+0x1ea>
 8001bc2:	68fb      	ldr	r3, [r7, #12]
 8001bc4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001bc6:	b29b      	uxth	r3, r3
 8001bc8:	2b00      	cmp	r3, #0
 8001bca:	d018      	beq.n	8001bfe <I2C_Slave_ISR_IT+0x1ca>
 8001bcc:	68fb      	ldr	r3, [r7, #12]
 8001bce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001bd0:	781a      	ldrb	r2, [r3, #0]
 8001bd2:	68fb      	ldr	r3, [r7, #12]
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	629a      	str	r2, [r3, #40]	@ 0x28
 8001bd8:	68fb      	ldr	r3, [r7, #12]
 8001bda:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001bdc:	1c5a      	adds	r2, r3, #1
 8001bde:	68fb      	ldr	r3, [r7, #12]
 8001be0:	625a      	str	r2, [r3, #36]	@ 0x24
 8001be2:	68fb      	ldr	r3, [r7, #12]
 8001be4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001be6:	b29b      	uxth	r3, r3
 8001be8:	3b01      	subs	r3, #1
 8001bea:	b29a      	uxth	r2, r3
 8001bec:	68fb      	ldr	r3, [r7, #12]
 8001bee:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001bf0:	68fb      	ldr	r3, [r7, #12]
 8001bf2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001bf4:	3b01      	subs	r3, #1
 8001bf6:	b29a      	uxth	r2, r3
 8001bf8:	68fb      	ldr	r3, [r7, #12]
 8001bfa:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001bfc:	e00f      	b.n	8001c1e <I2C_Slave_ISR_IT+0x1ea>
 8001bfe:	697a      	ldr	r2, [r7, #20]
 8001c00:	2380      	movs	r3, #128	@ 0x80
 8001c02:	045b      	lsls	r3, r3, #17
 8001c04:	429a      	cmp	r2, r3
 8001c06:	d002      	beq.n	8001c0e <I2C_Slave_ISR_IT+0x1da>
 8001c08:	697b      	ldr	r3, [r7, #20]
 8001c0a:	2b00      	cmp	r3, #0
 8001c0c:	d107      	bne.n	8001c1e <I2C_Slave_ISR_IT+0x1ea>
 8001c0e:	68fb      	ldr	r3, [r7, #12]
 8001c10:	0018      	movs	r0, r3
 8001c12:	f000 f8b3 	bl	8001d7c <I2C_ITSlaveSeqCplt>
 8001c16:	e002      	b.n	8001c1e <I2C_Slave_ISR_IT+0x1ea>
 8001c18:	46c0      	nop			@ (mov r8, r8)
 8001c1a:	e000      	b.n	8001c1e <I2C_Slave_ISR_IT+0x1ea>
 8001c1c:	46c0      	nop			@ (mov r8, r8)
 8001c1e:	68fb      	ldr	r3, [r7, #12]
 8001c20:	2240      	movs	r2, #64	@ 0x40
 8001c22:	2100      	movs	r1, #0
 8001c24:	5499      	strb	r1, [r3, r2]
 8001c26:	2300      	movs	r3, #0
 8001c28:	0018      	movs	r0, r3
 8001c2a:	46bd      	mov	sp, r7
 8001c2c:	b006      	add	sp, #24
 8001c2e:	bd80      	pop	{r7, pc}
 8001c30:	ffff0000 	.word	0xffff0000

08001c34 <I2C_ITAddrCplt>:
 8001c34:	b5b0      	push	{r4, r5, r7, lr}
 8001c36:	b084      	sub	sp, #16
 8001c38:	af00      	add	r7, sp, #0
 8001c3a:	6078      	str	r0, [r7, #4]
 8001c3c:	6039      	str	r1, [r7, #0]
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	2241      	movs	r2, #65	@ 0x41
 8001c42:	5c9b      	ldrb	r3, [r3, r2]
 8001c44:	b2db      	uxtb	r3, r3
 8001c46:	001a      	movs	r2, r3
 8001c48:	2328      	movs	r3, #40	@ 0x28
 8001c4a:	4013      	ands	r3, r2
 8001c4c:	2b28      	cmp	r3, #40	@ 0x28
 8001c4e:	d000      	beq.n	8001c52 <I2C_ITAddrCplt+0x1e>
 8001c50:	e088      	b.n	8001d64 <I2C_ITAddrCplt+0x130>
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	699b      	ldr	r3, [r3, #24]
 8001c58:	0c1b      	lsrs	r3, r3, #16
 8001c5a:	b2da      	uxtb	r2, r3
 8001c5c:	250f      	movs	r5, #15
 8001c5e:	197b      	adds	r3, r7, r5
 8001c60:	2101      	movs	r1, #1
 8001c62:	400a      	ands	r2, r1
 8001c64:	701a      	strb	r2, [r3, #0]
 8001c66:	687b      	ldr	r3, [r7, #4]
 8001c68:	681b      	ldr	r3, [r3, #0]
 8001c6a:	699b      	ldr	r3, [r3, #24]
 8001c6c:	0c1b      	lsrs	r3, r3, #16
 8001c6e:	b29a      	uxth	r2, r3
 8001c70:	200c      	movs	r0, #12
 8001c72:	183b      	adds	r3, r7, r0
 8001c74:	21fe      	movs	r1, #254	@ 0xfe
 8001c76:	400a      	ands	r2, r1
 8001c78:	801a      	strh	r2, [r3, #0]
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	689b      	ldr	r3, [r3, #8]
 8001c80:	b29a      	uxth	r2, r3
 8001c82:	240a      	movs	r4, #10
 8001c84:	193b      	adds	r3, r7, r4
 8001c86:	0592      	lsls	r2, r2, #22
 8001c88:	0d92      	lsrs	r2, r2, #22
 8001c8a:	801a      	strh	r2, [r3, #0]
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	68db      	ldr	r3, [r3, #12]
 8001c92:	b29a      	uxth	r2, r3
 8001c94:	2308      	movs	r3, #8
 8001c96:	18fb      	adds	r3, r7, r3
 8001c98:	21fe      	movs	r1, #254	@ 0xfe
 8001c9a:	400a      	ands	r2, r1
 8001c9c:	801a      	strh	r2, [r3, #0]
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	68db      	ldr	r3, [r3, #12]
 8001ca2:	2b02      	cmp	r3, #2
 8001ca4:	d148      	bne.n	8001d38 <I2C_ITAddrCplt+0x104>
 8001ca6:	0021      	movs	r1, r4
 8001ca8:	187b      	adds	r3, r7, r1
 8001caa:	881b      	ldrh	r3, [r3, #0]
 8001cac:	09db      	lsrs	r3, r3, #7
 8001cae:	b29a      	uxth	r2, r3
 8001cb0:	183b      	adds	r3, r7, r0
 8001cb2:	881b      	ldrh	r3, [r3, #0]
 8001cb4:	4053      	eors	r3, r2
 8001cb6:	b29b      	uxth	r3, r3
 8001cb8:	001a      	movs	r2, r3
 8001cba:	2306      	movs	r3, #6
 8001cbc:	4013      	ands	r3, r2
 8001cbe:	d120      	bne.n	8001d02 <I2C_ITAddrCplt+0xce>
 8001cc0:	183b      	adds	r3, r7, r0
 8001cc2:	187a      	adds	r2, r7, r1
 8001cc4:	8812      	ldrh	r2, [r2, #0]
 8001cc6:	801a      	strh	r2, [r3, #0]
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001ccc:	1c5a      	adds	r2, r3, #1
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	649a      	str	r2, [r3, #72]	@ 0x48
 8001cd2:	687b      	ldr	r3, [r7, #4]
 8001cd4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8001cd6:	2b02      	cmp	r3, #2
 8001cd8:	d14c      	bne.n	8001d74 <I2C_ITAddrCplt+0x140>
 8001cda:	687b      	ldr	r3, [r7, #4]
 8001cdc:	2200      	movs	r2, #0
 8001cde:	649a      	str	r2, [r3, #72]	@ 0x48
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	681b      	ldr	r3, [r3, #0]
 8001ce4:	2208      	movs	r2, #8
 8001ce6:	61da      	str	r2, [r3, #28]
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	2240      	movs	r2, #64	@ 0x40
 8001cec:	2100      	movs	r1, #0
 8001cee:	5499      	strb	r1, [r3, r2]
 8001cf0:	183b      	adds	r3, r7, r0
 8001cf2:	881a      	ldrh	r2, [r3, #0]
 8001cf4:	197b      	adds	r3, r7, r5
 8001cf6:	7819      	ldrb	r1, [r3, #0]
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	0018      	movs	r0, r3
 8001cfc:	f7ff fe71 	bl	80019e2 <HAL_I2C_AddrCallback>
 8001d00:	e038      	b.n	8001d74 <I2C_ITAddrCplt+0x140>
 8001d02:	240c      	movs	r4, #12
 8001d04:	193b      	adds	r3, r7, r4
 8001d06:	2208      	movs	r2, #8
 8001d08:	18ba      	adds	r2, r7, r2
 8001d0a:	8812      	ldrh	r2, [r2, #0]
 8001d0c:	801a      	strh	r2, [r3, #0]
 8001d0e:	2380      	movs	r3, #128	@ 0x80
 8001d10:	021a      	lsls	r2, r3, #8
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	0011      	movs	r1, r2
 8001d16:	0018      	movs	r0, r3
 8001d18:	f000 fdf4 	bl	8002904 <I2C_Disable_IRQ>
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	2240      	movs	r2, #64	@ 0x40
 8001d20:	2100      	movs	r1, #0
 8001d22:	5499      	strb	r1, [r3, r2]
 8001d24:	193b      	adds	r3, r7, r4
 8001d26:	881a      	ldrh	r2, [r3, #0]
 8001d28:	230f      	movs	r3, #15
 8001d2a:	18fb      	adds	r3, r7, r3
 8001d2c:	7819      	ldrb	r1, [r3, #0]
 8001d2e:	687b      	ldr	r3, [r7, #4]
 8001d30:	0018      	movs	r0, r3
 8001d32:	f7ff fe56 	bl	80019e2 <HAL_I2C_AddrCallback>
 8001d36:	e01d      	b.n	8001d74 <I2C_ITAddrCplt+0x140>
 8001d38:	2380      	movs	r3, #128	@ 0x80
 8001d3a:	021a      	lsls	r2, r3, #8
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	0011      	movs	r1, r2
 8001d40:	0018      	movs	r0, r3
 8001d42:	f000 fddf 	bl	8002904 <I2C_Disable_IRQ>
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	2240      	movs	r2, #64	@ 0x40
 8001d4a:	2100      	movs	r1, #0
 8001d4c:	5499      	strb	r1, [r3, r2]
 8001d4e:	230c      	movs	r3, #12
 8001d50:	18fb      	adds	r3, r7, r3
 8001d52:	881a      	ldrh	r2, [r3, #0]
 8001d54:	230f      	movs	r3, #15
 8001d56:	18fb      	adds	r3, r7, r3
 8001d58:	7819      	ldrb	r1, [r3, #0]
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	0018      	movs	r0, r3
 8001d5e:	f7ff fe40 	bl	80019e2 <HAL_I2C_AddrCallback>
 8001d62:	e007      	b.n	8001d74 <I2C_ITAddrCplt+0x140>
 8001d64:	687b      	ldr	r3, [r7, #4]
 8001d66:	681b      	ldr	r3, [r3, #0]
 8001d68:	2208      	movs	r2, #8
 8001d6a:	61da      	str	r2, [r3, #28]
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	2240      	movs	r2, #64	@ 0x40
 8001d70:	2100      	movs	r1, #0
 8001d72:	5499      	strb	r1, [r3, r2]
 8001d74:	46c0      	nop			@ (mov r8, r8)
 8001d76:	46bd      	mov	sp, r7
 8001d78:	b004      	add	sp, #16
 8001d7a:	bdb0      	pop	{r4, r5, r7, pc}

08001d7c <I2C_ITSlaveSeqCplt>:
 8001d7c:	b580      	push	{r7, lr}
 8001d7e:	b084      	sub	sp, #16
 8001d80:	af00      	add	r7, sp, #0
 8001d82:	6078      	str	r0, [r7, #4]
 8001d84:	687b      	ldr	r3, [r7, #4]
 8001d86:	681b      	ldr	r3, [r3, #0]
 8001d88:	681b      	ldr	r3, [r3, #0]
 8001d8a:	60fb      	str	r3, [r7, #12]
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	2242      	movs	r2, #66	@ 0x42
 8001d90:	2100      	movs	r1, #0
 8001d92:	5499      	strb	r1, [r3, r2]
 8001d94:	68fa      	ldr	r2, [r7, #12]
 8001d96:	2380      	movs	r3, #128	@ 0x80
 8001d98:	01db      	lsls	r3, r3, #7
 8001d9a:	4013      	ands	r3, r2
 8001d9c:	d008      	beq.n	8001db0 <I2C_ITSlaveSeqCplt+0x34>
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	681a      	ldr	r2, [r3, #0]
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	681b      	ldr	r3, [r3, #0]
 8001da8:	4924      	ldr	r1, [pc, #144]	@ (8001e3c <I2C_ITSlaveSeqCplt+0xc0>)
 8001daa:	400a      	ands	r2, r1
 8001dac:	601a      	str	r2, [r3, #0]
 8001dae:	e00c      	b.n	8001dca <I2C_ITSlaveSeqCplt+0x4e>
 8001db0:	68fa      	ldr	r2, [r7, #12]
 8001db2:	2380      	movs	r3, #128	@ 0x80
 8001db4:	021b      	lsls	r3, r3, #8
 8001db6:	4013      	ands	r3, r2
 8001db8:	d007      	beq.n	8001dca <I2C_ITSlaveSeqCplt+0x4e>
 8001dba:	687b      	ldr	r3, [r7, #4]
 8001dbc:	681b      	ldr	r3, [r3, #0]
 8001dbe:	681a      	ldr	r2, [r3, #0]
 8001dc0:	687b      	ldr	r3, [r7, #4]
 8001dc2:	681b      	ldr	r3, [r3, #0]
 8001dc4:	491e      	ldr	r1, [pc, #120]	@ (8001e40 <I2C_ITSlaveSeqCplt+0xc4>)
 8001dc6:	400a      	ands	r2, r1
 8001dc8:	601a      	str	r2, [r3, #0]
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	2241      	movs	r2, #65	@ 0x41
 8001dce:	5c9b      	ldrb	r3, [r3, r2]
 8001dd0:	b2db      	uxtb	r3, r3
 8001dd2:	2b29      	cmp	r3, #41	@ 0x29
 8001dd4:	d114      	bne.n	8001e00 <I2C_ITSlaveSeqCplt+0x84>
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	2241      	movs	r2, #65	@ 0x41
 8001dda:	2128      	movs	r1, #40	@ 0x28
 8001ddc:	5499      	strb	r1, [r3, r2]
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	2221      	movs	r2, #33	@ 0x21
 8001de2:	631a      	str	r2, [r3, #48]	@ 0x30
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	2101      	movs	r1, #1
 8001de8:	0018      	movs	r0, r3
 8001dea:	f000 fd8b 	bl	8002904 <I2C_Disable_IRQ>
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	2240      	movs	r2, #64	@ 0x40
 8001df2:	2100      	movs	r1, #0
 8001df4:	5499      	strb	r1, [r3, r2]
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	0018      	movs	r0, r3
 8001dfa:	f7ff fde2 	bl	80019c2 <HAL_I2C_SlaveTxCpltCallback>
 8001dfe:	e019      	b.n	8001e34 <I2C_ITSlaveSeqCplt+0xb8>
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	2241      	movs	r2, #65	@ 0x41
 8001e04:	5c9b      	ldrb	r3, [r3, r2]
 8001e06:	b2db      	uxtb	r3, r3
 8001e08:	2b2a      	cmp	r3, #42	@ 0x2a
 8001e0a:	d113      	bne.n	8001e34 <I2C_ITSlaveSeqCplt+0xb8>
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	2241      	movs	r2, #65	@ 0x41
 8001e10:	2128      	movs	r1, #40	@ 0x28
 8001e12:	5499      	strb	r1, [r3, r2]
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	2222      	movs	r2, #34	@ 0x22
 8001e18:	631a      	str	r2, [r3, #48]	@ 0x30
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	2102      	movs	r1, #2
 8001e1e:	0018      	movs	r0, r3
 8001e20:	f000 fd70 	bl	8002904 <I2C_Disable_IRQ>
 8001e24:	687b      	ldr	r3, [r7, #4]
 8001e26:	2240      	movs	r2, #64	@ 0x40
 8001e28:	2100      	movs	r1, #0
 8001e2a:	5499      	strb	r1, [r3, r2]
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	0018      	movs	r0, r3
 8001e30:	f7ff fdcf 	bl	80019d2 <HAL_I2C_SlaveRxCpltCallback>
 8001e34:	46c0      	nop			@ (mov r8, r8)
 8001e36:	46bd      	mov	sp, r7
 8001e38:	b004      	add	sp, #16
 8001e3a:	bd80      	pop	{r7, pc}
 8001e3c:	ffffbfff 	.word	0xffffbfff
 8001e40:	ffff7fff 	.word	0xffff7fff

08001e44 <I2C_ITSlaveCplt>:
 8001e44:	b580      	push	{r7, lr}
 8001e46:	b086      	sub	sp, #24
 8001e48:	af00      	add	r7, sp, #0
 8001e4a:	6078      	str	r0, [r7, #4]
 8001e4c:	6039      	str	r1, [r7, #0]
 8001e4e:	687b      	ldr	r3, [r7, #4]
 8001e50:	681b      	ldr	r3, [r3, #0]
 8001e52:	681b      	ldr	r3, [r3, #0]
 8001e54:	613b      	str	r3, [r7, #16]
 8001e56:	683b      	ldr	r3, [r7, #0]
 8001e58:	617b      	str	r3, [r7, #20]
 8001e5a:	687b      	ldr	r3, [r7, #4]
 8001e5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8001e5e:	60fb      	str	r3, [r7, #12]
 8001e60:	200b      	movs	r0, #11
 8001e62:	183b      	adds	r3, r7, r0
 8001e64:	687a      	ldr	r2, [r7, #4]
 8001e66:	2141      	movs	r1, #65	@ 0x41
 8001e68:	5c52      	ldrb	r2, [r2, r1]
 8001e6a:	701a      	strb	r2, [r3, #0]
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	681b      	ldr	r3, [r3, #0]
 8001e70:	2220      	movs	r2, #32
 8001e72:	61da      	str	r2, [r3, #28]
 8001e74:	183b      	adds	r3, r7, r0
 8001e76:	781b      	ldrb	r3, [r3, #0]
 8001e78:	2b21      	cmp	r3, #33	@ 0x21
 8001e7a:	d003      	beq.n	8001e84 <I2C_ITSlaveCplt+0x40>
 8001e7c:	183b      	adds	r3, r7, r0
 8001e7e:	781b      	ldrb	r3, [r3, #0]
 8001e80:	2b29      	cmp	r3, #41	@ 0x29
 8001e82:	d109      	bne.n	8001e98 <I2C_ITSlaveCplt+0x54>
 8001e84:	4aac      	ldr	r2, [pc, #688]	@ (8002138 <I2C_ITSlaveCplt+0x2f4>)
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	0011      	movs	r1, r2
 8001e8a:	0018      	movs	r0, r3
 8001e8c:	f000 fd3a 	bl	8002904 <I2C_Disable_IRQ>
 8001e90:	687b      	ldr	r3, [r7, #4]
 8001e92:	2221      	movs	r2, #33	@ 0x21
 8001e94:	631a      	str	r2, [r3, #48]	@ 0x30
 8001e96:	e020      	b.n	8001eda <I2C_ITSlaveCplt+0x96>
 8001e98:	220b      	movs	r2, #11
 8001e9a:	18bb      	adds	r3, r7, r2
 8001e9c:	781b      	ldrb	r3, [r3, #0]
 8001e9e:	2b22      	cmp	r3, #34	@ 0x22
 8001ea0:	d003      	beq.n	8001eaa <I2C_ITSlaveCplt+0x66>
 8001ea2:	18bb      	adds	r3, r7, r2
 8001ea4:	781b      	ldrb	r3, [r3, #0]
 8001ea6:	2b2a      	cmp	r3, #42	@ 0x2a
 8001ea8:	d109      	bne.n	8001ebe <I2C_ITSlaveCplt+0x7a>
 8001eaa:	4aa4      	ldr	r2, [pc, #656]	@ (800213c <I2C_ITSlaveCplt+0x2f8>)
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	0011      	movs	r1, r2
 8001eb0:	0018      	movs	r0, r3
 8001eb2:	f000 fd27 	bl	8002904 <I2C_Disable_IRQ>
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	2222      	movs	r2, #34	@ 0x22
 8001eba:	631a      	str	r2, [r3, #48]	@ 0x30
 8001ebc:	e00d      	b.n	8001eda <I2C_ITSlaveCplt+0x96>
 8001ebe:	230b      	movs	r3, #11
 8001ec0:	18fb      	adds	r3, r7, r3
 8001ec2:	781b      	ldrb	r3, [r3, #0]
 8001ec4:	2b28      	cmp	r3, #40	@ 0x28
 8001ec6:	d108      	bne.n	8001eda <I2C_ITSlaveCplt+0x96>
 8001ec8:	4a9d      	ldr	r2, [pc, #628]	@ (8002140 <I2C_ITSlaveCplt+0x2fc>)
 8001eca:	687b      	ldr	r3, [r7, #4]
 8001ecc:	0011      	movs	r1, r2
 8001ece:	0018      	movs	r0, r3
 8001ed0:	f000 fd18 	bl	8002904 <I2C_Disable_IRQ>
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	2200      	movs	r2, #0
 8001ed8:	631a      	str	r2, [r3, #48]	@ 0x30
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	681b      	ldr	r3, [r3, #0]
 8001ede:	685a      	ldr	r2, [r3, #4]
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	2180      	movs	r1, #128	@ 0x80
 8001ee6:	0209      	lsls	r1, r1, #8
 8001ee8:	430a      	orrs	r2, r1
 8001eea:	605a      	str	r2, [r3, #4]
 8001eec:	687b      	ldr	r3, [r7, #4]
 8001eee:	681b      	ldr	r3, [r3, #0]
 8001ef0:	685a      	ldr	r2, [r3, #4]
 8001ef2:	687b      	ldr	r3, [r7, #4]
 8001ef4:	681b      	ldr	r3, [r3, #0]
 8001ef6:	4993      	ldr	r1, [pc, #588]	@ (8002144 <I2C_ITSlaveCplt+0x300>)
 8001ef8:	400a      	ands	r2, r1
 8001efa:	605a      	str	r2, [r3, #4]
 8001efc:	687b      	ldr	r3, [r7, #4]
 8001efe:	0018      	movs	r0, r3
 8001f00:	f000 faab 	bl	800245a <I2C_Flush_TXDR>
 8001f04:	693a      	ldr	r2, [r7, #16]
 8001f06:	2380      	movs	r3, #128	@ 0x80
 8001f08:	01db      	lsls	r3, r3, #7
 8001f0a:	4013      	ands	r3, r2
 8001f0c:	d013      	beq.n	8001f36 <I2C_ITSlaveCplt+0xf2>
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	681a      	ldr	r2, [r3, #0]
 8001f14:	687b      	ldr	r3, [r7, #4]
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	498b      	ldr	r1, [pc, #556]	@ (8002148 <I2C_ITSlaveCplt+0x304>)
 8001f1a:	400a      	ands	r2, r1
 8001f1c:	601a      	str	r2, [r3, #0]
 8001f1e:	687b      	ldr	r3, [r7, #4]
 8001f20:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001f22:	2b00      	cmp	r3, #0
 8001f24:	d01f      	beq.n	8001f66 <I2C_ITSlaveCplt+0x122>
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001f2a:	681b      	ldr	r3, [r3, #0]
 8001f2c:	685b      	ldr	r3, [r3, #4]
 8001f2e:	b29a      	uxth	r2, r3
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001f34:	e017      	b.n	8001f66 <I2C_ITSlaveCplt+0x122>
 8001f36:	693a      	ldr	r2, [r7, #16]
 8001f38:	2380      	movs	r3, #128	@ 0x80
 8001f3a:	021b      	lsls	r3, r3, #8
 8001f3c:	4013      	ands	r3, r2
 8001f3e:	d012      	beq.n	8001f66 <I2C_ITSlaveCplt+0x122>
 8001f40:	687b      	ldr	r3, [r7, #4]
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	681a      	ldr	r2, [r3, #0]
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	681b      	ldr	r3, [r3, #0]
 8001f4a:	4980      	ldr	r1, [pc, #512]	@ (800214c <I2C_ITSlaveCplt+0x308>)
 8001f4c:	400a      	ands	r2, r1
 8001f4e:	601a      	str	r2, [r3, #0]
 8001f50:	687b      	ldr	r3, [r7, #4]
 8001f52:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001f54:	2b00      	cmp	r3, #0
 8001f56:	d006      	beq.n	8001f66 <I2C_ITSlaveCplt+0x122>
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	685b      	ldr	r3, [r3, #4]
 8001f60:	b29a      	uxth	r2, r3
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001f66:	697b      	ldr	r3, [r7, #20]
 8001f68:	2204      	movs	r2, #4
 8001f6a:	4013      	ands	r3, r2
 8001f6c:	d020      	beq.n	8001fb0 <I2C_ITSlaveCplt+0x16c>
 8001f6e:	697b      	ldr	r3, [r7, #20]
 8001f70:	2204      	movs	r2, #4
 8001f72:	4393      	bics	r3, r2
 8001f74:	617b      	str	r3, [r7, #20]
 8001f76:	687b      	ldr	r3, [r7, #4]
 8001f78:	681b      	ldr	r3, [r3, #0]
 8001f7a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8001f7c:	687b      	ldr	r3, [r7, #4]
 8001f7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f80:	b2d2      	uxtb	r2, r2
 8001f82:	701a      	strb	r2, [r3, #0]
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001f88:	1c5a      	adds	r2, r3, #1
 8001f8a:	687b      	ldr	r3, [r7, #4]
 8001f8c:	625a      	str	r2, [r3, #36]	@ 0x24
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d00c      	beq.n	8001fb0 <I2C_ITSlaveCplt+0x16c>
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8001f9a:	3b01      	subs	r3, #1
 8001f9c:	b29a      	uxth	r2, r3
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	851a      	strh	r2, [r3, #40]	@ 0x28
 8001fa2:	687b      	ldr	r3, [r7, #4]
 8001fa4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001fa6:	b29b      	uxth	r3, r3
 8001fa8:	3b01      	subs	r3, #1
 8001faa:	b29a      	uxth	r2, r3
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001fb4:	b29b      	uxth	r3, r3
 8001fb6:	2b00      	cmp	r3, #0
 8001fb8:	d005      	beq.n	8001fc6 <I2C_ITSlaveCplt+0x182>
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001fbe:	2204      	movs	r2, #4
 8001fc0:	431a      	orrs	r2, r3
 8001fc2:	687b      	ldr	r3, [r7, #4]
 8001fc4:	645a      	str	r2, [r3, #68]	@ 0x44
 8001fc6:	697b      	ldr	r3, [r7, #20]
 8001fc8:	2210      	movs	r2, #16
 8001fca:	4013      	ands	r3, r2
 8001fcc:	d04f      	beq.n	800206e <I2C_ITSlaveCplt+0x22a>
 8001fce:	693b      	ldr	r3, [r7, #16]
 8001fd0:	2210      	movs	r2, #16
 8001fd2:	4013      	ands	r3, r2
 8001fd4:	d04b      	beq.n	800206e <I2C_ITSlaveCplt+0x22a>
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8001fda:	b29b      	uxth	r3, r3
 8001fdc:	2b00      	cmp	r3, #0
 8001fde:	d12d      	bne.n	800203c <I2C_ITSlaveCplt+0x1f8>
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	2241      	movs	r2, #65	@ 0x41
 8001fe4:	5c9b      	ldrb	r3, [r3, r2]
 8001fe6:	b2db      	uxtb	r3, r3
 8001fe8:	2b28      	cmp	r3, #40	@ 0x28
 8001fea:	d10b      	bne.n	8002004 <I2C_ITSlaveCplt+0x1c0>
 8001fec:	68fa      	ldr	r2, [r7, #12]
 8001fee:	2380      	movs	r3, #128	@ 0x80
 8001ff0:	049b      	lsls	r3, r3, #18
 8001ff2:	429a      	cmp	r2, r3
 8001ff4:	d106      	bne.n	8002004 <I2C_ITSlaveCplt+0x1c0>
 8001ff6:	697a      	ldr	r2, [r7, #20]
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	0011      	movs	r1, r2
 8001ffc:	0018      	movs	r0, r3
 8001ffe:	f000 f8a9 	bl	8002154 <I2C_ITListenCplt>
 8002002:	e034      	b.n	800206e <I2C_ITSlaveCplt+0x22a>
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	2241      	movs	r2, #65	@ 0x41
 8002008:	5c9b      	ldrb	r3, [r3, r2]
 800200a:	b2db      	uxtb	r3, r3
 800200c:	2b29      	cmp	r3, #41	@ 0x29
 800200e:	d110      	bne.n	8002032 <I2C_ITSlaveCplt+0x1ee>
 8002010:	68fb      	ldr	r3, [r7, #12]
 8002012:	4a4f      	ldr	r2, [pc, #316]	@ (8002150 <I2C_ITSlaveCplt+0x30c>)
 8002014:	4293      	cmp	r3, r2
 8002016:	d00c      	beq.n	8002032 <I2C_ITSlaveCplt+0x1ee>
 8002018:	687b      	ldr	r3, [r7, #4]
 800201a:	681b      	ldr	r3, [r3, #0]
 800201c:	2210      	movs	r2, #16
 800201e:	61da      	str	r2, [r3, #28]
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	0018      	movs	r0, r3
 8002024:	f000 fa19 	bl	800245a <I2C_Flush_TXDR>
 8002028:	687b      	ldr	r3, [r7, #4]
 800202a:	0018      	movs	r0, r3
 800202c:	f7ff fea6 	bl	8001d7c <I2C_ITSlaveSeqCplt>
 8002030:	e01d      	b.n	800206e <I2C_ITSlaveCplt+0x22a>
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	2210      	movs	r2, #16
 8002038:	61da      	str	r2, [r3, #28]
 800203a:	e018      	b.n	800206e <I2C_ITSlaveCplt+0x22a>
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	2210      	movs	r2, #16
 8002042:	61da      	str	r2, [r3, #28]
 8002044:	687b      	ldr	r3, [r7, #4]
 8002046:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002048:	2204      	movs	r2, #4
 800204a:	431a      	orrs	r2, r3
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	645a      	str	r2, [r3, #68]	@ 0x44
 8002050:	68fb      	ldr	r3, [r7, #12]
 8002052:	2b00      	cmp	r3, #0
 8002054:	d004      	beq.n	8002060 <I2C_ITSlaveCplt+0x21c>
 8002056:	68fa      	ldr	r2, [r7, #12]
 8002058:	2380      	movs	r3, #128	@ 0x80
 800205a:	045b      	lsls	r3, r3, #17
 800205c:	429a      	cmp	r2, r3
 800205e:	d106      	bne.n	800206e <I2C_ITSlaveCplt+0x22a>
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002064:	687b      	ldr	r3, [r7, #4]
 8002066:	0011      	movs	r1, r2
 8002068:	0018      	movs	r0, r3
 800206a:	f000 f8cb 	bl	8002204 <I2C_ITError>
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	2242      	movs	r2, #66	@ 0x42
 8002072:	2100      	movs	r1, #0
 8002074:	5499      	strb	r1, [r3, r2]
 8002076:	687b      	ldr	r3, [r7, #4]
 8002078:	2200      	movs	r2, #0
 800207a:	635a      	str	r2, [r3, #52]	@ 0x34
 800207c:	687b      	ldr	r3, [r7, #4]
 800207e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002080:	2b00      	cmp	r3, #0
 8002082:	d013      	beq.n	80020ac <I2C_ITSlaveCplt+0x268>
 8002084:	687b      	ldr	r3, [r7, #4]
 8002086:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002088:	687b      	ldr	r3, [r7, #4]
 800208a:	0011      	movs	r1, r2
 800208c:	0018      	movs	r0, r3
 800208e:	f000 f8b9 	bl	8002204 <I2C_ITError>
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	2241      	movs	r2, #65	@ 0x41
 8002096:	5c9b      	ldrb	r3, [r3, r2]
 8002098:	b2db      	uxtb	r3, r3
 800209a:	2b28      	cmp	r3, #40	@ 0x28
 800209c:	d147      	bne.n	800212e <I2C_ITSlaveCplt+0x2ea>
 800209e:	697a      	ldr	r2, [r7, #20]
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	0011      	movs	r1, r2
 80020a4:	0018      	movs	r0, r3
 80020a6:	f000 f855 	bl	8002154 <I2C_ITListenCplt>
 80020aa:	e040      	b.n	800212e <I2C_ITSlaveCplt+0x2ea>
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80020b0:	4a27      	ldr	r2, [pc, #156]	@ (8002150 <I2C_ITSlaveCplt+0x30c>)
 80020b2:	4293      	cmp	r3, r2
 80020b4:	d016      	beq.n	80020e4 <I2C_ITSlaveCplt+0x2a0>
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	0018      	movs	r0, r3
 80020ba:	f7ff fe5f 	bl	8001d7c <I2C_ITSlaveSeqCplt>
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	4a23      	ldr	r2, [pc, #140]	@ (8002150 <I2C_ITSlaveCplt+0x30c>)
 80020c2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	2241      	movs	r2, #65	@ 0x41
 80020c8:	2120      	movs	r1, #32
 80020ca:	5499      	strb	r1, [r3, r2]
 80020cc:	687b      	ldr	r3, [r7, #4]
 80020ce:	2200      	movs	r2, #0
 80020d0:	631a      	str	r2, [r3, #48]	@ 0x30
 80020d2:	687b      	ldr	r3, [r7, #4]
 80020d4:	2240      	movs	r2, #64	@ 0x40
 80020d6:	2100      	movs	r1, #0
 80020d8:	5499      	strb	r1, [r3, r2]
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	0018      	movs	r0, r3
 80020de:	f7ff fc90 	bl	8001a02 <HAL_I2C_ListenCpltCallback>
 80020e2:	e024      	b.n	800212e <I2C_ITSlaveCplt+0x2ea>
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	2241      	movs	r2, #65	@ 0x41
 80020e8:	5c9b      	ldrb	r3, [r3, r2]
 80020ea:	b2db      	uxtb	r3, r3
 80020ec:	2b22      	cmp	r3, #34	@ 0x22
 80020ee:	d10f      	bne.n	8002110 <I2C_ITSlaveCplt+0x2cc>
 80020f0:	687b      	ldr	r3, [r7, #4]
 80020f2:	2241      	movs	r2, #65	@ 0x41
 80020f4:	2120      	movs	r1, #32
 80020f6:	5499      	strb	r1, [r3, r2]
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	2200      	movs	r2, #0
 80020fc:	631a      	str	r2, [r3, #48]	@ 0x30
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	2240      	movs	r2, #64	@ 0x40
 8002102:	2100      	movs	r1, #0
 8002104:	5499      	strb	r1, [r3, r2]
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	0018      	movs	r0, r3
 800210a:	f7ff fc62 	bl	80019d2 <HAL_I2C_SlaveRxCpltCallback>
 800210e:	e00e      	b.n	800212e <I2C_ITSlaveCplt+0x2ea>
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	2241      	movs	r2, #65	@ 0x41
 8002114:	2120      	movs	r1, #32
 8002116:	5499      	strb	r1, [r3, r2]
 8002118:	687b      	ldr	r3, [r7, #4]
 800211a:	2200      	movs	r2, #0
 800211c:	631a      	str	r2, [r3, #48]	@ 0x30
 800211e:	687b      	ldr	r3, [r7, #4]
 8002120:	2240      	movs	r2, #64	@ 0x40
 8002122:	2100      	movs	r1, #0
 8002124:	5499      	strb	r1, [r3, r2]
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	0018      	movs	r0, r3
 800212a:	f7ff fc4a 	bl	80019c2 <HAL_I2C_SlaveTxCpltCallback>
 800212e:	46c0      	nop			@ (mov r8, r8)
 8002130:	46bd      	mov	sp, r7
 8002132:	b006      	add	sp, #24
 8002134:	bd80      	pop	{r7, pc}
 8002136:	46c0      	nop			@ (mov r8, r8)
 8002138:	00008001 	.word	0x00008001
 800213c:	00008002 	.word	0x00008002
 8002140:	00008003 	.word	0x00008003
 8002144:	fe00e800 	.word	0xfe00e800
 8002148:	ffffbfff 	.word	0xffffbfff
 800214c:	ffff7fff 	.word	0xffff7fff
 8002150:	ffff0000 	.word	0xffff0000

08002154 <I2C_ITListenCplt>:
 8002154:	b580      	push	{r7, lr}
 8002156:	b082      	sub	sp, #8
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
 800215c:	6039      	str	r1, [r7, #0]
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	4a26      	ldr	r2, [pc, #152]	@ (80021fc <I2C_ITListenCplt+0xa8>)
 8002162:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002164:	687b      	ldr	r3, [r7, #4]
 8002166:	2200      	movs	r2, #0
 8002168:	631a      	str	r2, [r3, #48]	@ 0x30
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	2241      	movs	r2, #65	@ 0x41
 800216e:	2120      	movs	r1, #32
 8002170:	5499      	strb	r1, [r3, r2]
 8002172:	687b      	ldr	r3, [r7, #4]
 8002174:	2242      	movs	r2, #66	@ 0x42
 8002176:	2100      	movs	r1, #0
 8002178:	5499      	strb	r1, [r3, r2]
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	2200      	movs	r2, #0
 800217e:	635a      	str	r2, [r3, #52]	@ 0x34
 8002180:	683b      	ldr	r3, [r7, #0]
 8002182:	2204      	movs	r2, #4
 8002184:	4013      	ands	r3, r2
 8002186:	d022      	beq.n	80021ce <I2C_ITListenCplt+0x7a>
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002192:	b2d2      	uxtb	r2, r2
 8002194:	701a      	strb	r2, [r3, #0]
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800219a:	1c5a      	adds	r2, r3, #1
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	625a      	str	r2, [r3, #36]	@ 0x24
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80021a4:	2b00      	cmp	r3, #0
 80021a6:	d012      	beq.n	80021ce <I2C_ITListenCplt+0x7a>
 80021a8:	687b      	ldr	r3, [r7, #4]
 80021aa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80021ac:	3b01      	subs	r3, #1
 80021ae:	b29a      	uxth	r2, r3
 80021b0:	687b      	ldr	r3, [r7, #4]
 80021b2:	851a      	strh	r2, [r3, #40]	@ 0x28
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80021b8:	b29b      	uxth	r3, r3
 80021ba:	3b01      	subs	r3, #1
 80021bc:	b29a      	uxth	r2, r3
 80021be:	687b      	ldr	r3, [r7, #4]
 80021c0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80021c2:	687b      	ldr	r3, [r7, #4]
 80021c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80021c6:	2204      	movs	r2, #4
 80021c8:	431a      	orrs	r2, r3
 80021ca:	687b      	ldr	r3, [r7, #4]
 80021cc:	645a      	str	r2, [r3, #68]	@ 0x44
 80021ce:	4a0c      	ldr	r2, [pc, #48]	@ (8002200 <I2C_ITListenCplt+0xac>)
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	0011      	movs	r1, r2
 80021d4:	0018      	movs	r0, r3
 80021d6:	f000 fb95 	bl	8002904 <I2C_Disable_IRQ>
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	2210      	movs	r2, #16
 80021e0:	61da      	str	r2, [r3, #28]
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	2240      	movs	r2, #64	@ 0x40
 80021e6:	2100      	movs	r1, #0
 80021e8:	5499      	strb	r1, [r3, r2]
 80021ea:	687b      	ldr	r3, [r7, #4]
 80021ec:	0018      	movs	r0, r3
 80021ee:	f7ff fc08 	bl	8001a02 <HAL_I2C_ListenCpltCallback>
 80021f2:	46c0      	nop			@ (mov r8, r8)
 80021f4:	46bd      	mov	sp, r7
 80021f6:	b002      	add	sp, #8
 80021f8:	bd80      	pop	{r7, pc}
 80021fa:	46c0      	nop			@ (mov r8, r8)
 80021fc:	ffff0000 	.word	0xffff0000
 8002200:	00008003 	.word	0x00008003

08002204 <I2C_ITError>:
 8002204:	b580      	push	{r7, lr}
 8002206:	b084      	sub	sp, #16
 8002208:	af00      	add	r7, sp, #0
 800220a:	6078      	str	r0, [r7, #4]
 800220c:	6039      	str	r1, [r7, #0]
 800220e:	200f      	movs	r0, #15
 8002210:	183b      	adds	r3, r7, r0
 8002212:	687a      	ldr	r2, [r7, #4]
 8002214:	2141      	movs	r1, #65	@ 0x41
 8002216:	5c52      	ldrb	r2, [r2, r1]
 8002218:	701a      	strb	r2, [r3, #0]
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	2242      	movs	r2, #66	@ 0x42
 800221e:	2100      	movs	r1, #0
 8002220:	5499      	strb	r1, [r3, r2]
 8002222:	687b      	ldr	r3, [r7, #4]
 8002224:	4a72      	ldr	r2, [pc, #456]	@ (80023f0 <I2C_ITError+0x1ec>)
 8002226:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	2200      	movs	r2, #0
 800222c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8002232:	683b      	ldr	r3, [r7, #0]
 8002234:	431a      	orrs	r2, r3
 8002236:	687b      	ldr	r3, [r7, #4]
 8002238:	645a      	str	r2, [r3, #68]	@ 0x44
 800223a:	183b      	adds	r3, r7, r0
 800223c:	781b      	ldrb	r3, [r3, #0]
 800223e:	2b28      	cmp	r3, #40	@ 0x28
 8002240:	d007      	beq.n	8002252 <I2C_ITError+0x4e>
 8002242:	183b      	adds	r3, r7, r0
 8002244:	781b      	ldrb	r3, [r3, #0]
 8002246:	2b29      	cmp	r3, #41	@ 0x29
 8002248:	d003      	beq.n	8002252 <I2C_ITError+0x4e>
 800224a:	183b      	adds	r3, r7, r0
 800224c:	781b      	ldrb	r3, [r3, #0]
 800224e:	2b2a      	cmp	r3, #42	@ 0x2a
 8002250:	d10c      	bne.n	800226c <I2C_ITError+0x68>
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	2103      	movs	r1, #3
 8002256:	0018      	movs	r0, r3
 8002258:	f000 fb54 	bl	8002904 <I2C_Disable_IRQ>
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	2241      	movs	r2, #65	@ 0x41
 8002260:	2128      	movs	r1, #40	@ 0x28
 8002262:	5499      	strb	r1, [r3, r2]
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	4a63      	ldr	r2, [pc, #396]	@ (80023f4 <I2C_ITError+0x1f0>)
 8002268:	635a      	str	r2, [r3, #52]	@ 0x34
 800226a:	e032      	b.n	80022d2 <I2C_ITError+0xce>
 800226c:	4a62      	ldr	r2, [pc, #392]	@ (80023f8 <I2C_ITError+0x1f4>)
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	0011      	movs	r1, r2
 8002272:	0018      	movs	r0, r3
 8002274:	f000 fb46 	bl	8002904 <I2C_Disable_IRQ>
 8002278:	687b      	ldr	r3, [r7, #4]
 800227a:	0018      	movs	r0, r3
 800227c:	f000 f8ed 	bl	800245a <I2C_Flush_TXDR>
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	2241      	movs	r2, #65	@ 0x41
 8002284:	5c9b      	ldrb	r3, [r3, r2]
 8002286:	b2db      	uxtb	r3, r3
 8002288:	2b60      	cmp	r3, #96	@ 0x60
 800228a:	d01f      	beq.n	80022cc <I2C_ITError+0xc8>
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	2241      	movs	r2, #65	@ 0x41
 8002290:	2120      	movs	r1, #32
 8002292:	5499      	strb	r1, [r3, r2]
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	699b      	ldr	r3, [r3, #24]
 800229a:	2220      	movs	r2, #32
 800229c:	4013      	ands	r3, r2
 800229e:	2b20      	cmp	r3, #32
 80022a0:	d114      	bne.n	80022cc <I2C_ITError+0xc8>
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	681b      	ldr	r3, [r3, #0]
 80022a6:	699b      	ldr	r3, [r3, #24]
 80022a8:	2210      	movs	r2, #16
 80022aa:	4013      	ands	r3, r2
 80022ac:	2b10      	cmp	r3, #16
 80022ae:	d109      	bne.n	80022c4 <I2C_ITError+0xc0>
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	681b      	ldr	r3, [r3, #0]
 80022b4:	2210      	movs	r2, #16
 80022b6:	61da      	str	r2, [r3, #28]
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80022bc:	2204      	movs	r2, #4
 80022be:	431a      	orrs	r2, r3
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	645a      	str	r2, [r3, #68]	@ 0x44
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	681b      	ldr	r3, [r3, #0]
 80022c8:	2220      	movs	r2, #32
 80022ca:	61da      	str	r2, [r3, #28]
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	2200      	movs	r2, #0
 80022d0:	635a      	str	r2, [r3, #52]	@ 0x34
 80022d2:	687b      	ldr	r3, [r7, #4]
 80022d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80022d6:	60bb      	str	r3, [r7, #8]
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80022dc:	2b00      	cmp	r3, #0
 80022de:	d03b      	beq.n	8002358 <I2C_ITError+0x154>
 80022e0:	68bb      	ldr	r3, [r7, #8]
 80022e2:	2b11      	cmp	r3, #17
 80022e4:	d002      	beq.n	80022ec <I2C_ITError+0xe8>
 80022e6:	68bb      	ldr	r3, [r7, #8]
 80022e8:	2b21      	cmp	r3, #33	@ 0x21
 80022ea:	d135      	bne.n	8002358 <I2C_ITError+0x154>
 80022ec:	687b      	ldr	r3, [r7, #4]
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	681a      	ldr	r2, [r3, #0]
 80022f2:	2380      	movs	r3, #128	@ 0x80
 80022f4:	01db      	lsls	r3, r3, #7
 80022f6:	401a      	ands	r2, r3
 80022f8:	2380      	movs	r3, #128	@ 0x80
 80022fa:	01db      	lsls	r3, r3, #7
 80022fc:	429a      	cmp	r2, r3
 80022fe:	d107      	bne.n	8002310 <I2C_ITError+0x10c>
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	681a      	ldr	r2, [r3, #0]
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	493c      	ldr	r1, [pc, #240]	@ (80023fc <I2C_ITError+0x1f8>)
 800230c:	400a      	ands	r2, r1
 800230e:	601a      	str	r2, [r3, #0]
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002314:	0018      	movs	r0, r3
 8002316:	f7fe ff78 	bl	800120a <HAL_DMA_GetState>
 800231a:	0003      	movs	r3, r0
 800231c:	2b01      	cmp	r3, #1
 800231e:	d016      	beq.n	800234e <I2C_ITError+0x14a>
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002324:	4a36      	ldr	r2, [pc, #216]	@ (8002400 <I2C_ITError+0x1fc>)
 8002326:	635a      	str	r2, [r3, #52]	@ 0x34
 8002328:	687b      	ldr	r3, [r7, #4]
 800232a:	2240      	movs	r2, #64	@ 0x40
 800232c:	2100      	movs	r1, #0
 800232e:	5499      	strb	r1, [r3, r2]
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002334:	0018      	movs	r0, r3
 8002336:	f7fe fe81 	bl	800103c <HAL_DMA_Abort_IT>
 800233a:	1e03      	subs	r3, r0, #0
 800233c:	d051      	beq.n	80023e2 <I2C_ITError+0x1de>
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002342:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002348:	0018      	movs	r0, r3
 800234a:	4790      	blx	r2
 800234c:	e049      	b.n	80023e2 <I2C_ITError+0x1de>
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	0018      	movs	r0, r3
 8002352:	f000 f859 	bl	8002408 <I2C_TreatErrorCallback>
 8002356:	e044      	b.n	80023e2 <I2C_ITError+0x1de>
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800235c:	2b00      	cmp	r3, #0
 800235e:	d03b      	beq.n	80023d8 <I2C_ITError+0x1d4>
 8002360:	68bb      	ldr	r3, [r7, #8]
 8002362:	2b12      	cmp	r3, #18
 8002364:	d002      	beq.n	800236c <I2C_ITError+0x168>
 8002366:	68bb      	ldr	r3, [r7, #8]
 8002368:	2b22      	cmp	r3, #34	@ 0x22
 800236a:	d135      	bne.n	80023d8 <I2C_ITError+0x1d4>
 800236c:	687b      	ldr	r3, [r7, #4]
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	681a      	ldr	r2, [r3, #0]
 8002372:	2380      	movs	r3, #128	@ 0x80
 8002374:	021b      	lsls	r3, r3, #8
 8002376:	401a      	ands	r2, r3
 8002378:	2380      	movs	r3, #128	@ 0x80
 800237a:	021b      	lsls	r3, r3, #8
 800237c:	429a      	cmp	r2, r3
 800237e:	d107      	bne.n	8002390 <I2C_ITError+0x18c>
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	681a      	ldr	r2, [r3, #0]
 8002386:	687b      	ldr	r3, [r7, #4]
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	491e      	ldr	r1, [pc, #120]	@ (8002404 <I2C_ITError+0x200>)
 800238c:	400a      	ands	r2, r1
 800238e:	601a      	str	r2, [r3, #0]
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8002394:	0018      	movs	r0, r3
 8002396:	f7fe ff38 	bl	800120a <HAL_DMA_GetState>
 800239a:	0003      	movs	r3, r0
 800239c:	2b01      	cmp	r3, #1
 800239e:	d016      	beq.n	80023ce <I2C_ITError+0x1ca>
 80023a0:	687b      	ldr	r3, [r7, #4]
 80023a2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80023a4:	4a16      	ldr	r2, [pc, #88]	@ (8002400 <I2C_ITError+0x1fc>)
 80023a6:	635a      	str	r2, [r3, #52]	@ 0x34
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	2240      	movs	r2, #64	@ 0x40
 80023ac:	2100      	movs	r1, #0
 80023ae:	5499      	strb	r1, [r3, r2]
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80023b4:	0018      	movs	r0, r3
 80023b6:	f7fe fe41 	bl	800103c <HAL_DMA_Abort_IT>
 80023ba:	1e03      	subs	r3, r0, #0
 80023bc:	d013      	beq.n	80023e6 <I2C_ITError+0x1e2>
 80023be:	687b      	ldr	r3, [r7, #4]
 80023c0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80023c2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80023c8:	0018      	movs	r0, r3
 80023ca:	4790      	blx	r2
 80023cc:	e00b      	b.n	80023e6 <I2C_ITError+0x1e2>
 80023ce:	687b      	ldr	r3, [r7, #4]
 80023d0:	0018      	movs	r0, r3
 80023d2:	f000 f819 	bl	8002408 <I2C_TreatErrorCallback>
 80023d6:	e006      	b.n	80023e6 <I2C_ITError+0x1e2>
 80023d8:	687b      	ldr	r3, [r7, #4]
 80023da:	0018      	movs	r0, r3
 80023dc:	f000 f814 	bl	8002408 <I2C_TreatErrorCallback>
 80023e0:	e002      	b.n	80023e8 <I2C_ITError+0x1e4>
 80023e2:	46c0      	nop			@ (mov r8, r8)
 80023e4:	e000      	b.n	80023e8 <I2C_ITError+0x1e4>
 80023e6:	46c0      	nop			@ (mov r8, r8)
 80023e8:	46c0      	nop			@ (mov r8, r8)
 80023ea:	46bd      	mov	sp, r7
 80023ec:	b004      	add	sp, #16
 80023ee:	bd80      	pop	{r7, pc}
 80023f0:	ffff0000 	.word	0xffff0000
 80023f4:	08001a35 	.word	0x08001a35
 80023f8:	00008003 	.word	0x00008003
 80023fc:	ffffbfff 	.word	0xffffbfff
 8002400:	0800249f 	.word	0x0800249f
 8002404:	ffff7fff 	.word	0xffff7fff

08002408 <I2C_TreatErrorCallback>:
 8002408:	b580      	push	{r7, lr}
 800240a:	b082      	sub	sp, #8
 800240c:	af00      	add	r7, sp, #0
 800240e:	6078      	str	r0, [r7, #4]
 8002410:	687b      	ldr	r3, [r7, #4]
 8002412:	2241      	movs	r2, #65	@ 0x41
 8002414:	5c9b      	ldrb	r3, [r3, r2]
 8002416:	b2db      	uxtb	r3, r3
 8002418:	2b60      	cmp	r3, #96	@ 0x60
 800241a:	d10f      	bne.n	800243c <I2C_TreatErrorCallback+0x34>
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	2241      	movs	r2, #65	@ 0x41
 8002420:	2120      	movs	r1, #32
 8002422:	5499      	strb	r1, [r3, r2]
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	2200      	movs	r2, #0
 8002428:	631a      	str	r2, [r3, #48]	@ 0x30
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	2240      	movs	r2, #64	@ 0x40
 800242e:	2100      	movs	r1, #0
 8002430:	5499      	strb	r1, [r3, r2]
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	0018      	movs	r0, r3
 8002436:	f7ff faf4 	bl	8001a22 <HAL_I2C_AbortCpltCallback>
 800243a:	e00a      	b.n	8002452 <I2C_TreatErrorCallback+0x4a>
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	2200      	movs	r2, #0
 8002440:	631a      	str	r2, [r3, #48]	@ 0x30
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	2240      	movs	r2, #64	@ 0x40
 8002446:	2100      	movs	r1, #0
 8002448:	5499      	strb	r1, [r3, r2]
 800244a:	687b      	ldr	r3, [r7, #4]
 800244c:	0018      	movs	r0, r3
 800244e:	f7ff fae0 	bl	8001a12 <HAL_I2C_ErrorCallback>
 8002452:	46c0      	nop			@ (mov r8, r8)
 8002454:	46bd      	mov	sp, r7
 8002456:	b002      	add	sp, #8
 8002458:	bd80      	pop	{r7, pc}

0800245a <I2C_Flush_TXDR>:
 800245a:	b580      	push	{r7, lr}
 800245c:	b082      	sub	sp, #8
 800245e:	af00      	add	r7, sp, #0
 8002460:	6078      	str	r0, [r7, #4]
 8002462:	687b      	ldr	r3, [r7, #4]
 8002464:	681b      	ldr	r3, [r3, #0]
 8002466:	699b      	ldr	r3, [r3, #24]
 8002468:	2202      	movs	r2, #2
 800246a:	4013      	ands	r3, r2
 800246c:	2b02      	cmp	r3, #2
 800246e:	d103      	bne.n	8002478 <I2C_Flush_TXDR+0x1e>
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	2200      	movs	r2, #0
 8002476:	629a      	str	r2, [r3, #40]	@ 0x28
 8002478:	687b      	ldr	r3, [r7, #4]
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	699b      	ldr	r3, [r3, #24]
 800247e:	2201      	movs	r2, #1
 8002480:	4013      	ands	r3, r2
 8002482:	2b01      	cmp	r3, #1
 8002484:	d007      	beq.n	8002496 <I2C_Flush_TXDR+0x3c>
 8002486:	687b      	ldr	r3, [r7, #4]
 8002488:	681b      	ldr	r3, [r3, #0]
 800248a:	699a      	ldr	r2, [r3, #24]
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	681b      	ldr	r3, [r3, #0]
 8002490:	2101      	movs	r1, #1
 8002492:	430a      	orrs	r2, r1
 8002494:	619a      	str	r2, [r3, #24]
 8002496:	46c0      	nop			@ (mov r8, r8)
 8002498:	46bd      	mov	sp, r7
 800249a:	b002      	add	sp, #8
 800249c:	bd80      	pop	{r7, pc}

0800249e <I2C_DMAAbort>:
 800249e:	b580      	push	{r7, lr}
 80024a0:	b084      	sub	sp, #16
 80024a2:	af00      	add	r7, sp, #0
 80024a4:	6078      	str	r0, [r7, #4]
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80024aa:	60fb      	str	r3, [r7, #12]
 80024ac:	68fb      	ldr	r3, [r7, #12]
 80024ae:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80024b0:	2b00      	cmp	r3, #0
 80024b2:	d003      	beq.n	80024bc <I2C_DMAAbort+0x1e>
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80024b8:	2200      	movs	r2, #0
 80024ba:	635a      	str	r2, [r3, #52]	@ 0x34
 80024bc:	68fb      	ldr	r3, [r7, #12]
 80024be:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80024c0:	2b00      	cmp	r3, #0
 80024c2:	d003      	beq.n	80024cc <I2C_DMAAbort+0x2e>
 80024c4:	68fb      	ldr	r3, [r7, #12]
 80024c6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80024c8:	2200      	movs	r2, #0
 80024ca:	635a      	str	r2, [r3, #52]	@ 0x34
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	0018      	movs	r0, r3
 80024d0:	f7ff ff9a 	bl	8002408 <I2C_TreatErrorCallback>
 80024d4:	46c0      	nop			@ (mov r8, r8)
 80024d6:	46bd      	mov	sp, r7
 80024d8:	b004      	add	sp, #16
 80024da:	bd80      	pop	{r7, pc}

080024dc <I2C_WaitOnFlagUntilTimeout>:
 80024dc:	b580      	push	{r7, lr}
 80024de:	b084      	sub	sp, #16
 80024e0:	af00      	add	r7, sp, #0
 80024e2:	60f8      	str	r0, [r7, #12]
 80024e4:	60b9      	str	r1, [r7, #8]
 80024e6:	603b      	str	r3, [r7, #0]
 80024e8:	1dfb      	adds	r3, r7, #7
 80024ea:	701a      	strb	r2, [r3, #0]
 80024ec:	e03a      	b.n	8002564 <I2C_WaitOnFlagUntilTimeout+0x88>
 80024ee:	69ba      	ldr	r2, [r7, #24]
 80024f0:	6839      	ldr	r1, [r7, #0]
 80024f2:	68fb      	ldr	r3, [r7, #12]
 80024f4:	0018      	movs	r0, r3
 80024f6:	f000 f8d3 	bl	80026a0 <I2C_IsErrorOccurred>
 80024fa:	1e03      	subs	r3, r0, #0
 80024fc:	d001      	beq.n	8002502 <I2C_WaitOnFlagUntilTimeout+0x26>
 80024fe:	2301      	movs	r3, #1
 8002500:	e040      	b.n	8002584 <I2C_WaitOnFlagUntilTimeout+0xa8>
 8002502:	683b      	ldr	r3, [r7, #0]
 8002504:	3301      	adds	r3, #1
 8002506:	d02d      	beq.n	8002564 <I2C_WaitOnFlagUntilTimeout+0x88>
 8002508:	f7fe fc44 	bl	8000d94 <HAL_GetTick>
 800250c:	0002      	movs	r2, r0
 800250e:	69bb      	ldr	r3, [r7, #24]
 8002510:	1ad3      	subs	r3, r2, r3
 8002512:	683a      	ldr	r2, [r7, #0]
 8002514:	429a      	cmp	r2, r3
 8002516:	d302      	bcc.n	800251e <I2C_WaitOnFlagUntilTimeout+0x42>
 8002518:	683b      	ldr	r3, [r7, #0]
 800251a:	2b00      	cmp	r3, #0
 800251c:	d122      	bne.n	8002564 <I2C_WaitOnFlagUntilTimeout+0x88>
 800251e:	68fb      	ldr	r3, [r7, #12]
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	699b      	ldr	r3, [r3, #24]
 8002524:	68ba      	ldr	r2, [r7, #8]
 8002526:	4013      	ands	r3, r2
 8002528:	68ba      	ldr	r2, [r7, #8]
 800252a:	1ad3      	subs	r3, r2, r3
 800252c:	425a      	negs	r2, r3
 800252e:	4153      	adcs	r3, r2
 8002530:	b2db      	uxtb	r3, r3
 8002532:	001a      	movs	r2, r3
 8002534:	1dfb      	adds	r3, r7, #7
 8002536:	781b      	ldrb	r3, [r3, #0]
 8002538:	429a      	cmp	r2, r3
 800253a:	d113      	bne.n	8002564 <I2C_WaitOnFlagUntilTimeout+0x88>
 800253c:	68fb      	ldr	r3, [r7, #12]
 800253e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002540:	2220      	movs	r2, #32
 8002542:	431a      	orrs	r2, r3
 8002544:	68fb      	ldr	r3, [r7, #12]
 8002546:	645a      	str	r2, [r3, #68]	@ 0x44
 8002548:	68fb      	ldr	r3, [r7, #12]
 800254a:	2241      	movs	r2, #65	@ 0x41
 800254c:	2120      	movs	r1, #32
 800254e:	5499      	strb	r1, [r3, r2]
 8002550:	68fb      	ldr	r3, [r7, #12]
 8002552:	2242      	movs	r2, #66	@ 0x42
 8002554:	2100      	movs	r1, #0
 8002556:	5499      	strb	r1, [r3, r2]
 8002558:	68fb      	ldr	r3, [r7, #12]
 800255a:	2240      	movs	r2, #64	@ 0x40
 800255c:	2100      	movs	r1, #0
 800255e:	5499      	strb	r1, [r3, r2]
 8002560:	2301      	movs	r3, #1
 8002562:	e00f      	b.n	8002584 <I2C_WaitOnFlagUntilTimeout+0xa8>
 8002564:	68fb      	ldr	r3, [r7, #12]
 8002566:	681b      	ldr	r3, [r3, #0]
 8002568:	699b      	ldr	r3, [r3, #24]
 800256a:	68ba      	ldr	r2, [r7, #8]
 800256c:	4013      	ands	r3, r2
 800256e:	68ba      	ldr	r2, [r7, #8]
 8002570:	1ad3      	subs	r3, r2, r3
 8002572:	425a      	negs	r2, r3
 8002574:	4153      	adcs	r3, r2
 8002576:	b2db      	uxtb	r3, r3
 8002578:	001a      	movs	r2, r3
 800257a:	1dfb      	adds	r3, r7, #7
 800257c:	781b      	ldrb	r3, [r3, #0]
 800257e:	429a      	cmp	r2, r3
 8002580:	d0b5      	beq.n	80024ee <I2C_WaitOnFlagUntilTimeout+0x12>
 8002582:	2300      	movs	r3, #0
 8002584:	0018      	movs	r0, r3
 8002586:	46bd      	mov	sp, r7
 8002588:	b004      	add	sp, #16
 800258a:	bd80      	pop	{r7, pc}

0800258c <I2C_WaitOnTXISFlagUntilTimeout>:
 800258c:	b580      	push	{r7, lr}
 800258e:	b084      	sub	sp, #16
 8002590:	af00      	add	r7, sp, #0
 8002592:	60f8      	str	r0, [r7, #12]
 8002594:	60b9      	str	r1, [r7, #8]
 8002596:	607a      	str	r2, [r7, #4]
 8002598:	e032      	b.n	8002600 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
 800259a:	687a      	ldr	r2, [r7, #4]
 800259c:	68b9      	ldr	r1, [r7, #8]
 800259e:	68fb      	ldr	r3, [r7, #12]
 80025a0:	0018      	movs	r0, r3
 80025a2:	f000 f87d 	bl	80026a0 <I2C_IsErrorOccurred>
 80025a6:	1e03      	subs	r3, r0, #0
 80025a8:	d001      	beq.n	80025ae <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 80025aa:	2301      	movs	r3, #1
 80025ac:	e030      	b.n	8002610 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
 80025ae:	68bb      	ldr	r3, [r7, #8]
 80025b0:	3301      	adds	r3, #1
 80025b2:	d025      	beq.n	8002600 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
 80025b4:	f7fe fbee 	bl	8000d94 <HAL_GetTick>
 80025b8:	0002      	movs	r2, r0
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	1ad3      	subs	r3, r2, r3
 80025be:	68ba      	ldr	r2, [r7, #8]
 80025c0:	429a      	cmp	r2, r3
 80025c2:	d302      	bcc.n	80025ca <I2C_WaitOnTXISFlagUntilTimeout+0x3e>
 80025c4:	68bb      	ldr	r3, [r7, #8]
 80025c6:	2b00      	cmp	r3, #0
 80025c8:	d11a      	bne.n	8002600 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
 80025ca:	68fb      	ldr	r3, [r7, #12]
 80025cc:	681b      	ldr	r3, [r3, #0]
 80025ce:	699b      	ldr	r3, [r3, #24]
 80025d0:	2202      	movs	r2, #2
 80025d2:	4013      	ands	r3, r2
 80025d4:	2b02      	cmp	r3, #2
 80025d6:	d013      	beq.n	8002600 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
 80025d8:	68fb      	ldr	r3, [r7, #12]
 80025da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80025dc:	2220      	movs	r2, #32
 80025de:	431a      	orrs	r2, r3
 80025e0:	68fb      	ldr	r3, [r7, #12]
 80025e2:	645a      	str	r2, [r3, #68]	@ 0x44
 80025e4:	68fb      	ldr	r3, [r7, #12]
 80025e6:	2241      	movs	r2, #65	@ 0x41
 80025e8:	2120      	movs	r1, #32
 80025ea:	5499      	strb	r1, [r3, r2]
 80025ec:	68fb      	ldr	r3, [r7, #12]
 80025ee:	2242      	movs	r2, #66	@ 0x42
 80025f0:	2100      	movs	r1, #0
 80025f2:	5499      	strb	r1, [r3, r2]
 80025f4:	68fb      	ldr	r3, [r7, #12]
 80025f6:	2240      	movs	r2, #64	@ 0x40
 80025f8:	2100      	movs	r1, #0
 80025fa:	5499      	strb	r1, [r3, r2]
 80025fc:	2301      	movs	r3, #1
 80025fe:	e007      	b.n	8002610 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
 8002600:	68fb      	ldr	r3, [r7, #12]
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	699b      	ldr	r3, [r3, #24]
 8002606:	2202      	movs	r2, #2
 8002608:	4013      	ands	r3, r2
 800260a:	2b02      	cmp	r3, #2
 800260c:	d1c5      	bne.n	800259a <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 800260e:	2300      	movs	r3, #0
 8002610:	0018      	movs	r0, r3
 8002612:	46bd      	mov	sp, r7
 8002614:	b004      	add	sp, #16
 8002616:	bd80      	pop	{r7, pc}

08002618 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8002618:	b580      	push	{r7, lr}
 800261a:	b084      	sub	sp, #16
 800261c:	af00      	add	r7, sp, #0
 800261e:	60f8      	str	r0, [r7, #12]
 8002620:	60b9      	str	r1, [r7, #8]
 8002622:	607a      	str	r2, [r7, #4]
 8002624:	e02f      	b.n	8002686 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8002626:	687a      	ldr	r2, [r7, #4]
 8002628:	68b9      	ldr	r1, [r7, #8]
 800262a:	68fb      	ldr	r3, [r7, #12]
 800262c:	0018      	movs	r0, r3
 800262e:	f000 f837 	bl	80026a0 <I2C_IsErrorOccurred>
 8002632:	1e03      	subs	r3, r0, #0
 8002634:	d001      	beq.n	800263a <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 8002636:	2301      	movs	r3, #1
 8002638:	e02d      	b.n	8002696 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 800263a:	f7fe fbab 	bl	8000d94 <HAL_GetTick>
 800263e:	0002      	movs	r2, r0
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	1ad3      	subs	r3, r2, r3
 8002644:	68ba      	ldr	r2, [r7, #8]
 8002646:	429a      	cmp	r2, r3
 8002648:	d302      	bcc.n	8002650 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 800264a:	68bb      	ldr	r3, [r7, #8]
 800264c:	2b00      	cmp	r3, #0
 800264e:	d11a      	bne.n	8002686 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8002650:	68fb      	ldr	r3, [r7, #12]
 8002652:	681b      	ldr	r3, [r3, #0]
 8002654:	699b      	ldr	r3, [r3, #24]
 8002656:	2220      	movs	r2, #32
 8002658:	4013      	ands	r3, r2
 800265a:	2b20      	cmp	r3, #32
 800265c:	d013      	beq.n	8002686 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 800265e:	68fb      	ldr	r3, [r7, #12]
 8002660:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002662:	2220      	movs	r2, #32
 8002664:	431a      	orrs	r2, r3
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	645a      	str	r2, [r3, #68]	@ 0x44
 800266a:	68fb      	ldr	r3, [r7, #12]
 800266c:	2241      	movs	r2, #65	@ 0x41
 800266e:	2120      	movs	r1, #32
 8002670:	5499      	strb	r1, [r3, r2]
 8002672:	68fb      	ldr	r3, [r7, #12]
 8002674:	2242      	movs	r2, #66	@ 0x42
 8002676:	2100      	movs	r1, #0
 8002678:	5499      	strb	r1, [r3, r2]
 800267a:	68fb      	ldr	r3, [r7, #12]
 800267c:	2240      	movs	r2, #64	@ 0x40
 800267e:	2100      	movs	r1, #0
 8002680:	5499      	strb	r1, [r3, r2]
 8002682:	2301      	movs	r3, #1
 8002684:	e007      	b.n	8002696 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8002686:	68fb      	ldr	r3, [r7, #12]
 8002688:	681b      	ldr	r3, [r3, #0]
 800268a:	699b      	ldr	r3, [r3, #24]
 800268c:	2220      	movs	r2, #32
 800268e:	4013      	ands	r3, r2
 8002690:	2b20      	cmp	r3, #32
 8002692:	d1c8      	bne.n	8002626 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 8002694:	2300      	movs	r3, #0
 8002696:	0018      	movs	r0, r3
 8002698:	46bd      	mov	sp, r7
 800269a:	b004      	add	sp, #16
 800269c:	bd80      	pop	{r7, pc}
	...

080026a0 <I2C_IsErrorOccurred>:
 80026a0:	b580      	push	{r7, lr}
 80026a2:	b08a      	sub	sp, #40	@ 0x28
 80026a4:	af00      	add	r7, sp, #0
 80026a6:	60f8      	str	r0, [r7, #12]
 80026a8:	60b9      	str	r1, [r7, #8]
 80026aa:	607a      	str	r2, [r7, #4]
 80026ac:	2327      	movs	r3, #39	@ 0x27
 80026ae:	18fb      	adds	r3, r7, r3
 80026b0:	2200      	movs	r2, #0
 80026b2:	701a      	strb	r2, [r3, #0]
 80026b4:	68fb      	ldr	r3, [r7, #12]
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	699b      	ldr	r3, [r3, #24]
 80026ba:	61bb      	str	r3, [r7, #24]
 80026bc:	2300      	movs	r3, #0
 80026be:	623b      	str	r3, [r7, #32]
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	61fb      	str	r3, [r7, #28]
 80026c4:	69bb      	ldr	r3, [r7, #24]
 80026c6:	2210      	movs	r2, #16
 80026c8:	4013      	ands	r3, r2
 80026ca:	d100      	bne.n	80026ce <I2C_IsErrorOccurred+0x2e>
 80026cc:	e079      	b.n	80027c2 <I2C_IsErrorOccurred+0x122>
 80026ce:	68fb      	ldr	r3, [r7, #12]
 80026d0:	681b      	ldr	r3, [r3, #0]
 80026d2:	2210      	movs	r2, #16
 80026d4:	61da      	str	r2, [r3, #28]
 80026d6:	e057      	b.n	8002788 <I2C_IsErrorOccurred+0xe8>
 80026d8:	2227      	movs	r2, #39	@ 0x27
 80026da:	18bb      	adds	r3, r7, r2
 80026dc:	18ba      	adds	r2, r7, r2
 80026de:	7812      	ldrb	r2, [r2, #0]
 80026e0:	701a      	strb	r2, [r3, #0]
 80026e2:	68bb      	ldr	r3, [r7, #8]
 80026e4:	3301      	adds	r3, #1
 80026e6:	d04f      	beq.n	8002788 <I2C_IsErrorOccurred+0xe8>
 80026e8:	f7fe fb54 	bl	8000d94 <HAL_GetTick>
 80026ec:	0002      	movs	r2, r0
 80026ee:	69fb      	ldr	r3, [r7, #28]
 80026f0:	1ad3      	subs	r3, r2, r3
 80026f2:	68ba      	ldr	r2, [r7, #8]
 80026f4:	429a      	cmp	r2, r3
 80026f6:	d302      	bcc.n	80026fe <I2C_IsErrorOccurred+0x5e>
 80026f8:	68bb      	ldr	r3, [r7, #8]
 80026fa:	2b00      	cmp	r3, #0
 80026fc:	d144      	bne.n	8002788 <I2C_IsErrorOccurred+0xe8>
 80026fe:	68fb      	ldr	r3, [r7, #12]
 8002700:	681b      	ldr	r3, [r3, #0]
 8002702:	685a      	ldr	r2, [r3, #4]
 8002704:	2380      	movs	r3, #128	@ 0x80
 8002706:	01db      	lsls	r3, r3, #7
 8002708:	4013      	ands	r3, r2
 800270a:	617b      	str	r3, [r7, #20]
 800270c:	2013      	movs	r0, #19
 800270e:	183b      	adds	r3, r7, r0
 8002710:	68fa      	ldr	r2, [r7, #12]
 8002712:	2142      	movs	r1, #66	@ 0x42
 8002714:	5c52      	ldrb	r2, [r2, r1]
 8002716:	701a      	strb	r2, [r3, #0]
 8002718:	68fb      	ldr	r3, [r7, #12]
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	699a      	ldr	r2, [r3, #24]
 800271e:	2380      	movs	r3, #128	@ 0x80
 8002720:	021b      	lsls	r3, r3, #8
 8002722:	401a      	ands	r2, r3
 8002724:	2380      	movs	r3, #128	@ 0x80
 8002726:	021b      	lsls	r3, r3, #8
 8002728:	429a      	cmp	r2, r3
 800272a:	d126      	bne.n	800277a <I2C_IsErrorOccurred+0xda>
 800272c:	697a      	ldr	r2, [r7, #20]
 800272e:	2380      	movs	r3, #128	@ 0x80
 8002730:	01db      	lsls	r3, r3, #7
 8002732:	429a      	cmp	r2, r3
 8002734:	d021      	beq.n	800277a <I2C_IsErrorOccurred+0xda>
 8002736:	183b      	adds	r3, r7, r0
 8002738:	781b      	ldrb	r3, [r3, #0]
 800273a:	2b20      	cmp	r3, #32
 800273c:	d01d      	beq.n	800277a <I2C_IsErrorOccurred+0xda>
 800273e:	68fb      	ldr	r3, [r7, #12]
 8002740:	681b      	ldr	r3, [r3, #0]
 8002742:	685a      	ldr	r2, [r3, #4]
 8002744:	68fb      	ldr	r3, [r7, #12]
 8002746:	681b      	ldr	r3, [r3, #0]
 8002748:	2180      	movs	r1, #128	@ 0x80
 800274a:	01c9      	lsls	r1, r1, #7
 800274c:	430a      	orrs	r2, r1
 800274e:	605a      	str	r2, [r3, #4]
 8002750:	f7fe fb20 	bl	8000d94 <HAL_GetTick>
 8002754:	0003      	movs	r3, r0
 8002756:	61fb      	str	r3, [r7, #28]
 8002758:	e00f      	b.n	800277a <I2C_IsErrorOccurred+0xda>
 800275a:	f7fe fb1b 	bl	8000d94 <HAL_GetTick>
 800275e:	0002      	movs	r2, r0
 8002760:	69fb      	ldr	r3, [r7, #28]
 8002762:	1ad3      	subs	r3, r2, r3
 8002764:	2b19      	cmp	r3, #25
 8002766:	d908      	bls.n	800277a <I2C_IsErrorOccurred+0xda>
 8002768:	6a3b      	ldr	r3, [r7, #32]
 800276a:	2220      	movs	r2, #32
 800276c:	4313      	orrs	r3, r2
 800276e:	623b      	str	r3, [r7, #32]
 8002770:	2327      	movs	r3, #39	@ 0x27
 8002772:	18fb      	adds	r3, r7, r3
 8002774:	2201      	movs	r2, #1
 8002776:	701a      	strb	r2, [r3, #0]
 8002778:	e006      	b.n	8002788 <I2C_IsErrorOccurred+0xe8>
 800277a:	68fb      	ldr	r3, [r7, #12]
 800277c:	681b      	ldr	r3, [r3, #0]
 800277e:	699b      	ldr	r3, [r3, #24]
 8002780:	2220      	movs	r2, #32
 8002782:	4013      	ands	r3, r2
 8002784:	2b20      	cmp	r3, #32
 8002786:	d1e8      	bne.n	800275a <I2C_IsErrorOccurred+0xba>
 8002788:	68fb      	ldr	r3, [r7, #12]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	699b      	ldr	r3, [r3, #24]
 800278e:	2220      	movs	r2, #32
 8002790:	4013      	ands	r3, r2
 8002792:	2b20      	cmp	r3, #32
 8002794:	d004      	beq.n	80027a0 <I2C_IsErrorOccurred+0x100>
 8002796:	2327      	movs	r3, #39	@ 0x27
 8002798:	18fb      	adds	r3, r7, r3
 800279a:	781b      	ldrb	r3, [r3, #0]
 800279c:	2b00      	cmp	r3, #0
 800279e:	d09b      	beq.n	80026d8 <I2C_IsErrorOccurred+0x38>
 80027a0:	2327      	movs	r3, #39	@ 0x27
 80027a2:	18fb      	adds	r3, r7, r3
 80027a4:	781b      	ldrb	r3, [r3, #0]
 80027a6:	2b00      	cmp	r3, #0
 80027a8:	d103      	bne.n	80027b2 <I2C_IsErrorOccurred+0x112>
 80027aa:	68fb      	ldr	r3, [r7, #12]
 80027ac:	681b      	ldr	r3, [r3, #0]
 80027ae:	2220      	movs	r2, #32
 80027b0:	61da      	str	r2, [r3, #28]
 80027b2:	6a3b      	ldr	r3, [r7, #32]
 80027b4:	2204      	movs	r2, #4
 80027b6:	4313      	orrs	r3, r2
 80027b8:	623b      	str	r3, [r7, #32]
 80027ba:	2327      	movs	r3, #39	@ 0x27
 80027bc:	18fb      	adds	r3, r7, r3
 80027be:	2201      	movs	r2, #1
 80027c0:	701a      	strb	r2, [r3, #0]
 80027c2:	68fb      	ldr	r3, [r7, #12]
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	699b      	ldr	r3, [r3, #24]
 80027c8:	61bb      	str	r3, [r7, #24]
 80027ca:	69ba      	ldr	r2, [r7, #24]
 80027cc:	2380      	movs	r3, #128	@ 0x80
 80027ce:	005b      	lsls	r3, r3, #1
 80027d0:	4013      	ands	r3, r2
 80027d2:	d00c      	beq.n	80027ee <I2C_IsErrorOccurred+0x14e>
 80027d4:	6a3b      	ldr	r3, [r7, #32]
 80027d6:	2201      	movs	r2, #1
 80027d8:	4313      	orrs	r3, r2
 80027da:	623b      	str	r3, [r7, #32]
 80027dc:	68fb      	ldr	r3, [r7, #12]
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	2280      	movs	r2, #128	@ 0x80
 80027e2:	0052      	lsls	r2, r2, #1
 80027e4:	61da      	str	r2, [r3, #28]
 80027e6:	2327      	movs	r3, #39	@ 0x27
 80027e8:	18fb      	adds	r3, r7, r3
 80027ea:	2201      	movs	r2, #1
 80027ec:	701a      	strb	r2, [r3, #0]
 80027ee:	69ba      	ldr	r2, [r7, #24]
 80027f0:	2380      	movs	r3, #128	@ 0x80
 80027f2:	00db      	lsls	r3, r3, #3
 80027f4:	4013      	ands	r3, r2
 80027f6:	d00c      	beq.n	8002812 <I2C_IsErrorOccurred+0x172>
 80027f8:	6a3b      	ldr	r3, [r7, #32]
 80027fa:	2208      	movs	r2, #8
 80027fc:	4313      	orrs	r3, r2
 80027fe:	623b      	str	r3, [r7, #32]
 8002800:	68fb      	ldr	r3, [r7, #12]
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	2280      	movs	r2, #128	@ 0x80
 8002806:	00d2      	lsls	r2, r2, #3
 8002808:	61da      	str	r2, [r3, #28]
 800280a:	2327      	movs	r3, #39	@ 0x27
 800280c:	18fb      	adds	r3, r7, r3
 800280e:	2201      	movs	r2, #1
 8002810:	701a      	strb	r2, [r3, #0]
 8002812:	69ba      	ldr	r2, [r7, #24]
 8002814:	2380      	movs	r3, #128	@ 0x80
 8002816:	009b      	lsls	r3, r3, #2
 8002818:	4013      	ands	r3, r2
 800281a:	d00c      	beq.n	8002836 <I2C_IsErrorOccurred+0x196>
 800281c:	6a3b      	ldr	r3, [r7, #32]
 800281e:	2202      	movs	r2, #2
 8002820:	4313      	orrs	r3, r2
 8002822:	623b      	str	r3, [r7, #32]
 8002824:	68fb      	ldr	r3, [r7, #12]
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	2280      	movs	r2, #128	@ 0x80
 800282a:	0092      	lsls	r2, r2, #2
 800282c:	61da      	str	r2, [r3, #28]
 800282e:	2327      	movs	r3, #39	@ 0x27
 8002830:	18fb      	adds	r3, r7, r3
 8002832:	2201      	movs	r2, #1
 8002834:	701a      	strb	r2, [r3, #0]
 8002836:	2327      	movs	r3, #39	@ 0x27
 8002838:	18fb      	adds	r3, r7, r3
 800283a:	781b      	ldrb	r3, [r3, #0]
 800283c:	2b00      	cmp	r3, #0
 800283e:	d01d      	beq.n	800287c <I2C_IsErrorOccurred+0x1dc>
 8002840:	68fb      	ldr	r3, [r7, #12]
 8002842:	0018      	movs	r0, r3
 8002844:	f7ff fe09 	bl	800245a <I2C_Flush_TXDR>
 8002848:	68fb      	ldr	r3, [r7, #12]
 800284a:	681b      	ldr	r3, [r3, #0]
 800284c:	685a      	ldr	r2, [r3, #4]
 800284e:	68fb      	ldr	r3, [r7, #12]
 8002850:	681b      	ldr	r3, [r3, #0]
 8002852:	490e      	ldr	r1, [pc, #56]	@ (800288c <I2C_IsErrorOccurred+0x1ec>)
 8002854:	400a      	ands	r2, r1
 8002856:	605a      	str	r2, [r3, #4]
 8002858:	68fb      	ldr	r3, [r7, #12]
 800285a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800285c:	6a3b      	ldr	r3, [r7, #32]
 800285e:	431a      	orrs	r2, r3
 8002860:	68fb      	ldr	r3, [r7, #12]
 8002862:	645a      	str	r2, [r3, #68]	@ 0x44
 8002864:	68fb      	ldr	r3, [r7, #12]
 8002866:	2241      	movs	r2, #65	@ 0x41
 8002868:	2120      	movs	r1, #32
 800286a:	5499      	strb	r1, [r3, r2]
 800286c:	68fb      	ldr	r3, [r7, #12]
 800286e:	2242      	movs	r2, #66	@ 0x42
 8002870:	2100      	movs	r1, #0
 8002872:	5499      	strb	r1, [r3, r2]
 8002874:	68fb      	ldr	r3, [r7, #12]
 8002876:	2240      	movs	r2, #64	@ 0x40
 8002878:	2100      	movs	r1, #0
 800287a:	5499      	strb	r1, [r3, r2]
 800287c:	2327      	movs	r3, #39	@ 0x27
 800287e:	18fb      	adds	r3, r7, r3
 8002880:	781b      	ldrb	r3, [r3, #0]
 8002882:	0018      	movs	r0, r3
 8002884:	46bd      	mov	sp, r7
 8002886:	b00a      	add	sp, #40	@ 0x28
 8002888:	bd80      	pop	{r7, pc}
 800288a:	46c0      	nop			@ (mov r8, r8)
 800288c:	fe00e800 	.word	0xfe00e800

08002890 <I2C_TransferConfig>:
 8002890:	b590      	push	{r4, r7, lr}
 8002892:	b087      	sub	sp, #28
 8002894:	af00      	add	r7, sp, #0
 8002896:	60f8      	str	r0, [r7, #12]
 8002898:	0008      	movs	r0, r1
 800289a:	0011      	movs	r1, r2
 800289c:	607b      	str	r3, [r7, #4]
 800289e:	240a      	movs	r4, #10
 80028a0:	193b      	adds	r3, r7, r4
 80028a2:	1c02      	adds	r2, r0, #0
 80028a4:	801a      	strh	r2, [r3, #0]
 80028a6:	2009      	movs	r0, #9
 80028a8:	183b      	adds	r3, r7, r0
 80028aa:	1c0a      	adds	r2, r1, #0
 80028ac:	701a      	strb	r2, [r3, #0]
 80028ae:	193b      	adds	r3, r7, r4
 80028b0:	881b      	ldrh	r3, [r3, #0]
 80028b2:	059b      	lsls	r3, r3, #22
 80028b4:	0d9a      	lsrs	r2, r3, #22
 80028b6:	183b      	adds	r3, r7, r0
 80028b8:	781b      	ldrb	r3, [r3, #0]
 80028ba:	0419      	lsls	r1, r3, #16
 80028bc:	23ff      	movs	r3, #255	@ 0xff
 80028be:	041b      	lsls	r3, r3, #16
 80028c0:	400b      	ands	r3, r1
 80028c2:	431a      	orrs	r2, r3
 80028c4:	687b      	ldr	r3, [r7, #4]
 80028c6:	431a      	orrs	r2, r3
 80028c8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80028ca:	4313      	orrs	r3, r2
 80028cc:	005b      	lsls	r3, r3, #1
 80028ce:	085b      	lsrs	r3, r3, #1
 80028d0:	617b      	str	r3, [r7, #20]
 80028d2:	68fb      	ldr	r3, [r7, #12]
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	685b      	ldr	r3, [r3, #4]
 80028d8:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80028da:	0d51      	lsrs	r1, r2, #21
 80028dc:	2280      	movs	r2, #128	@ 0x80
 80028de:	00d2      	lsls	r2, r2, #3
 80028e0:	400a      	ands	r2, r1
 80028e2:	4907      	ldr	r1, [pc, #28]	@ (8002900 <I2C_TransferConfig+0x70>)
 80028e4:	430a      	orrs	r2, r1
 80028e6:	43d2      	mvns	r2, r2
 80028e8:	401a      	ands	r2, r3
 80028ea:	0011      	movs	r1, r2
 80028ec:	68fb      	ldr	r3, [r7, #12]
 80028ee:	681b      	ldr	r3, [r3, #0]
 80028f0:	697a      	ldr	r2, [r7, #20]
 80028f2:	430a      	orrs	r2, r1
 80028f4:	605a      	str	r2, [r3, #4]
 80028f6:	46c0      	nop			@ (mov r8, r8)
 80028f8:	46bd      	mov	sp, r7
 80028fa:	b007      	add	sp, #28
 80028fc:	bd90      	pop	{r4, r7, pc}
 80028fe:	46c0      	nop			@ (mov r8, r8)
 8002900:	03ff63ff 	.word	0x03ff63ff

08002904 <I2C_Disable_IRQ>:
 8002904:	b580      	push	{r7, lr}
 8002906:	b084      	sub	sp, #16
 8002908:	af00      	add	r7, sp, #0
 800290a:	6078      	str	r0, [r7, #4]
 800290c:	000a      	movs	r2, r1
 800290e:	1cbb      	adds	r3, r7, #2
 8002910:	801a      	strh	r2, [r3, #0]
 8002912:	2300      	movs	r3, #0
 8002914:	60fb      	str	r3, [r7, #12]
 8002916:	1cbb      	adds	r3, r7, #2
 8002918:	881b      	ldrh	r3, [r3, #0]
 800291a:	2201      	movs	r2, #1
 800291c:	4013      	ands	r3, r2
 800291e:	d010      	beq.n	8002942 <I2C_Disable_IRQ+0x3e>
 8002920:	68fb      	ldr	r3, [r7, #12]
 8002922:	2242      	movs	r2, #66	@ 0x42
 8002924:	4313      	orrs	r3, r2
 8002926:	60fb      	str	r3, [r7, #12]
 8002928:	687b      	ldr	r3, [r7, #4]
 800292a:	2241      	movs	r2, #65	@ 0x41
 800292c:	5c9b      	ldrb	r3, [r3, r2]
 800292e:	b2db      	uxtb	r3, r3
 8002930:	001a      	movs	r2, r3
 8002932:	2328      	movs	r3, #40	@ 0x28
 8002934:	4013      	ands	r3, r2
 8002936:	2b28      	cmp	r3, #40	@ 0x28
 8002938:	d003      	beq.n	8002942 <I2C_Disable_IRQ+0x3e>
 800293a:	68fb      	ldr	r3, [r7, #12]
 800293c:	22b0      	movs	r2, #176	@ 0xb0
 800293e:	4313      	orrs	r3, r2
 8002940:	60fb      	str	r3, [r7, #12]
 8002942:	1cbb      	adds	r3, r7, #2
 8002944:	881b      	ldrh	r3, [r3, #0]
 8002946:	2202      	movs	r2, #2
 8002948:	4013      	ands	r3, r2
 800294a:	d010      	beq.n	800296e <I2C_Disable_IRQ+0x6a>
 800294c:	68fb      	ldr	r3, [r7, #12]
 800294e:	2244      	movs	r2, #68	@ 0x44
 8002950:	4313      	orrs	r3, r2
 8002952:	60fb      	str	r3, [r7, #12]
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	2241      	movs	r2, #65	@ 0x41
 8002958:	5c9b      	ldrb	r3, [r3, r2]
 800295a:	b2db      	uxtb	r3, r3
 800295c:	001a      	movs	r2, r3
 800295e:	2328      	movs	r3, #40	@ 0x28
 8002960:	4013      	ands	r3, r2
 8002962:	2b28      	cmp	r3, #40	@ 0x28
 8002964:	d003      	beq.n	800296e <I2C_Disable_IRQ+0x6a>
 8002966:	68fb      	ldr	r3, [r7, #12]
 8002968:	22b0      	movs	r2, #176	@ 0xb0
 800296a:	4313      	orrs	r3, r2
 800296c:	60fb      	str	r3, [r7, #12]
 800296e:	1cbb      	adds	r3, r7, #2
 8002970:	2200      	movs	r2, #0
 8002972:	5e9b      	ldrsh	r3, [r3, r2]
 8002974:	2b00      	cmp	r3, #0
 8002976:	da03      	bge.n	8002980 <I2C_Disable_IRQ+0x7c>
 8002978:	68fb      	ldr	r3, [r7, #12]
 800297a:	22b8      	movs	r2, #184	@ 0xb8
 800297c:	4313      	orrs	r3, r2
 800297e:	60fb      	str	r3, [r7, #12]
 8002980:	1cbb      	adds	r3, r7, #2
 8002982:	881b      	ldrh	r3, [r3, #0]
 8002984:	2b10      	cmp	r3, #16
 8002986:	d103      	bne.n	8002990 <I2C_Disable_IRQ+0x8c>
 8002988:	68fb      	ldr	r3, [r7, #12]
 800298a:	2290      	movs	r2, #144	@ 0x90
 800298c:	4313      	orrs	r3, r2
 800298e:	60fb      	str	r3, [r7, #12]
 8002990:	1cbb      	adds	r3, r7, #2
 8002992:	881b      	ldrh	r3, [r3, #0]
 8002994:	2b20      	cmp	r3, #32
 8002996:	d103      	bne.n	80029a0 <I2C_Disable_IRQ+0x9c>
 8002998:	68fb      	ldr	r3, [r7, #12]
 800299a:	2220      	movs	r2, #32
 800299c:	4313      	orrs	r3, r2
 800299e:	60fb      	str	r3, [r7, #12]
 80029a0:	1cbb      	adds	r3, r7, #2
 80029a2:	881b      	ldrh	r3, [r3, #0]
 80029a4:	2b40      	cmp	r3, #64	@ 0x40
 80029a6:	d103      	bne.n	80029b0 <I2C_Disable_IRQ+0xac>
 80029a8:	68fb      	ldr	r3, [r7, #12]
 80029aa:	2240      	movs	r2, #64	@ 0x40
 80029ac:	4313      	orrs	r3, r2
 80029ae:	60fb      	str	r3, [r7, #12]
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	681a      	ldr	r2, [r3, #0]
 80029b6:	68fb      	ldr	r3, [r7, #12]
 80029b8:	43d9      	mvns	r1, r3
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	681b      	ldr	r3, [r3, #0]
 80029be:	400a      	ands	r2, r1
 80029c0:	601a      	str	r2, [r3, #0]
 80029c2:	46c0      	nop			@ (mov r8, r8)
 80029c4:	46bd      	mov	sp, r7
 80029c6:	b004      	add	sp, #16
 80029c8:	bd80      	pop	{r7, pc}
	...

080029cc <HAL_I2CEx_ConfigAnalogFilter>:
 80029cc:	b580      	push	{r7, lr}
 80029ce:	b082      	sub	sp, #8
 80029d0:	af00      	add	r7, sp, #0
 80029d2:	6078      	str	r0, [r7, #4]
 80029d4:	6039      	str	r1, [r7, #0]
 80029d6:	687b      	ldr	r3, [r7, #4]
 80029d8:	2241      	movs	r2, #65	@ 0x41
 80029da:	5c9b      	ldrb	r3, [r3, r2]
 80029dc:	b2db      	uxtb	r3, r3
 80029de:	2b20      	cmp	r3, #32
 80029e0:	d138      	bne.n	8002a54 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	2240      	movs	r2, #64	@ 0x40
 80029e6:	5c9b      	ldrb	r3, [r3, r2]
 80029e8:	2b01      	cmp	r3, #1
 80029ea:	d101      	bne.n	80029f0 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 80029ec:	2302      	movs	r3, #2
 80029ee:	e032      	b.n	8002a56 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	2240      	movs	r2, #64	@ 0x40
 80029f4:	2101      	movs	r1, #1
 80029f6:	5499      	strb	r1, [r3, r2]
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	2241      	movs	r2, #65	@ 0x41
 80029fc:	2124      	movs	r1, #36	@ 0x24
 80029fe:	5499      	strb	r1, [r3, r2]
 8002a00:	687b      	ldr	r3, [r7, #4]
 8002a02:	681b      	ldr	r3, [r3, #0]
 8002a04:	681a      	ldr	r2, [r3, #0]
 8002a06:	687b      	ldr	r3, [r7, #4]
 8002a08:	681b      	ldr	r3, [r3, #0]
 8002a0a:	2101      	movs	r1, #1
 8002a0c:	438a      	bics	r2, r1
 8002a0e:	601a      	str	r2, [r3, #0]
 8002a10:	687b      	ldr	r3, [r7, #4]
 8002a12:	681b      	ldr	r3, [r3, #0]
 8002a14:	681a      	ldr	r2, [r3, #0]
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	681b      	ldr	r3, [r3, #0]
 8002a1a:	4911      	ldr	r1, [pc, #68]	@ (8002a60 <HAL_I2CEx_ConfigAnalogFilter+0x94>)
 8002a1c:	400a      	ands	r2, r1
 8002a1e:	601a      	str	r2, [r3, #0]
 8002a20:	687b      	ldr	r3, [r7, #4]
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	6819      	ldr	r1, [r3, #0]
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	683a      	ldr	r2, [r7, #0]
 8002a2c:	430a      	orrs	r2, r1
 8002a2e:	601a      	str	r2, [r3, #0]
 8002a30:	687b      	ldr	r3, [r7, #4]
 8002a32:	681b      	ldr	r3, [r3, #0]
 8002a34:	681a      	ldr	r2, [r3, #0]
 8002a36:	687b      	ldr	r3, [r7, #4]
 8002a38:	681b      	ldr	r3, [r3, #0]
 8002a3a:	2101      	movs	r1, #1
 8002a3c:	430a      	orrs	r2, r1
 8002a3e:	601a      	str	r2, [r3, #0]
 8002a40:	687b      	ldr	r3, [r7, #4]
 8002a42:	2241      	movs	r2, #65	@ 0x41
 8002a44:	2120      	movs	r1, #32
 8002a46:	5499      	strb	r1, [r3, r2]
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	2240      	movs	r2, #64	@ 0x40
 8002a4c:	2100      	movs	r1, #0
 8002a4e:	5499      	strb	r1, [r3, r2]
 8002a50:	2300      	movs	r3, #0
 8002a52:	e000      	b.n	8002a56 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8002a54:	2302      	movs	r3, #2
 8002a56:	0018      	movs	r0, r3
 8002a58:	46bd      	mov	sp, r7
 8002a5a:	b002      	add	sp, #8
 8002a5c:	bd80      	pop	{r7, pc}
 8002a5e:	46c0      	nop			@ (mov r8, r8)
 8002a60:	ffffefff 	.word	0xffffefff

08002a64 <HAL_I2CEx_ConfigDigitalFilter>:
 8002a64:	b580      	push	{r7, lr}
 8002a66:	b084      	sub	sp, #16
 8002a68:	af00      	add	r7, sp, #0
 8002a6a:	6078      	str	r0, [r7, #4]
 8002a6c:	6039      	str	r1, [r7, #0]
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	2241      	movs	r2, #65	@ 0x41
 8002a72:	5c9b      	ldrb	r3, [r3, r2]
 8002a74:	b2db      	uxtb	r3, r3
 8002a76:	2b20      	cmp	r3, #32
 8002a78:	d139      	bne.n	8002aee <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	2240      	movs	r2, #64	@ 0x40
 8002a7e:	5c9b      	ldrb	r3, [r3, r2]
 8002a80:	2b01      	cmp	r3, #1
 8002a82:	d101      	bne.n	8002a88 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8002a84:	2302      	movs	r3, #2
 8002a86:	e033      	b.n	8002af0 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8002a88:	687b      	ldr	r3, [r7, #4]
 8002a8a:	2240      	movs	r2, #64	@ 0x40
 8002a8c:	2101      	movs	r1, #1
 8002a8e:	5499      	strb	r1, [r3, r2]
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	2241      	movs	r2, #65	@ 0x41
 8002a94:	2124      	movs	r1, #36	@ 0x24
 8002a96:	5499      	strb	r1, [r3, r2]
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	681a      	ldr	r2, [r3, #0]
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	681b      	ldr	r3, [r3, #0]
 8002aa2:	2101      	movs	r1, #1
 8002aa4:	438a      	bics	r2, r1
 8002aa6:	601a      	str	r2, [r3, #0]
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	60fb      	str	r3, [r7, #12]
 8002ab0:	68fb      	ldr	r3, [r7, #12]
 8002ab2:	4a11      	ldr	r2, [pc, #68]	@ (8002af8 <HAL_I2CEx_ConfigDigitalFilter+0x94>)
 8002ab4:	4013      	ands	r3, r2
 8002ab6:	60fb      	str	r3, [r7, #12]
 8002ab8:	683b      	ldr	r3, [r7, #0]
 8002aba:	021b      	lsls	r3, r3, #8
 8002abc:	68fa      	ldr	r2, [r7, #12]
 8002abe:	4313      	orrs	r3, r2
 8002ac0:	60fb      	str	r3, [r7, #12]
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	68fa      	ldr	r2, [r7, #12]
 8002ac8:	601a      	str	r2, [r3, #0]
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	681a      	ldr	r2, [r3, #0]
 8002ad0:	687b      	ldr	r3, [r7, #4]
 8002ad2:	681b      	ldr	r3, [r3, #0]
 8002ad4:	2101      	movs	r1, #1
 8002ad6:	430a      	orrs	r2, r1
 8002ad8:	601a      	str	r2, [r3, #0]
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	2241      	movs	r2, #65	@ 0x41
 8002ade:	2120      	movs	r1, #32
 8002ae0:	5499      	strb	r1, [r3, r2]
 8002ae2:	687b      	ldr	r3, [r7, #4]
 8002ae4:	2240      	movs	r2, #64	@ 0x40
 8002ae6:	2100      	movs	r1, #0
 8002ae8:	5499      	strb	r1, [r3, r2]
 8002aea:	2300      	movs	r3, #0
 8002aec:	e000      	b.n	8002af0 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8002aee:	2302      	movs	r3, #2
 8002af0:	0018      	movs	r0, r3
 8002af2:	46bd      	mov	sp, r7
 8002af4:	b004      	add	sp, #16
 8002af6:	bd80      	pop	{r7, pc}
 8002af8:	fffff0ff 	.word	0xfffff0ff

08002afc <HAL_RCC_OscConfig>:
 8002afc:	b580      	push	{r7, lr}
 8002afe:	b088      	sub	sp, #32
 8002b00:	af00      	add	r7, sp, #0
 8002b02:	6078      	str	r0, [r7, #4]
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	2b00      	cmp	r3, #0
 8002b08:	d101      	bne.n	8002b0e <HAL_RCC_OscConfig+0x12>
 8002b0a:	2301      	movs	r3, #1
 8002b0c:	e301      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	2201      	movs	r2, #1
 8002b14:	4013      	ands	r3, r2
 8002b16:	d100      	bne.n	8002b1a <HAL_RCC_OscConfig+0x1e>
 8002b18:	e08d      	b.n	8002c36 <HAL_RCC_OscConfig+0x13a>
 8002b1a:	4bc3      	ldr	r3, [pc, #780]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b1c:	685b      	ldr	r3, [r3, #4]
 8002b1e:	220c      	movs	r2, #12
 8002b20:	4013      	ands	r3, r2
 8002b22:	2b04      	cmp	r3, #4
 8002b24:	d00e      	beq.n	8002b44 <HAL_RCC_OscConfig+0x48>
 8002b26:	4bc0      	ldr	r3, [pc, #768]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b28:	685b      	ldr	r3, [r3, #4]
 8002b2a:	220c      	movs	r2, #12
 8002b2c:	4013      	ands	r3, r2
 8002b2e:	2b08      	cmp	r3, #8
 8002b30:	d116      	bne.n	8002b60 <HAL_RCC_OscConfig+0x64>
 8002b32:	4bbd      	ldr	r3, [pc, #756]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b34:	685a      	ldr	r2, [r3, #4]
 8002b36:	2380      	movs	r3, #128	@ 0x80
 8002b38:	025b      	lsls	r3, r3, #9
 8002b3a:	401a      	ands	r2, r3
 8002b3c:	2380      	movs	r3, #128	@ 0x80
 8002b3e:	025b      	lsls	r3, r3, #9
 8002b40:	429a      	cmp	r2, r3
 8002b42:	d10d      	bne.n	8002b60 <HAL_RCC_OscConfig+0x64>
 8002b44:	4bb8      	ldr	r3, [pc, #736]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b46:	681a      	ldr	r2, [r3, #0]
 8002b48:	2380      	movs	r3, #128	@ 0x80
 8002b4a:	029b      	lsls	r3, r3, #10
 8002b4c:	4013      	ands	r3, r2
 8002b4e:	d100      	bne.n	8002b52 <HAL_RCC_OscConfig+0x56>
 8002b50:	e070      	b.n	8002c34 <HAL_RCC_OscConfig+0x138>
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	685b      	ldr	r3, [r3, #4]
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d000      	beq.n	8002b5c <HAL_RCC_OscConfig+0x60>
 8002b5a:	e06b      	b.n	8002c34 <HAL_RCC_OscConfig+0x138>
 8002b5c:	2301      	movs	r3, #1
 8002b5e:	e2d8      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002b60:	687b      	ldr	r3, [r7, #4]
 8002b62:	685b      	ldr	r3, [r3, #4]
 8002b64:	2b01      	cmp	r3, #1
 8002b66:	d107      	bne.n	8002b78 <HAL_RCC_OscConfig+0x7c>
 8002b68:	4baf      	ldr	r3, [pc, #700]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b6a:	681a      	ldr	r2, [r3, #0]
 8002b6c:	4bae      	ldr	r3, [pc, #696]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b6e:	2180      	movs	r1, #128	@ 0x80
 8002b70:	0249      	lsls	r1, r1, #9
 8002b72:	430a      	orrs	r2, r1
 8002b74:	601a      	str	r2, [r3, #0]
 8002b76:	e02f      	b.n	8002bd8 <HAL_RCC_OscConfig+0xdc>
 8002b78:	687b      	ldr	r3, [r7, #4]
 8002b7a:	685b      	ldr	r3, [r3, #4]
 8002b7c:	2b00      	cmp	r3, #0
 8002b7e:	d10c      	bne.n	8002b9a <HAL_RCC_OscConfig+0x9e>
 8002b80:	4ba9      	ldr	r3, [pc, #676]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b82:	681a      	ldr	r2, [r3, #0]
 8002b84:	4ba8      	ldr	r3, [pc, #672]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b86:	49a9      	ldr	r1, [pc, #676]	@ (8002e2c <HAL_RCC_OscConfig+0x330>)
 8002b88:	400a      	ands	r2, r1
 8002b8a:	601a      	str	r2, [r3, #0]
 8002b8c:	4ba6      	ldr	r3, [pc, #664]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b8e:	681a      	ldr	r2, [r3, #0]
 8002b90:	4ba5      	ldr	r3, [pc, #660]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002b92:	49a7      	ldr	r1, [pc, #668]	@ (8002e30 <HAL_RCC_OscConfig+0x334>)
 8002b94:	400a      	ands	r2, r1
 8002b96:	601a      	str	r2, [r3, #0]
 8002b98:	e01e      	b.n	8002bd8 <HAL_RCC_OscConfig+0xdc>
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	685b      	ldr	r3, [r3, #4]
 8002b9e:	2b05      	cmp	r3, #5
 8002ba0:	d10e      	bne.n	8002bc0 <HAL_RCC_OscConfig+0xc4>
 8002ba2:	4ba1      	ldr	r3, [pc, #644]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002ba4:	681a      	ldr	r2, [r3, #0]
 8002ba6:	4ba0      	ldr	r3, [pc, #640]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002ba8:	2180      	movs	r1, #128	@ 0x80
 8002baa:	02c9      	lsls	r1, r1, #11
 8002bac:	430a      	orrs	r2, r1
 8002bae:	601a      	str	r2, [r3, #0]
 8002bb0:	4b9d      	ldr	r3, [pc, #628]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002bb2:	681a      	ldr	r2, [r3, #0]
 8002bb4:	4b9c      	ldr	r3, [pc, #624]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002bb6:	2180      	movs	r1, #128	@ 0x80
 8002bb8:	0249      	lsls	r1, r1, #9
 8002bba:	430a      	orrs	r2, r1
 8002bbc:	601a      	str	r2, [r3, #0]
 8002bbe:	e00b      	b.n	8002bd8 <HAL_RCC_OscConfig+0xdc>
 8002bc0:	4b99      	ldr	r3, [pc, #612]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002bc2:	681a      	ldr	r2, [r3, #0]
 8002bc4:	4b98      	ldr	r3, [pc, #608]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002bc6:	4999      	ldr	r1, [pc, #612]	@ (8002e2c <HAL_RCC_OscConfig+0x330>)
 8002bc8:	400a      	ands	r2, r1
 8002bca:	601a      	str	r2, [r3, #0]
 8002bcc:	4b96      	ldr	r3, [pc, #600]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002bce:	681a      	ldr	r2, [r3, #0]
 8002bd0:	4b95      	ldr	r3, [pc, #596]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002bd2:	4997      	ldr	r1, [pc, #604]	@ (8002e30 <HAL_RCC_OscConfig+0x334>)
 8002bd4:	400a      	ands	r2, r1
 8002bd6:	601a      	str	r2, [r3, #0]
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	685b      	ldr	r3, [r3, #4]
 8002bdc:	2b00      	cmp	r3, #0
 8002bde:	d014      	beq.n	8002c0a <HAL_RCC_OscConfig+0x10e>
 8002be0:	f7fe f8d8 	bl	8000d94 <HAL_GetTick>
 8002be4:	0003      	movs	r3, r0
 8002be6:	61bb      	str	r3, [r7, #24]
 8002be8:	e008      	b.n	8002bfc <HAL_RCC_OscConfig+0x100>
 8002bea:	f7fe f8d3 	bl	8000d94 <HAL_GetTick>
 8002bee:	0002      	movs	r2, r0
 8002bf0:	69bb      	ldr	r3, [r7, #24]
 8002bf2:	1ad3      	subs	r3, r2, r3
 8002bf4:	2b64      	cmp	r3, #100	@ 0x64
 8002bf6:	d901      	bls.n	8002bfc <HAL_RCC_OscConfig+0x100>
 8002bf8:	2303      	movs	r3, #3
 8002bfa:	e28a      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002bfc:	4b8a      	ldr	r3, [pc, #552]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002bfe:	681a      	ldr	r2, [r3, #0]
 8002c00:	2380      	movs	r3, #128	@ 0x80
 8002c02:	029b      	lsls	r3, r3, #10
 8002c04:	4013      	ands	r3, r2
 8002c06:	d0f0      	beq.n	8002bea <HAL_RCC_OscConfig+0xee>
 8002c08:	e015      	b.n	8002c36 <HAL_RCC_OscConfig+0x13a>
 8002c0a:	f7fe f8c3 	bl	8000d94 <HAL_GetTick>
 8002c0e:	0003      	movs	r3, r0
 8002c10:	61bb      	str	r3, [r7, #24]
 8002c12:	e008      	b.n	8002c26 <HAL_RCC_OscConfig+0x12a>
 8002c14:	f7fe f8be 	bl	8000d94 <HAL_GetTick>
 8002c18:	0002      	movs	r2, r0
 8002c1a:	69bb      	ldr	r3, [r7, #24]
 8002c1c:	1ad3      	subs	r3, r2, r3
 8002c1e:	2b64      	cmp	r3, #100	@ 0x64
 8002c20:	d901      	bls.n	8002c26 <HAL_RCC_OscConfig+0x12a>
 8002c22:	2303      	movs	r3, #3
 8002c24:	e275      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002c26:	4b80      	ldr	r3, [pc, #512]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002c28:	681a      	ldr	r2, [r3, #0]
 8002c2a:	2380      	movs	r3, #128	@ 0x80
 8002c2c:	029b      	lsls	r3, r3, #10
 8002c2e:	4013      	ands	r3, r2
 8002c30:	d1f0      	bne.n	8002c14 <HAL_RCC_OscConfig+0x118>
 8002c32:	e000      	b.n	8002c36 <HAL_RCC_OscConfig+0x13a>
 8002c34:	46c0      	nop			@ (mov r8, r8)
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	681b      	ldr	r3, [r3, #0]
 8002c3a:	2202      	movs	r2, #2
 8002c3c:	4013      	ands	r3, r2
 8002c3e:	d100      	bne.n	8002c42 <HAL_RCC_OscConfig+0x146>
 8002c40:	e069      	b.n	8002d16 <HAL_RCC_OscConfig+0x21a>
 8002c42:	4b79      	ldr	r3, [pc, #484]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002c44:	685b      	ldr	r3, [r3, #4]
 8002c46:	220c      	movs	r2, #12
 8002c48:	4013      	ands	r3, r2
 8002c4a:	d00b      	beq.n	8002c64 <HAL_RCC_OscConfig+0x168>
 8002c4c:	4b76      	ldr	r3, [pc, #472]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002c4e:	685b      	ldr	r3, [r3, #4]
 8002c50:	220c      	movs	r2, #12
 8002c52:	4013      	ands	r3, r2
 8002c54:	2b08      	cmp	r3, #8
 8002c56:	d11c      	bne.n	8002c92 <HAL_RCC_OscConfig+0x196>
 8002c58:	4b73      	ldr	r3, [pc, #460]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002c5a:	685a      	ldr	r2, [r3, #4]
 8002c5c:	2380      	movs	r3, #128	@ 0x80
 8002c5e:	025b      	lsls	r3, r3, #9
 8002c60:	4013      	ands	r3, r2
 8002c62:	d116      	bne.n	8002c92 <HAL_RCC_OscConfig+0x196>
 8002c64:	4b70      	ldr	r3, [pc, #448]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	2202      	movs	r2, #2
 8002c6a:	4013      	ands	r3, r2
 8002c6c:	d005      	beq.n	8002c7a <HAL_RCC_OscConfig+0x17e>
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	68db      	ldr	r3, [r3, #12]
 8002c72:	2b01      	cmp	r3, #1
 8002c74:	d001      	beq.n	8002c7a <HAL_RCC_OscConfig+0x17e>
 8002c76:	2301      	movs	r3, #1
 8002c78:	e24b      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002c7a:	4b6b      	ldr	r3, [pc, #428]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	22f8      	movs	r2, #248	@ 0xf8
 8002c80:	4393      	bics	r3, r2
 8002c82:	0019      	movs	r1, r3
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	691b      	ldr	r3, [r3, #16]
 8002c88:	00da      	lsls	r2, r3, #3
 8002c8a:	4b67      	ldr	r3, [pc, #412]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002c8c:	430a      	orrs	r2, r1
 8002c8e:	601a      	str	r2, [r3, #0]
 8002c90:	e041      	b.n	8002d16 <HAL_RCC_OscConfig+0x21a>
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	68db      	ldr	r3, [r3, #12]
 8002c96:	2b00      	cmp	r3, #0
 8002c98:	d024      	beq.n	8002ce4 <HAL_RCC_OscConfig+0x1e8>
 8002c9a:	4b63      	ldr	r3, [pc, #396]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002c9c:	681a      	ldr	r2, [r3, #0]
 8002c9e:	4b62      	ldr	r3, [pc, #392]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002ca0:	2101      	movs	r1, #1
 8002ca2:	430a      	orrs	r2, r1
 8002ca4:	601a      	str	r2, [r3, #0]
 8002ca6:	f7fe f875 	bl	8000d94 <HAL_GetTick>
 8002caa:	0003      	movs	r3, r0
 8002cac:	61bb      	str	r3, [r7, #24]
 8002cae:	e008      	b.n	8002cc2 <HAL_RCC_OscConfig+0x1c6>
 8002cb0:	f7fe f870 	bl	8000d94 <HAL_GetTick>
 8002cb4:	0002      	movs	r2, r0
 8002cb6:	69bb      	ldr	r3, [r7, #24]
 8002cb8:	1ad3      	subs	r3, r2, r3
 8002cba:	2b02      	cmp	r3, #2
 8002cbc:	d901      	bls.n	8002cc2 <HAL_RCC_OscConfig+0x1c6>
 8002cbe:	2303      	movs	r3, #3
 8002cc0:	e227      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002cc2:	4b59      	ldr	r3, [pc, #356]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	2202      	movs	r2, #2
 8002cc8:	4013      	ands	r3, r2
 8002cca:	d0f1      	beq.n	8002cb0 <HAL_RCC_OscConfig+0x1b4>
 8002ccc:	4b56      	ldr	r3, [pc, #344]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	22f8      	movs	r2, #248	@ 0xf8
 8002cd2:	4393      	bics	r3, r2
 8002cd4:	0019      	movs	r1, r3
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	691b      	ldr	r3, [r3, #16]
 8002cda:	00da      	lsls	r2, r3, #3
 8002cdc:	4b52      	ldr	r3, [pc, #328]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002cde:	430a      	orrs	r2, r1
 8002ce0:	601a      	str	r2, [r3, #0]
 8002ce2:	e018      	b.n	8002d16 <HAL_RCC_OscConfig+0x21a>
 8002ce4:	4b50      	ldr	r3, [pc, #320]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002ce6:	681a      	ldr	r2, [r3, #0]
 8002ce8:	4b4f      	ldr	r3, [pc, #316]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002cea:	2101      	movs	r1, #1
 8002cec:	438a      	bics	r2, r1
 8002cee:	601a      	str	r2, [r3, #0]
 8002cf0:	f7fe f850 	bl	8000d94 <HAL_GetTick>
 8002cf4:	0003      	movs	r3, r0
 8002cf6:	61bb      	str	r3, [r7, #24]
 8002cf8:	e008      	b.n	8002d0c <HAL_RCC_OscConfig+0x210>
 8002cfa:	f7fe f84b 	bl	8000d94 <HAL_GetTick>
 8002cfe:	0002      	movs	r2, r0
 8002d00:	69bb      	ldr	r3, [r7, #24]
 8002d02:	1ad3      	subs	r3, r2, r3
 8002d04:	2b02      	cmp	r3, #2
 8002d06:	d901      	bls.n	8002d0c <HAL_RCC_OscConfig+0x210>
 8002d08:	2303      	movs	r3, #3
 8002d0a:	e202      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002d0c:	4b46      	ldr	r3, [pc, #280]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	2202      	movs	r2, #2
 8002d12:	4013      	ands	r3, r2
 8002d14:	d1f1      	bne.n	8002cfa <HAL_RCC_OscConfig+0x1fe>
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	2208      	movs	r2, #8
 8002d1c:	4013      	ands	r3, r2
 8002d1e:	d036      	beq.n	8002d8e <HAL_RCC_OscConfig+0x292>
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	69db      	ldr	r3, [r3, #28]
 8002d24:	2b00      	cmp	r3, #0
 8002d26:	d019      	beq.n	8002d5c <HAL_RCC_OscConfig+0x260>
 8002d28:	4b3f      	ldr	r3, [pc, #252]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002d2a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002d2c:	4b3e      	ldr	r3, [pc, #248]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002d2e:	2101      	movs	r1, #1
 8002d30:	430a      	orrs	r2, r1
 8002d32:	625a      	str	r2, [r3, #36]	@ 0x24
 8002d34:	f7fe f82e 	bl	8000d94 <HAL_GetTick>
 8002d38:	0003      	movs	r3, r0
 8002d3a:	61bb      	str	r3, [r7, #24]
 8002d3c:	e008      	b.n	8002d50 <HAL_RCC_OscConfig+0x254>
 8002d3e:	f7fe f829 	bl	8000d94 <HAL_GetTick>
 8002d42:	0002      	movs	r2, r0
 8002d44:	69bb      	ldr	r3, [r7, #24]
 8002d46:	1ad3      	subs	r3, r2, r3
 8002d48:	2b02      	cmp	r3, #2
 8002d4a:	d901      	bls.n	8002d50 <HAL_RCC_OscConfig+0x254>
 8002d4c:	2303      	movs	r3, #3
 8002d4e:	e1e0      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002d50:	4b35      	ldr	r3, [pc, #212]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002d52:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d54:	2202      	movs	r2, #2
 8002d56:	4013      	ands	r3, r2
 8002d58:	d0f1      	beq.n	8002d3e <HAL_RCC_OscConfig+0x242>
 8002d5a:	e018      	b.n	8002d8e <HAL_RCC_OscConfig+0x292>
 8002d5c:	4b32      	ldr	r3, [pc, #200]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002d5e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8002d60:	4b31      	ldr	r3, [pc, #196]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002d62:	2101      	movs	r1, #1
 8002d64:	438a      	bics	r2, r1
 8002d66:	625a      	str	r2, [r3, #36]	@ 0x24
 8002d68:	f7fe f814 	bl	8000d94 <HAL_GetTick>
 8002d6c:	0003      	movs	r3, r0
 8002d6e:	61bb      	str	r3, [r7, #24]
 8002d70:	e008      	b.n	8002d84 <HAL_RCC_OscConfig+0x288>
 8002d72:	f7fe f80f 	bl	8000d94 <HAL_GetTick>
 8002d76:	0002      	movs	r2, r0
 8002d78:	69bb      	ldr	r3, [r7, #24]
 8002d7a:	1ad3      	subs	r3, r2, r3
 8002d7c:	2b02      	cmp	r3, #2
 8002d7e:	d901      	bls.n	8002d84 <HAL_RCC_OscConfig+0x288>
 8002d80:	2303      	movs	r3, #3
 8002d82:	e1c6      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002d84:	4b28      	ldr	r3, [pc, #160]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002d86:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002d88:	2202      	movs	r2, #2
 8002d8a:	4013      	ands	r3, r2
 8002d8c:	d1f1      	bne.n	8002d72 <HAL_RCC_OscConfig+0x276>
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	2204      	movs	r2, #4
 8002d94:	4013      	ands	r3, r2
 8002d96:	d100      	bne.n	8002d9a <HAL_RCC_OscConfig+0x29e>
 8002d98:	e0b4      	b.n	8002f04 <HAL_RCC_OscConfig+0x408>
 8002d9a:	201f      	movs	r0, #31
 8002d9c:	183b      	adds	r3, r7, r0
 8002d9e:	2200      	movs	r2, #0
 8002da0:	701a      	strb	r2, [r3, #0]
 8002da2:	4b21      	ldr	r3, [pc, #132]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002da4:	69da      	ldr	r2, [r3, #28]
 8002da6:	2380      	movs	r3, #128	@ 0x80
 8002da8:	055b      	lsls	r3, r3, #21
 8002daa:	4013      	ands	r3, r2
 8002dac:	d110      	bne.n	8002dd0 <HAL_RCC_OscConfig+0x2d4>
 8002dae:	4b1e      	ldr	r3, [pc, #120]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002db0:	69da      	ldr	r2, [r3, #28]
 8002db2:	4b1d      	ldr	r3, [pc, #116]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002db4:	2180      	movs	r1, #128	@ 0x80
 8002db6:	0549      	lsls	r1, r1, #21
 8002db8:	430a      	orrs	r2, r1
 8002dba:	61da      	str	r2, [r3, #28]
 8002dbc:	4b1a      	ldr	r3, [pc, #104]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002dbe:	69da      	ldr	r2, [r3, #28]
 8002dc0:	2380      	movs	r3, #128	@ 0x80
 8002dc2:	055b      	lsls	r3, r3, #21
 8002dc4:	4013      	ands	r3, r2
 8002dc6:	60fb      	str	r3, [r7, #12]
 8002dc8:	68fb      	ldr	r3, [r7, #12]
 8002dca:	183b      	adds	r3, r7, r0
 8002dcc:	2201      	movs	r2, #1
 8002dce:	701a      	strb	r2, [r3, #0]
 8002dd0:	4b18      	ldr	r3, [pc, #96]	@ (8002e34 <HAL_RCC_OscConfig+0x338>)
 8002dd2:	681a      	ldr	r2, [r3, #0]
 8002dd4:	2380      	movs	r3, #128	@ 0x80
 8002dd6:	005b      	lsls	r3, r3, #1
 8002dd8:	4013      	ands	r3, r2
 8002dda:	d11a      	bne.n	8002e12 <HAL_RCC_OscConfig+0x316>
 8002ddc:	4b15      	ldr	r3, [pc, #84]	@ (8002e34 <HAL_RCC_OscConfig+0x338>)
 8002dde:	681a      	ldr	r2, [r3, #0]
 8002de0:	4b14      	ldr	r3, [pc, #80]	@ (8002e34 <HAL_RCC_OscConfig+0x338>)
 8002de2:	2180      	movs	r1, #128	@ 0x80
 8002de4:	0049      	lsls	r1, r1, #1
 8002de6:	430a      	orrs	r2, r1
 8002de8:	601a      	str	r2, [r3, #0]
 8002dea:	f7fd ffd3 	bl	8000d94 <HAL_GetTick>
 8002dee:	0003      	movs	r3, r0
 8002df0:	61bb      	str	r3, [r7, #24]
 8002df2:	e008      	b.n	8002e06 <HAL_RCC_OscConfig+0x30a>
 8002df4:	f7fd ffce 	bl	8000d94 <HAL_GetTick>
 8002df8:	0002      	movs	r2, r0
 8002dfa:	69bb      	ldr	r3, [r7, #24]
 8002dfc:	1ad3      	subs	r3, r2, r3
 8002dfe:	2b64      	cmp	r3, #100	@ 0x64
 8002e00:	d901      	bls.n	8002e06 <HAL_RCC_OscConfig+0x30a>
 8002e02:	2303      	movs	r3, #3
 8002e04:	e185      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002e06:	4b0b      	ldr	r3, [pc, #44]	@ (8002e34 <HAL_RCC_OscConfig+0x338>)
 8002e08:	681a      	ldr	r2, [r3, #0]
 8002e0a:	2380      	movs	r3, #128	@ 0x80
 8002e0c:	005b      	lsls	r3, r3, #1
 8002e0e:	4013      	ands	r3, r2
 8002e10:	d0f0      	beq.n	8002df4 <HAL_RCC_OscConfig+0x2f8>
 8002e12:	687b      	ldr	r3, [r7, #4]
 8002e14:	689b      	ldr	r3, [r3, #8]
 8002e16:	2b01      	cmp	r3, #1
 8002e18:	d10e      	bne.n	8002e38 <HAL_RCC_OscConfig+0x33c>
 8002e1a:	4b03      	ldr	r3, [pc, #12]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002e1c:	6a1a      	ldr	r2, [r3, #32]
 8002e1e:	4b02      	ldr	r3, [pc, #8]	@ (8002e28 <HAL_RCC_OscConfig+0x32c>)
 8002e20:	2101      	movs	r1, #1
 8002e22:	430a      	orrs	r2, r1
 8002e24:	621a      	str	r2, [r3, #32]
 8002e26:	e035      	b.n	8002e94 <HAL_RCC_OscConfig+0x398>
 8002e28:	40021000 	.word	0x40021000
 8002e2c:	fffeffff 	.word	0xfffeffff
 8002e30:	fffbffff 	.word	0xfffbffff
 8002e34:	40007000 	.word	0x40007000
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	689b      	ldr	r3, [r3, #8]
 8002e3c:	2b00      	cmp	r3, #0
 8002e3e:	d10c      	bne.n	8002e5a <HAL_RCC_OscConfig+0x35e>
 8002e40:	4bb6      	ldr	r3, [pc, #728]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e42:	6a1a      	ldr	r2, [r3, #32]
 8002e44:	4bb5      	ldr	r3, [pc, #724]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e46:	2101      	movs	r1, #1
 8002e48:	438a      	bics	r2, r1
 8002e4a:	621a      	str	r2, [r3, #32]
 8002e4c:	4bb3      	ldr	r3, [pc, #716]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e4e:	6a1a      	ldr	r2, [r3, #32]
 8002e50:	4bb2      	ldr	r3, [pc, #712]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e52:	2104      	movs	r1, #4
 8002e54:	438a      	bics	r2, r1
 8002e56:	621a      	str	r2, [r3, #32]
 8002e58:	e01c      	b.n	8002e94 <HAL_RCC_OscConfig+0x398>
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	689b      	ldr	r3, [r3, #8]
 8002e5e:	2b05      	cmp	r3, #5
 8002e60:	d10c      	bne.n	8002e7c <HAL_RCC_OscConfig+0x380>
 8002e62:	4bae      	ldr	r3, [pc, #696]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e64:	6a1a      	ldr	r2, [r3, #32]
 8002e66:	4bad      	ldr	r3, [pc, #692]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e68:	2104      	movs	r1, #4
 8002e6a:	430a      	orrs	r2, r1
 8002e6c:	621a      	str	r2, [r3, #32]
 8002e6e:	4bab      	ldr	r3, [pc, #684]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e70:	6a1a      	ldr	r2, [r3, #32]
 8002e72:	4baa      	ldr	r3, [pc, #680]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e74:	2101      	movs	r1, #1
 8002e76:	430a      	orrs	r2, r1
 8002e78:	621a      	str	r2, [r3, #32]
 8002e7a:	e00b      	b.n	8002e94 <HAL_RCC_OscConfig+0x398>
 8002e7c:	4ba7      	ldr	r3, [pc, #668]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e7e:	6a1a      	ldr	r2, [r3, #32]
 8002e80:	4ba6      	ldr	r3, [pc, #664]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e82:	2101      	movs	r1, #1
 8002e84:	438a      	bics	r2, r1
 8002e86:	621a      	str	r2, [r3, #32]
 8002e88:	4ba4      	ldr	r3, [pc, #656]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e8a:	6a1a      	ldr	r2, [r3, #32]
 8002e8c:	4ba3      	ldr	r3, [pc, #652]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002e8e:	2104      	movs	r1, #4
 8002e90:	438a      	bics	r2, r1
 8002e92:	621a      	str	r2, [r3, #32]
 8002e94:	687b      	ldr	r3, [r7, #4]
 8002e96:	689b      	ldr	r3, [r3, #8]
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	d014      	beq.n	8002ec6 <HAL_RCC_OscConfig+0x3ca>
 8002e9c:	f7fd ff7a 	bl	8000d94 <HAL_GetTick>
 8002ea0:	0003      	movs	r3, r0
 8002ea2:	61bb      	str	r3, [r7, #24]
 8002ea4:	e009      	b.n	8002eba <HAL_RCC_OscConfig+0x3be>
 8002ea6:	f7fd ff75 	bl	8000d94 <HAL_GetTick>
 8002eaa:	0002      	movs	r2, r0
 8002eac:	69bb      	ldr	r3, [r7, #24]
 8002eae:	1ad3      	subs	r3, r2, r3
 8002eb0:	4a9b      	ldr	r2, [pc, #620]	@ (8003120 <HAL_RCC_OscConfig+0x624>)
 8002eb2:	4293      	cmp	r3, r2
 8002eb4:	d901      	bls.n	8002eba <HAL_RCC_OscConfig+0x3be>
 8002eb6:	2303      	movs	r3, #3
 8002eb8:	e12b      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002eba:	4b98      	ldr	r3, [pc, #608]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002ebc:	6a1b      	ldr	r3, [r3, #32]
 8002ebe:	2202      	movs	r2, #2
 8002ec0:	4013      	ands	r3, r2
 8002ec2:	d0f0      	beq.n	8002ea6 <HAL_RCC_OscConfig+0x3aa>
 8002ec4:	e013      	b.n	8002eee <HAL_RCC_OscConfig+0x3f2>
 8002ec6:	f7fd ff65 	bl	8000d94 <HAL_GetTick>
 8002eca:	0003      	movs	r3, r0
 8002ecc:	61bb      	str	r3, [r7, #24]
 8002ece:	e009      	b.n	8002ee4 <HAL_RCC_OscConfig+0x3e8>
 8002ed0:	f7fd ff60 	bl	8000d94 <HAL_GetTick>
 8002ed4:	0002      	movs	r2, r0
 8002ed6:	69bb      	ldr	r3, [r7, #24]
 8002ed8:	1ad3      	subs	r3, r2, r3
 8002eda:	4a91      	ldr	r2, [pc, #580]	@ (8003120 <HAL_RCC_OscConfig+0x624>)
 8002edc:	4293      	cmp	r3, r2
 8002ede:	d901      	bls.n	8002ee4 <HAL_RCC_OscConfig+0x3e8>
 8002ee0:	2303      	movs	r3, #3
 8002ee2:	e116      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002ee4:	4b8d      	ldr	r3, [pc, #564]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002ee6:	6a1b      	ldr	r3, [r3, #32]
 8002ee8:	2202      	movs	r2, #2
 8002eea:	4013      	ands	r3, r2
 8002eec:	d1f0      	bne.n	8002ed0 <HAL_RCC_OscConfig+0x3d4>
 8002eee:	231f      	movs	r3, #31
 8002ef0:	18fb      	adds	r3, r7, r3
 8002ef2:	781b      	ldrb	r3, [r3, #0]
 8002ef4:	2b01      	cmp	r3, #1
 8002ef6:	d105      	bne.n	8002f04 <HAL_RCC_OscConfig+0x408>
 8002ef8:	4b88      	ldr	r3, [pc, #544]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002efa:	69da      	ldr	r2, [r3, #28]
 8002efc:	4b87      	ldr	r3, [pc, #540]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002efe:	4989      	ldr	r1, [pc, #548]	@ (8003124 <HAL_RCC_OscConfig+0x628>)
 8002f00:	400a      	ands	r2, r1
 8002f02:	61da      	str	r2, [r3, #28]
 8002f04:	687b      	ldr	r3, [r7, #4]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	2210      	movs	r2, #16
 8002f0a:	4013      	ands	r3, r2
 8002f0c:	d063      	beq.n	8002fd6 <HAL_RCC_OscConfig+0x4da>
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	695b      	ldr	r3, [r3, #20]
 8002f12:	2b01      	cmp	r3, #1
 8002f14:	d12a      	bne.n	8002f6c <HAL_RCC_OscConfig+0x470>
 8002f16:	4b81      	ldr	r3, [pc, #516]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f18:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002f1a:	4b80      	ldr	r3, [pc, #512]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f1c:	2104      	movs	r1, #4
 8002f1e:	430a      	orrs	r2, r1
 8002f20:	635a      	str	r2, [r3, #52]	@ 0x34
 8002f22:	4b7e      	ldr	r3, [pc, #504]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f24:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002f26:	4b7d      	ldr	r3, [pc, #500]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f28:	2101      	movs	r1, #1
 8002f2a:	430a      	orrs	r2, r1
 8002f2c:	635a      	str	r2, [r3, #52]	@ 0x34
 8002f2e:	f7fd ff31 	bl	8000d94 <HAL_GetTick>
 8002f32:	0003      	movs	r3, r0
 8002f34:	61bb      	str	r3, [r7, #24]
 8002f36:	e008      	b.n	8002f4a <HAL_RCC_OscConfig+0x44e>
 8002f38:	f7fd ff2c 	bl	8000d94 <HAL_GetTick>
 8002f3c:	0002      	movs	r2, r0
 8002f3e:	69bb      	ldr	r3, [r7, #24]
 8002f40:	1ad3      	subs	r3, r2, r3
 8002f42:	2b02      	cmp	r3, #2
 8002f44:	d901      	bls.n	8002f4a <HAL_RCC_OscConfig+0x44e>
 8002f46:	2303      	movs	r3, #3
 8002f48:	e0e3      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002f4a:	4b74      	ldr	r3, [pc, #464]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f4c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002f4e:	2202      	movs	r2, #2
 8002f50:	4013      	ands	r3, r2
 8002f52:	d0f1      	beq.n	8002f38 <HAL_RCC_OscConfig+0x43c>
 8002f54:	4b71      	ldr	r3, [pc, #452]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f56:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002f58:	22f8      	movs	r2, #248	@ 0xf8
 8002f5a:	4393      	bics	r3, r2
 8002f5c:	0019      	movs	r1, r3
 8002f5e:	687b      	ldr	r3, [r7, #4]
 8002f60:	699b      	ldr	r3, [r3, #24]
 8002f62:	00da      	lsls	r2, r3, #3
 8002f64:	4b6d      	ldr	r3, [pc, #436]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f66:	430a      	orrs	r2, r1
 8002f68:	635a      	str	r2, [r3, #52]	@ 0x34
 8002f6a:	e034      	b.n	8002fd6 <HAL_RCC_OscConfig+0x4da>
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	695b      	ldr	r3, [r3, #20]
 8002f70:	3305      	adds	r3, #5
 8002f72:	d111      	bne.n	8002f98 <HAL_RCC_OscConfig+0x49c>
 8002f74:	4b69      	ldr	r3, [pc, #420]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f76:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002f78:	4b68      	ldr	r3, [pc, #416]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f7a:	2104      	movs	r1, #4
 8002f7c:	438a      	bics	r2, r1
 8002f7e:	635a      	str	r2, [r3, #52]	@ 0x34
 8002f80:	4b66      	ldr	r3, [pc, #408]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f82:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002f84:	22f8      	movs	r2, #248	@ 0xf8
 8002f86:	4393      	bics	r3, r2
 8002f88:	0019      	movs	r1, r3
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	699b      	ldr	r3, [r3, #24]
 8002f8e:	00da      	lsls	r2, r3, #3
 8002f90:	4b62      	ldr	r3, [pc, #392]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f92:	430a      	orrs	r2, r1
 8002f94:	635a      	str	r2, [r3, #52]	@ 0x34
 8002f96:	e01e      	b.n	8002fd6 <HAL_RCC_OscConfig+0x4da>
 8002f98:	4b60      	ldr	r3, [pc, #384]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f9a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002f9c:	4b5f      	ldr	r3, [pc, #380]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002f9e:	2104      	movs	r1, #4
 8002fa0:	430a      	orrs	r2, r1
 8002fa2:	635a      	str	r2, [r3, #52]	@ 0x34
 8002fa4:	4b5d      	ldr	r3, [pc, #372]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002fa6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002fa8:	4b5c      	ldr	r3, [pc, #368]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002faa:	2101      	movs	r1, #1
 8002fac:	438a      	bics	r2, r1
 8002fae:	635a      	str	r2, [r3, #52]	@ 0x34
 8002fb0:	f7fd fef0 	bl	8000d94 <HAL_GetTick>
 8002fb4:	0003      	movs	r3, r0
 8002fb6:	61bb      	str	r3, [r7, #24]
 8002fb8:	e008      	b.n	8002fcc <HAL_RCC_OscConfig+0x4d0>
 8002fba:	f7fd feeb 	bl	8000d94 <HAL_GetTick>
 8002fbe:	0002      	movs	r2, r0
 8002fc0:	69bb      	ldr	r3, [r7, #24]
 8002fc2:	1ad3      	subs	r3, r2, r3
 8002fc4:	2b02      	cmp	r3, #2
 8002fc6:	d901      	bls.n	8002fcc <HAL_RCC_OscConfig+0x4d0>
 8002fc8:	2303      	movs	r3, #3
 8002fca:	e0a2      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8002fcc:	4b53      	ldr	r3, [pc, #332]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002fce:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8002fd0:	2202      	movs	r2, #2
 8002fd2:	4013      	ands	r3, r2
 8002fd4:	d1f1      	bne.n	8002fba <HAL_RCC_OscConfig+0x4be>
 8002fd6:	687b      	ldr	r3, [r7, #4]
 8002fd8:	6a1b      	ldr	r3, [r3, #32]
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d100      	bne.n	8002fe0 <HAL_RCC_OscConfig+0x4e4>
 8002fde:	e097      	b.n	8003110 <HAL_RCC_OscConfig+0x614>
 8002fe0:	4b4e      	ldr	r3, [pc, #312]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002fe2:	685b      	ldr	r3, [r3, #4]
 8002fe4:	220c      	movs	r2, #12
 8002fe6:	4013      	ands	r3, r2
 8002fe8:	2b08      	cmp	r3, #8
 8002fea:	d100      	bne.n	8002fee <HAL_RCC_OscConfig+0x4f2>
 8002fec:	e06b      	b.n	80030c6 <HAL_RCC_OscConfig+0x5ca>
 8002fee:	687b      	ldr	r3, [r7, #4]
 8002ff0:	6a1b      	ldr	r3, [r3, #32]
 8002ff2:	2b02      	cmp	r3, #2
 8002ff4:	d14c      	bne.n	8003090 <HAL_RCC_OscConfig+0x594>
 8002ff6:	4b49      	ldr	r3, [pc, #292]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002ff8:	681a      	ldr	r2, [r3, #0]
 8002ffa:	4b48      	ldr	r3, [pc, #288]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8002ffc:	494a      	ldr	r1, [pc, #296]	@ (8003128 <HAL_RCC_OscConfig+0x62c>)
 8002ffe:	400a      	ands	r2, r1
 8003000:	601a      	str	r2, [r3, #0]
 8003002:	f7fd fec7 	bl	8000d94 <HAL_GetTick>
 8003006:	0003      	movs	r3, r0
 8003008:	61bb      	str	r3, [r7, #24]
 800300a:	e008      	b.n	800301e <HAL_RCC_OscConfig+0x522>
 800300c:	f7fd fec2 	bl	8000d94 <HAL_GetTick>
 8003010:	0002      	movs	r2, r0
 8003012:	69bb      	ldr	r3, [r7, #24]
 8003014:	1ad3      	subs	r3, r2, r3
 8003016:	2b02      	cmp	r3, #2
 8003018:	d901      	bls.n	800301e <HAL_RCC_OscConfig+0x522>
 800301a:	2303      	movs	r3, #3
 800301c:	e079      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 800301e:	4b3f      	ldr	r3, [pc, #252]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8003020:	681a      	ldr	r2, [r3, #0]
 8003022:	2380      	movs	r3, #128	@ 0x80
 8003024:	049b      	lsls	r3, r3, #18
 8003026:	4013      	ands	r3, r2
 8003028:	d1f0      	bne.n	800300c <HAL_RCC_OscConfig+0x510>
 800302a:	4b3c      	ldr	r3, [pc, #240]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 800302c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800302e:	220f      	movs	r2, #15
 8003030:	4393      	bics	r3, r2
 8003032:	0019      	movs	r1, r3
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003038:	4b38      	ldr	r3, [pc, #224]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 800303a:	430a      	orrs	r2, r1
 800303c:	62da      	str	r2, [r3, #44]	@ 0x2c
 800303e:	4b37      	ldr	r3, [pc, #220]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8003040:	685b      	ldr	r3, [r3, #4]
 8003042:	4a3a      	ldr	r2, [pc, #232]	@ (800312c <HAL_RCC_OscConfig+0x630>)
 8003044:	4013      	ands	r3, r2
 8003046:	0019      	movs	r1, r3
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003050:	431a      	orrs	r2, r3
 8003052:	4b32      	ldr	r3, [pc, #200]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8003054:	430a      	orrs	r2, r1
 8003056:	605a      	str	r2, [r3, #4]
 8003058:	4b30      	ldr	r3, [pc, #192]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 800305a:	681a      	ldr	r2, [r3, #0]
 800305c:	4b2f      	ldr	r3, [pc, #188]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 800305e:	2180      	movs	r1, #128	@ 0x80
 8003060:	0449      	lsls	r1, r1, #17
 8003062:	430a      	orrs	r2, r1
 8003064:	601a      	str	r2, [r3, #0]
 8003066:	f7fd fe95 	bl	8000d94 <HAL_GetTick>
 800306a:	0003      	movs	r3, r0
 800306c:	61bb      	str	r3, [r7, #24]
 800306e:	e008      	b.n	8003082 <HAL_RCC_OscConfig+0x586>
 8003070:	f7fd fe90 	bl	8000d94 <HAL_GetTick>
 8003074:	0002      	movs	r2, r0
 8003076:	69bb      	ldr	r3, [r7, #24]
 8003078:	1ad3      	subs	r3, r2, r3
 800307a:	2b02      	cmp	r3, #2
 800307c:	d901      	bls.n	8003082 <HAL_RCC_OscConfig+0x586>
 800307e:	2303      	movs	r3, #3
 8003080:	e047      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8003082:	4b26      	ldr	r3, [pc, #152]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8003084:	681a      	ldr	r2, [r3, #0]
 8003086:	2380      	movs	r3, #128	@ 0x80
 8003088:	049b      	lsls	r3, r3, #18
 800308a:	4013      	ands	r3, r2
 800308c:	d0f0      	beq.n	8003070 <HAL_RCC_OscConfig+0x574>
 800308e:	e03f      	b.n	8003110 <HAL_RCC_OscConfig+0x614>
 8003090:	4b22      	ldr	r3, [pc, #136]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8003092:	681a      	ldr	r2, [r3, #0]
 8003094:	4b21      	ldr	r3, [pc, #132]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 8003096:	4924      	ldr	r1, [pc, #144]	@ (8003128 <HAL_RCC_OscConfig+0x62c>)
 8003098:	400a      	ands	r2, r1
 800309a:	601a      	str	r2, [r3, #0]
 800309c:	f7fd fe7a 	bl	8000d94 <HAL_GetTick>
 80030a0:	0003      	movs	r3, r0
 80030a2:	61bb      	str	r3, [r7, #24]
 80030a4:	e008      	b.n	80030b8 <HAL_RCC_OscConfig+0x5bc>
 80030a6:	f7fd fe75 	bl	8000d94 <HAL_GetTick>
 80030aa:	0002      	movs	r2, r0
 80030ac:	69bb      	ldr	r3, [r7, #24]
 80030ae:	1ad3      	subs	r3, r2, r3
 80030b0:	2b02      	cmp	r3, #2
 80030b2:	d901      	bls.n	80030b8 <HAL_RCC_OscConfig+0x5bc>
 80030b4:	2303      	movs	r3, #3
 80030b6:	e02c      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 80030b8:	4b18      	ldr	r3, [pc, #96]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 80030ba:	681a      	ldr	r2, [r3, #0]
 80030bc:	2380      	movs	r3, #128	@ 0x80
 80030be:	049b      	lsls	r3, r3, #18
 80030c0:	4013      	ands	r3, r2
 80030c2:	d1f0      	bne.n	80030a6 <HAL_RCC_OscConfig+0x5aa>
 80030c4:	e024      	b.n	8003110 <HAL_RCC_OscConfig+0x614>
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	6a1b      	ldr	r3, [r3, #32]
 80030ca:	2b01      	cmp	r3, #1
 80030cc:	d101      	bne.n	80030d2 <HAL_RCC_OscConfig+0x5d6>
 80030ce:	2301      	movs	r3, #1
 80030d0:	e01f      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 80030d2:	4b12      	ldr	r3, [pc, #72]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 80030d4:	685b      	ldr	r3, [r3, #4]
 80030d6:	617b      	str	r3, [r7, #20]
 80030d8:	4b10      	ldr	r3, [pc, #64]	@ (800311c <HAL_RCC_OscConfig+0x620>)
 80030da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80030dc:	613b      	str	r3, [r7, #16]
 80030de:	697a      	ldr	r2, [r7, #20]
 80030e0:	2380      	movs	r3, #128	@ 0x80
 80030e2:	025b      	lsls	r3, r3, #9
 80030e4:	401a      	ands	r2, r3
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030ea:	429a      	cmp	r2, r3
 80030ec:	d10e      	bne.n	800310c <HAL_RCC_OscConfig+0x610>
 80030ee:	693b      	ldr	r3, [r7, #16]
 80030f0:	220f      	movs	r2, #15
 80030f2:	401a      	ands	r2, r3
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80030f8:	429a      	cmp	r2, r3
 80030fa:	d107      	bne.n	800310c <HAL_RCC_OscConfig+0x610>
 80030fc:	697a      	ldr	r2, [r7, #20]
 80030fe:	23f0      	movs	r3, #240	@ 0xf0
 8003100:	039b      	lsls	r3, r3, #14
 8003102:	401a      	ands	r2, r3
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003108:	429a      	cmp	r2, r3
 800310a:	d001      	beq.n	8003110 <HAL_RCC_OscConfig+0x614>
 800310c:	2301      	movs	r3, #1
 800310e:	e000      	b.n	8003112 <HAL_RCC_OscConfig+0x616>
 8003110:	2300      	movs	r3, #0
 8003112:	0018      	movs	r0, r3
 8003114:	46bd      	mov	sp, r7
 8003116:	b008      	add	sp, #32
 8003118:	bd80      	pop	{r7, pc}
 800311a:	46c0      	nop			@ (mov r8, r8)
 800311c:	40021000 	.word	0x40021000
 8003120:	00001388 	.word	0x00001388
 8003124:	efffffff 	.word	0xefffffff
 8003128:	feffffff 	.word	0xfeffffff
 800312c:	ffc2ffff 	.word	0xffc2ffff

08003130 <HAL_RCC_ClockConfig>:
 8003130:	b580      	push	{r7, lr}
 8003132:	b084      	sub	sp, #16
 8003134:	af00      	add	r7, sp, #0
 8003136:	6078      	str	r0, [r7, #4]
 8003138:	6039      	str	r1, [r7, #0]
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	2b00      	cmp	r3, #0
 800313e:	d101      	bne.n	8003144 <HAL_RCC_ClockConfig+0x14>
 8003140:	2301      	movs	r3, #1
 8003142:	e0b3      	b.n	80032ac <HAL_RCC_ClockConfig+0x17c>
 8003144:	4b5b      	ldr	r3, [pc, #364]	@ (80032b4 <HAL_RCC_ClockConfig+0x184>)
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	2201      	movs	r2, #1
 800314a:	4013      	ands	r3, r2
 800314c:	683a      	ldr	r2, [r7, #0]
 800314e:	429a      	cmp	r2, r3
 8003150:	d911      	bls.n	8003176 <HAL_RCC_ClockConfig+0x46>
 8003152:	4b58      	ldr	r3, [pc, #352]	@ (80032b4 <HAL_RCC_ClockConfig+0x184>)
 8003154:	681b      	ldr	r3, [r3, #0]
 8003156:	2201      	movs	r2, #1
 8003158:	4393      	bics	r3, r2
 800315a:	0019      	movs	r1, r3
 800315c:	4b55      	ldr	r3, [pc, #340]	@ (80032b4 <HAL_RCC_ClockConfig+0x184>)
 800315e:	683a      	ldr	r2, [r7, #0]
 8003160:	430a      	orrs	r2, r1
 8003162:	601a      	str	r2, [r3, #0]
 8003164:	4b53      	ldr	r3, [pc, #332]	@ (80032b4 <HAL_RCC_ClockConfig+0x184>)
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	2201      	movs	r2, #1
 800316a:	4013      	ands	r3, r2
 800316c:	683a      	ldr	r2, [r7, #0]
 800316e:	429a      	cmp	r2, r3
 8003170:	d001      	beq.n	8003176 <HAL_RCC_ClockConfig+0x46>
 8003172:	2301      	movs	r3, #1
 8003174:	e09a      	b.n	80032ac <HAL_RCC_ClockConfig+0x17c>
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	2202      	movs	r2, #2
 800317c:	4013      	ands	r3, r2
 800317e:	d015      	beq.n	80031ac <HAL_RCC_ClockConfig+0x7c>
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	2204      	movs	r2, #4
 8003186:	4013      	ands	r3, r2
 8003188:	d006      	beq.n	8003198 <HAL_RCC_ClockConfig+0x68>
 800318a:	4b4b      	ldr	r3, [pc, #300]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 800318c:	685a      	ldr	r2, [r3, #4]
 800318e:	4b4a      	ldr	r3, [pc, #296]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 8003190:	21e0      	movs	r1, #224	@ 0xe0
 8003192:	00c9      	lsls	r1, r1, #3
 8003194:	430a      	orrs	r2, r1
 8003196:	605a      	str	r2, [r3, #4]
 8003198:	4b47      	ldr	r3, [pc, #284]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 800319a:	685b      	ldr	r3, [r3, #4]
 800319c:	22f0      	movs	r2, #240	@ 0xf0
 800319e:	4393      	bics	r3, r2
 80031a0:	0019      	movs	r1, r3
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	689a      	ldr	r2, [r3, #8]
 80031a6:	4b44      	ldr	r3, [pc, #272]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 80031a8:	430a      	orrs	r2, r1
 80031aa:	605a      	str	r2, [r3, #4]
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	2201      	movs	r2, #1
 80031b2:	4013      	ands	r3, r2
 80031b4:	d040      	beq.n	8003238 <HAL_RCC_ClockConfig+0x108>
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	685b      	ldr	r3, [r3, #4]
 80031ba:	2b01      	cmp	r3, #1
 80031bc:	d107      	bne.n	80031ce <HAL_RCC_ClockConfig+0x9e>
 80031be:	4b3e      	ldr	r3, [pc, #248]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 80031c0:	681a      	ldr	r2, [r3, #0]
 80031c2:	2380      	movs	r3, #128	@ 0x80
 80031c4:	029b      	lsls	r3, r3, #10
 80031c6:	4013      	ands	r3, r2
 80031c8:	d114      	bne.n	80031f4 <HAL_RCC_ClockConfig+0xc4>
 80031ca:	2301      	movs	r3, #1
 80031cc:	e06e      	b.n	80032ac <HAL_RCC_ClockConfig+0x17c>
 80031ce:	687b      	ldr	r3, [r7, #4]
 80031d0:	685b      	ldr	r3, [r3, #4]
 80031d2:	2b02      	cmp	r3, #2
 80031d4:	d107      	bne.n	80031e6 <HAL_RCC_ClockConfig+0xb6>
 80031d6:	4b38      	ldr	r3, [pc, #224]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 80031d8:	681a      	ldr	r2, [r3, #0]
 80031da:	2380      	movs	r3, #128	@ 0x80
 80031dc:	049b      	lsls	r3, r3, #18
 80031de:	4013      	ands	r3, r2
 80031e0:	d108      	bne.n	80031f4 <HAL_RCC_ClockConfig+0xc4>
 80031e2:	2301      	movs	r3, #1
 80031e4:	e062      	b.n	80032ac <HAL_RCC_ClockConfig+0x17c>
 80031e6:	4b34      	ldr	r3, [pc, #208]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	2202      	movs	r2, #2
 80031ec:	4013      	ands	r3, r2
 80031ee:	d101      	bne.n	80031f4 <HAL_RCC_ClockConfig+0xc4>
 80031f0:	2301      	movs	r3, #1
 80031f2:	e05b      	b.n	80032ac <HAL_RCC_ClockConfig+0x17c>
 80031f4:	4b30      	ldr	r3, [pc, #192]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 80031f6:	685b      	ldr	r3, [r3, #4]
 80031f8:	2203      	movs	r2, #3
 80031fa:	4393      	bics	r3, r2
 80031fc:	0019      	movs	r1, r3
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	685a      	ldr	r2, [r3, #4]
 8003202:	4b2d      	ldr	r3, [pc, #180]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 8003204:	430a      	orrs	r2, r1
 8003206:	605a      	str	r2, [r3, #4]
 8003208:	f7fd fdc4 	bl	8000d94 <HAL_GetTick>
 800320c:	0003      	movs	r3, r0
 800320e:	60fb      	str	r3, [r7, #12]
 8003210:	e009      	b.n	8003226 <HAL_RCC_ClockConfig+0xf6>
 8003212:	f7fd fdbf 	bl	8000d94 <HAL_GetTick>
 8003216:	0002      	movs	r2, r0
 8003218:	68fb      	ldr	r3, [r7, #12]
 800321a:	1ad3      	subs	r3, r2, r3
 800321c:	4a27      	ldr	r2, [pc, #156]	@ (80032bc <HAL_RCC_ClockConfig+0x18c>)
 800321e:	4293      	cmp	r3, r2
 8003220:	d901      	bls.n	8003226 <HAL_RCC_ClockConfig+0xf6>
 8003222:	2303      	movs	r3, #3
 8003224:	e042      	b.n	80032ac <HAL_RCC_ClockConfig+0x17c>
 8003226:	4b24      	ldr	r3, [pc, #144]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 8003228:	685b      	ldr	r3, [r3, #4]
 800322a:	220c      	movs	r2, #12
 800322c:	401a      	ands	r2, r3
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	685b      	ldr	r3, [r3, #4]
 8003232:	009b      	lsls	r3, r3, #2
 8003234:	429a      	cmp	r2, r3
 8003236:	d1ec      	bne.n	8003212 <HAL_RCC_ClockConfig+0xe2>
 8003238:	4b1e      	ldr	r3, [pc, #120]	@ (80032b4 <HAL_RCC_ClockConfig+0x184>)
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	2201      	movs	r2, #1
 800323e:	4013      	ands	r3, r2
 8003240:	683a      	ldr	r2, [r7, #0]
 8003242:	429a      	cmp	r2, r3
 8003244:	d211      	bcs.n	800326a <HAL_RCC_ClockConfig+0x13a>
 8003246:	4b1b      	ldr	r3, [pc, #108]	@ (80032b4 <HAL_RCC_ClockConfig+0x184>)
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	2201      	movs	r2, #1
 800324c:	4393      	bics	r3, r2
 800324e:	0019      	movs	r1, r3
 8003250:	4b18      	ldr	r3, [pc, #96]	@ (80032b4 <HAL_RCC_ClockConfig+0x184>)
 8003252:	683a      	ldr	r2, [r7, #0]
 8003254:	430a      	orrs	r2, r1
 8003256:	601a      	str	r2, [r3, #0]
 8003258:	4b16      	ldr	r3, [pc, #88]	@ (80032b4 <HAL_RCC_ClockConfig+0x184>)
 800325a:	681b      	ldr	r3, [r3, #0]
 800325c:	2201      	movs	r2, #1
 800325e:	4013      	ands	r3, r2
 8003260:	683a      	ldr	r2, [r7, #0]
 8003262:	429a      	cmp	r2, r3
 8003264:	d001      	beq.n	800326a <HAL_RCC_ClockConfig+0x13a>
 8003266:	2301      	movs	r3, #1
 8003268:	e020      	b.n	80032ac <HAL_RCC_ClockConfig+0x17c>
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	2204      	movs	r2, #4
 8003270:	4013      	ands	r3, r2
 8003272:	d009      	beq.n	8003288 <HAL_RCC_ClockConfig+0x158>
 8003274:	4b10      	ldr	r3, [pc, #64]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 8003276:	685b      	ldr	r3, [r3, #4]
 8003278:	4a11      	ldr	r2, [pc, #68]	@ (80032c0 <HAL_RCC_ClockConfig+0x190>)
 800327a:	4013      	ands	r3, r2
 800327c:	0019      	movs	r1, r3
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	68da      	ldr	r2, [r3, #12]
 8003282:	4b0d      	ldr	r3, [pc, #52]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 8003284:	430a      	orrs	r2, r1
 8003286:	605a      	str	r2, [r3, #4]
 8003288:	f000 f820 	bl	80032cc <HAL_RCC_GetSysClockFreq>
 800328c:	0001      	movs	r1, r0
 800328e:	4b0a      	ldr	r3, [pc, #40]	@ (80032b8 <HAL_RCC_ClockConfig+0x188>)
 8003290:	685b      	ldr	r3, [r3, #4]
 8003292:	091b      	lsrs	r3, r3, #4
 8003294:	220f      	movs	r2, #15
 8003296:	4013      	ands	r3, r2
 8003298:	4a0a      	ldr	r2, [pc, #40]	@ (80032c4 <HAL_RCC_ClockConfig+0x194>)
 800329a:	5cd3      	ldrb	r3, [r2, r3]
 800329c:	000a      	movs	r2, r1
 800329e:	40da      	lsrs	r2, r3
 80032a0:	4b09      	ldr	r3, [pc, #36]	@ (80032c8 <HAL_RCC_ClockConfig+0x198>)
 80032a2:	601a      	str	r2, [r3, #0]
 80032a4:	2003      	movs	r0, #3
 80032a6:	f7fd fd2f 	bl	8000d08 <HAL_InitTick>
 80032aa:	2300      	movs	r3, #0
 80032ac:	0018      	movs	r0, r3
 80032ae:	46bd      	mov	sp, r7
 80032b0:	b004      	add	sp, #16
 80032b2:	bd80      	pop	{r7, pc}
 80032b4:	40022000 	.word	0x40022000
 80032b8:	40021000 	.word	0x40021000
 80032bc:	00001388 	.word	0x00001388
 80032c0:	fffff8ff 	.word	0xfffff8ff
 80032c4:	08004d38 	.word	0x08004d38
 80032c8:	2000002c 	.word	0x2000002c

080032cc <HAL_RCC_GetSysClockFreq>:
 80032cc:	b580      	push	{r7, lr}
 80032ce:	b086      	sub	sp, #24
 80032d0:	af00      	add	r7, sp, #0
 80032d2:	2300      	movs	r3, #0
 80032d4:	60fb      	str	r3, [r7, #12]
 80032d6:	2300      	movs	r3, #0
 80032d8:	60bb      	str	r3, [r7, #8]
 80032da:	2300      	movs	r3, #0
 80032dc:	617b      	str	r3, [r7, #20]
 80032de:	2300      	movs	r3, #0
 80032e0:	607b      	str	r3, [r7, #4]
 80032e2:	2300      	movs	r3, #0
 80032e4:	613b      	str	r3, [r7, #16]
 80032e6:	4b20      	ldr	r3, [pc, #128]	@ (8003368 <HAL_RCC_GetSysClockFreq+0x9c>)
 80032e8:	685b      	ldr	r3, [r3, #4]
 80032ea:	60fb      	str	r3, [r7, #12]
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	220c      	movs	r2, #12
 80032f0:	4013      	ands	r3, r2
 80032f2:	2b04      	cmp	r3, #4
 80032f4:	d002      	beq.n	80032fc <HAL_RCC_GetSysClockFreq+0x30>
 80032f6:	2b08      	cmp	r3, #8
 80032f8:	d003      	beq.n	8003302 <HAL_RCC_GetSysClockFreq+0x36>
 80032fa:	e02c      	b.n	8003356 <HAL_RCC_GetSysClockFreq+0x8a>
 80032fc:	4b1b      	ldr	r3, [pc, #108]	@ (800336c <HAL_RCC_GetSysClockFreq+0xa0>)
 80032fe:	613b      	str	r3, [r7, #16]
 8003300:	e02c      	b.n	800335c <HAL_RCC_GetSysClockFreq+0x90>
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	0c9b      	lsrs	r3, r3, #18
 8003306:	220f      	movs	r2, #15
 8003308:	4013      	ands	r3, r2
 800330a:	4a19      	ldr	r2, [pc, #100]	@ (8003370 <HAL_RCC_GetSysClockFreq+0xa4>)
 800330c:	5cd3      	ldrb	r3, [r2, r3]
 800330e:	607b      	str	r3, [r7, #4]
 8003310:	4b15      	ldr	r3, [pc, #84]	@ (8003368 <HAL_RCC_GetSysClockFreq+0x9c>)
 8003312:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003314:	220f      	movs	r2, #15
 8003316:	4013      	ands	r3, r2
 8003318:	4a16      	ldr	r2, [pc, #88]	@ (8003374 <HAL_RCC_GetSysClockFreq+0xa8>)
 800331a:	5cd3      	ldrb	r3, [r2, r3]
 800331c:	60bb      	str	r3, [r7, #8]
 800331e:	68fa      	ldr	r2, [r7, #12]
 8003320:	2380      	movs	r3, #128	@ 0x80
 8003322:	025b      	lsls	r3, r3, #9
 8003324:	4013      	ands	r3, r2
 8003326:	d009      	beq.n	800333c <HAL_RCC_GetSysClockFreq+0x70>
 8003328:	68b9      	ldr	r1, [r7, #8]
 800332a:	4810      	ldr	r0, [pc, #64]	@ (800336c <HAL_RCC_GetSysClockFreq+0xa0>)
 800332c:	f7fc fefe 	bl	800012c <__udivsi3>
 8003330:	0003      	movs	r3, r0
 8003332:	001a      	movs	r2, r3
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	4353      	muls	r3, r2
 8003338:	617b      	str	r3, [r7, #20]
 800333a:	e009      	b.n	8003350 <HAL_RCC_GetSysClockFreq+0x84>
 800333c:	6879      	ldr	r1, [r7, #4]
 800333e:	000a      	movs	r2, r1
 8003340:	0152      	lsls	r2, r2, #5
 8003342:	1a52      	subs	r2, r2, r1
 8003344:	0193      	lsls	r3, r2, #6
 8003346:	1a9b      	subs	r3, r3, r2
 8003348:	00db      	lsls	r3, r3, #3
 800334a:	185b      	adds	r3, r3, r1
 800334c:	021b      	lsls	r3, r3, #8
 800334e:	617b      	str	r3, [r7, #20]
 8003350:	697b      	ldr	r3, [r7, #20]
 8003352:	613b      	str	r3, [r7, #16]
 8003354:	e002      	b.n	800335c <HAL_RCC_GetSysClockFreq+0x90>
 8003356:	4b05      	ldr	r3, [pc, #20]	@ (800336c <HAL_RCC_GetSysClockFreq+0xa0>)
 8003358:	613b      	str	r3, [r7, #16]
 800335a:	46c0      	nop			@ (mov r8, r8)
 800335c:	693b      	ldr	r3, [r7, #16]
 800335e:	0018      	movs	r0, r3
 8003360:	46bd      	mov	sp, r7
 8003362:	b006      	add	sp, #24
 8003364:	bd80      	pop	{r7, pc}
 8003366:	46c0      	nop			@ (mov r8, r8)
 8003368:	40021000 	.word	0x40021000
 800336c:	007a1200 	.word	0x007a1200
 8003370:	08004d48 	.word	0x08004d48
 8003374:	08004d58 	.word	0x08004d58

08003378 <HAL_RCCEx_PeriphCLKConfig>:
 8003378:	b580      	push	{r7, lr}
 800337a:	b086      	sub	sp, #24
 800337c:	af00      	add	r7, sp, #0
 800337e:	6078      	str	r0, [r7, #4]
 8003380:	2300      	movs	r3, #0
 8003382:	613b      	str	r3, [r7, #16]
 8003384:	2300      	movs	r3, #0
 8003386:	60fb      	str	r3, [r7, #12]
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	681a      	ldr	r2, [r3, #0]
 800338c:	2380      	movs	r3, #128	@ 0x80
 800338e:	025b      	lsls	r3, r3, #9
 8003390:	4013      	ands	r3, r2
 8003392:	d100      	bne.n	8003396 <HAL_RCCEx_PeriphCLKConfig+0x1e>
 8003394:	e08e      	b.n	80034b4 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 8003396:	2017      	movs	r0, #23
 8003398:	183b      	adds	r3, r7, r0
 800339a:	2200      	movs	r2, #0
 800339c:	701a      	strb	r2, [r3, #0]
 800339e:	4b57      	ldr	r3, [pc, #348]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80033a0:	69da      	ldr	r2, [r3, #28]
 80033a2:	2380      	movs	r3, #128	@ 0x80
 80033a4:	055b      	lsls	r3, r3, #21
 80033a6:	4013      	ands	r3, r2
 80033a8:	d110      	bne.n	80033cc <HAL_RCCEx_PeriphCLKConfig+0x54>
 80033aa:	4b54      	ldr	r3, [pc, #336]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80033ac:	69da      	ldr	r2, [r3, #28]
 80033ae:	4b53      	ldr	r3, [pc, #332]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80033b0:	2180      	movs	r1, #128	@ 0x80
 80033b2:	0549      	lsls	r1, r1, #21
 80033b4:	430a      	orrs	r2, r1
 80033b6:	61da      	str	r2, [r3, #28]
 80033b8:	4b50      	ldr	r3, [pc, #320]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80033ba:	69da      	ldr	r2, [r3, #28]
 80033bc:	2380      	movs	r3, #128	@ 0x80
 80033be:	055b      	lsls	r3, r3, #21
 80033c0:	4013      	ands	r3, r2
 80033c2:	60bb      	str	r3, [r7, #8]
 80033c4:	68bb      	ldr	r3, [r7, #8]
 80033c6:	183b      	adds	r3, r7, r0
 80033c8:	2201      	movs	r2, #1
 80033ca:	701a      	strb	r2, [r3, #0]
 80033cc:	4b4c      	ldr	r3, [pc, #304]	@ (8003500 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 80033ce:	681a      	ldr	r2, [r3, #0]
 80033d0:	2380      	movs	r3, #128	@ 0x80
 80033d2:	005b      	lsls	r3, r3, #1
 80033d4:	4013      	ands	r3, r2
 80033d6:	d11a      	bne.n	800340e <HAL_RCCEx_PeriphCLKConfig+0x96>
 80033d8:	4b49      	ldr	r3, [pc, #292]	@ (8003500 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 80033da:	681a      	ldr	r2, [r3, #0]
 80033dc:	4b48      	ldr	r3, [pc, #288]	@ (8003500 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 80033de:	2180      	movs	r1, #128	@ 0x80
 80033e0:	0049      	lsls	r1, r1, #1
 80033e2:	430a      	orrs	r2, r1
 80033e4:	601a      	str	r2, [r3, #0]
 80033e6:	f7fd fcd5 	bl	8000d94 <HAL_GetTick>
 80033ea:	0003      	movs	r3, r0
 80033ec:	613b      	str	r3, [r7, #16]
 80033ee:	e008      	b.n	8003402 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 80033f0:	f7fd fcd0 	bl	8000d94 <HAL_GetTick>
 80033f4:	0002      	movs	r2, r0
 80033f6:	693b      	ldr	r3, [r7, #16]
 80033f8:	1ad3      	subs	r3, r2, r3
 80033fa:	2b64      	cmp	r3, #100	@ 0x64
 80033fc:	d901      	bls.n	8003402 <HAL_RCCEx_PeriphCLKConfig+0x8a>
 80033fe:	2303      	movs	r3, #3
 8003400:	e077      	b.n	80034f2 <HAL_RCCEx_PeriphCLKConfig+0x17a>
 8003402:	4b3f      	ldr	r3, [pc, #252]	@ (8003500 <HAL_RCCEx_PeriphCLKConfig+0x188>)
 8003404:	681a      	ldr	r2, [r3, #0]
 8003406:	2380      	movs	r3, #128	@ 0x80
 8003408:	005b      	lsls	r3, r3, #1
 800340a:	4013      	ands	r3, r2
 800340c:	d0f0      	beq.n	80033f0 <HAL_RCCEx_PeriphCLKConfig+0x78>
 800340e:	4b3b      	ldr	r3, [pc, #236]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8003410:	6a1a      	ldr	r2, [r3, #32]
 8003412:	23c0      	movs	r3, #192	@ 0xc0
 8003414:	009b      	lsls	r3, r3, #2
 8003416:	4013      	ands	r3, r2
 8003418:	60fb      	str	r3, [r7, #12]
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	2b00      	cmp	r3, #0
 800341e:	d034      	beq.n	800348a <HAL_RCCEx_PeriphCLKConfig+0x112>
 8003420:	687b      	ldr	r3, [r7, #4]
 8003422:	685a      	ldr	r2, [r3, #4]
 8003424:	23c0      	movs	r3, #192	@ 0xc0
 8003426:	009b      	lsls	r3, r3, #2
 8003428:	4013      	ands	r3, r2
 800342a:	68fa      	ldr	r2, [r7, #12]
 800342c:	429a      	cmp	r2, r3
 800342e:	d02c      	beq.n	800348a <HAL_RCCEx_PeriphCLKConfig+0x112>
 8003430:	4b32      	ldr	r3, [pc, #200]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8003432:	6a1b      	ldr	r3, [r3, #32]
 8003434:	4a33      	ldr	r2, [pc, #204]	@ (8003504 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 8003436:	4013      	ands	r3, r2
 8003438:	60fb      	str	r3, [r7, #12]
 800343a:	4b30      	ldr	r3, [pc, #192]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 800343c:	6a1a      	ldr	r2, [r3, #32]
 800343e:	4b2f      	ldr	r3, [pc, #188]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8003440:	2180      	movs	r1, #128	@ 0x80
 8003442:	0249      	lsls	r1, r1, #9
 8003444:	430a      	orrs	r2, r1
 8003446:	621a      	str	r2, [r3, #32]
 8003448:	4b2c      	ldr	r3, [pc, #176]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 800344a:	6a1a      	ldr	r2, [r3, #32]
 800344c:	4b2b      	ldr	r3, [pc, #172]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 800344e:	492e      	ldr	r1, [pc, #184]	@ (8003508 <HAL_RCCEx_PeriphCLKConfig+0x190>)
 8003450:	400a      	ands	r2, r1
 8003452:	621a      	str	r2, [r3, #32]
 8003454:	4b29      	ldr	r3, [pc, #164]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8003456:	68fa      	ldr	r2, [r7, #12]
 8003458:	621a      	str	r2, [r3, #32]
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	2201      	movs	r2, #1
 800345e:	4013      	ands	r3, r2
 8003460:	d013      	beq.n	800348a <HAL_RCCEx_PeriphCLKConfig+0x112>
 8003462:	f7fd fc97 	bl	8000d94 <HAL_GetTick>
 8003466:	0003      	movs	r3, r0
 8003468:	613b      	str	r3, [r7, #16]
 800346a:	e009      	b.n	8003480 <HAL_RCCEx_PeriphCLKConfig+0x108>
 800346c:	f7fd fc92 	bl	8000d94 <HAL_GetTick>
 8003470:	0002      	movs	r2, r0
 8003472:	693b      	ldr	r3, [r7, #16]
 8003474:	1ad3      	subs	r3, r2, r3
 8003476:	4a25      	ldr	r2, [pc, #148]	@ (800350c <HAL_RCCEx_PeriphCLKConfig+0x194>)
 8003478:	4293      	cmp	r3, r2
 800347a:	d901      	bls.n	8003480 <HAL_RCCEx_PeriphCLKConfig+0x108>
 800347c:	2303      	movs	r3, #3
 800347e:	e038      	b.n	80034f2 <HAL_RCCEx_PeriphCLKConfig+0x17a>
 8003480:	4b1e      	ldr	r3, [pc, #120]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 8003482:	6a1b      	ldr	r3, [r3, #32]
 8003484:	2202      	movs	r2, #2
 8003486:	4013      	ands	r3, r2
 8003488:	d0f0      	beq.n	800346c <HAL_RCCEx_PeriphCLKConfig+0xf4>
 800348a:	4b1c      	ldr	r3, [pc, #112]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 800348c:	6a1b      	ldr	r3, [r3, #32]
 800348e:	4a1d      	ldr	r2, [pc, #116]	@ (8003504 <HAL_RCCEx_PeriphCLKConfig+0x18c>)
 8003490:	4013      	ands	r3, r2
 8003492:	0019      	movs	r1, r3
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	685a      	ldr	r2, [r3, #4]
 8003498:	4b18      	ldr	r3, [pc, #96]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 800349a:	430a      	orrs	r2, r1
 800349c:	621a      	str	r2, [r3, #32]
 800349e:	2317      	movs	r3, #23
 80034a0:	18fb      	adds	r3, r7, r3
 80034a2:	781b      	ldrb	r3, [r3, #0]
 80034a4:	2b01      	cmp	r3, #1
 80034a6:	d105      	bne.n	80034b4 <HAL_RCCEx_PeriphCLKConfig+0x13c>
 80034a8:	4b14      	ldr	r3, [pc, #80]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80034aa:	69da      	ldr	r2, [r3, #28]
 80034ac:	4b13      	ldr	r3, [pc, #76]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80034ae:	4918      	ldr	r1, [pc, #96]	@ (8003510 <HAL_RCCEx_PeriphCLKConfig+0x198>)
 80034b0:	400a      	ands	r2, r1
 80034b2:	61da      	str	r2, [r3, #28]
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	2201      	movs	r2, #1
 80034ba:	4013      	ands	r3, r2
 80034bc:	d009      	beq.n	80034d2 <HAL_RCCEx_PeriphCLKConfig+0x15a>
 80034be:	4b0f      	ldr	r3, [pc, #60]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80034c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80034c2:	2203      	movs	r2, #3
 80034c4:	4393      	bics	r3, r2
 80034c6:	0019      	movs	r1, r3
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	689a      	ldr	r2, [r3, #8]
 80034cc:	4b0b      	ldr	r3, [pc, #44]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80034ce:	430a      	orrs	r2, r1
 80034d0:	631a      	str	r2, [r3, #48]	@ 0x30
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	2220      	movs	r2, #32
 80034d8:	4013      	ands	r3, r2
 80034da:	d009      	beq.n	80034f0 <HAL_RCCEx_PeriphCLKConfig+0x178>
 80034dc:	4b07      	ldr	r3, [pc, #28]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80034de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80034e0:	2210      	movs	r2, #16
 80034e2:	4393      	bics	r3, r2
 80034e4:	0019      	movs	r1, r3
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	68da      	ldr	r2, [r3, #12]
 80034ea:	4b04      	ldr	r3, [pc, #16]	@ (80034fc <HAL_RCCEx_PeriphCLKConfig+0x184>)
 80034ec:	430a      	orrs	r2, r1
 80034ee:	631a      	str	r2, [r3, #48]	@ 0x30
 80034f0:	2300      	movs	r3, #0
 80034f2:	0018      	movs	r0, r3
 80034f4:	46bd      	mov	sp, r7
 80034f6:	b006      	add	sp, #24
 80034f8:	bd80      	pop	{r7, pc}
 80034fa:	46c0      	nop			@ (mov r8, r8)
 80034fc:	40021000 	.word	0x40021000
 8003500:	40007000 	.word	0x40007000
 8003504:	fffffcff 	.word	0xfffffcff
 8003508:	fffeffff 	.word	0xfffeffff
 800350c:	00001388 	.word	0x00001388
 8003510:	efffffff 	.word	0xefffffff

08003514 <std>:
 8003514:	2300      	movs	r3, #0
 8003516:	b510      	push	{r4, lr}
 8003518:	0004      	movs	r4, r0
 800351a:	6003      	str	r3, [r0, #0]
 800351c:	6043      	str	r3, [r0, #4]
 800351e:	6083      	str	r3, [r0, #8]
 8003520:	8181      	strh	r1, [r0, #12]
 8003522:	6643      	str	r3, [r0, #100]	@ 0x64
 8003524:	81c2      	strh	r2, [r0, #14]
 8003526:	6103      	str	r3, [r0, #16]
 8003528:	6143      	str	r3, [r0, #20]
 800352a:	6183      	str	r3, [r0, #24]
 800352c:	0019      	movs	r1, r3
 800352e:	2208      	movs	r2, #8
 8003530:	305c      	adds	r0, #92	@ 0x5c
 8003532:	f000 f8ff 	bl	8003734 <memset>
 8003536:	4b0b      	ldr	r3, [pc, #44]	@ (8003564 <std+0x50>)
 8003538:	6224      	str	r4, [r4, #32]
 800353a:	6263      	str	r3, [r4, #36]	@ 0x24
 800353c:	4b0a      	ldr	r3, [pc, #40]	@ (8003568 <std+0x54>)
 800353e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8003540:	4b0a      	ldr	r3, [pc, #40]	@ (800356c <std+0x58>)
 8003542:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8003544:	4b0a      	ldr	r3, [pc, #40]	@ (8003570 <std+0x5c>)
 8003546:	6323      	str	r3, [r4, #48]	@ 0x30
 8003548:	4b0a      	ldr	r3, [pc, #40]	@ (8003574 <std+0x60>)
 800354a:	429c      	cmp	r4, r3
 800354c:	d005      	beq.n	800355a <std+0x46>
 800354e:	4b0a      	ldr	r3, [pc, #40]	@ (8003578 <std+0x64>)
 8003550:	429c      	cmp	r4, r3
 8003552:	d002      	beq.n	800355a <std+0x46>
 8003554:	4b09      	ldr	r3, [pc, #36]	@ (800357c <std+0x68>)
 8003556:	429c      	cmp	r4, r3
 8003558:	d103      	bne.n	8003562 <std+0x4e>
 800355a:	0020      	movs	r0, r4
 800355c:	3058      	adds	r0, #88	@ 0x58
 800355e:	f000 f9dd 	bl	800391c <__retarget_lock_init_recursive>
 8003562:	bd10      	pop	{r4, pc}
 8003564:	0800369d 	.word	0x0800369d
 8003568:	080036c5 	.word	0x080036c5
 800356c:	080036fd 	.word	0x080036fd
 8003570:	08003729 	.word	0x08003729
 8003574:	20000578 	.word	0x20000578
 8003578:	200005e0 	.word	0x200005e0
 800357c:	20000648 	.word	0x20000648

08003580 <stdio_exit_handler>:
 8003580:	b510      	push	{r4, lr}
 8003582:	4a03      	ldr	r2, [pc, #12]	@ (8003590 <stdio_exit_handler+0x10>)
 8003584:	4903      	ldr	r1, [pc, #12]	@ (8003594 <stdio_exit_handler+0x14>)
 8003586:	4804      	ldr	r0, [pc, #16]	@ (8003598 <stdio_exit_handler+0x18>)
 8003588:	f000 f86c 	bl	8003664 <_fwalk_sglue>
 800358c:	bd10      	pop	{r4, pc}
 800358e:	46c0      	nop			@ (mov r8, r8)
 8003590:	20000038 	.word	0x20000038
 8003594:	08003c79 	.word	0x08003c79
 8003598:	20000048 	.word	0x20000048

0800359c <cleanup_stdio>:
 800359c:	6841      	ldr	r1, [r0, #4]
 800359e:	4b0b      	ldr	r3, [pc, #44]	@ (80035cc <cleanup_stdio+0x30>)
 80035a0:	b510      	push	{r4, lr}
 80035a2:	0004      	movs	r4, r0
 80035a4:	4299      	cmp	r1, r3
 80035a6:	d001      	beq.n	80035ac <cleanup_stdio+0x10>
 80035a8:	f000 fb66 	bl	8003c78 <_fflush_r>
 80035ac:	68a1      	ldr	r1, [r4, #8]
 80035ae:	4b08      	ldr	r3, [pc, #32]	@ (80035d0 <cleanup_stdio+0x34>)
 80035b0:	4299      	cmp	r1, r3
 80035b2:	d002      	beq.n	80035ba <cleanup_stdio+0x1e>
 80035b4:	0020      	movs	r0, r4
 80035b6:	f000 fb5f 	bl	8003c78 <_fflush_r>
 80035ba:	68e1      	ldr	r1, [r4, #12]
 80035bc:	4b05      	ldr	r3, [pc, #20]	@ (80035d4 <cleanup_stdio+0x38>)
 80035be:	4299      	cmp	r1, r3
 80035c0:	d002      	beq.n	80035c8 <cleanup_stdio+0x2c>
 80035c2:	0020      	movs	r0, r4
 80035c4:	f000 fb58 	bl	8003c78 <_fflush_r>
 80035c8:	bd10      	pop	{r4, pc}
 80035ca:	46c0      	nop			@ (mov r8, r8)
 80035cc:	20000578 	.word	0x20000578
 80035d0:	200005e0 	.word	0x200005e0
 80035d4:	20000648 	.word	0x20000648

080035d8 <global_stdio_init.part.0>:
 80035d8:	b510      	push	{r4, lr}
 80035da:	4b09      	ldr	r3, [pc, #36]	@ (8003600 <global_stdio_init.part.0+0x28>)
 80035dc:	4a09      	ldr	r2, [pc, #36]	@ (8003604 <global_stdio_init.part.0+0x2c>)
 80035de:	2104      	movs	r1, #4
 80035e0:	601a      	str	r2, [r3, #0]
 80035e2:	4809      	ldr	r0, [pc, #36]	@ (8003608 <global_stdio_init.part.0+0x30>)
 80035e4:	2200      	movs	r2, #0
 80035e6:	f7ff ff95 	bl	8003514 <std>
 80035ea:	2201      	movs	r2, #1
 80035ec:	2109      	movs	r1, #9
 80035ee:	4807      	ldr	r0, [pc, #28]	@ (800360c <global_stdio_init.part.0+0x34>)
 80035f0:	f7ff ff90 	bl	8003514 <std>
 80035f4:	2202      	movs	r2, #2
 80035f6:	2112      	movs	r1, #18
 80035f8:	4805      	ldr	r0, [pc, #20]	@ (8003610 <global_stdio_init.part.0+0x38>)
 80035fa:	f7ff ff8b 	bl	8003514 <std>
 80035fe:	bd10      	pop	{r4, pc}
 8003600:	200006b0 	.word	0x200006b0
 8003604:	08003581 	.word	0x08003581
 8003608:	20000578 	.word	0x20000578
 800360c:	200005e0 	.word	0x200005e0
 8003610:	20000648 	.word	0x20000648

08003614 <__sfp_lock_acquire>:
 8003614:	b510      	push	{r4, lr}
 8003616:	4802      	ldr	r0, [pc, #8]	@ (8003620 <__sfp_lock_acquire+0xc>)
 8003618:	f000 f981 	bl	800391e <__retarget_lock_acquire_recursive>
 800361c:	bd10      	pop	{r4, pc}
 800361e:	46c0      	nop			@ (mov r8, r8)
 8003620:	200006b9 	.word	0x200006b9

08003624 <__sfp_lock_release>:
 8003624:	b510      	push	{r4, lr}
 8003626:	4802      	ldr	r0, [pc, #8]	@ (8003630 <__sfp_lock_release+0xc>)
 8003628:	f000 f97a 	bl	8003920 <__retarget_lock_release_recursive>
 800362c:	bd10      	pop	{r4, pc}
 800362e:	46c0      	nop			@ (mov r8, r8)
 8003630:	200006b9 	.word	0x200006b9

08003634 <__sinit>:
 8003634:	b510      	push	{r4, lr}
 8003636:	0004      	movs	r4, r0
 8003638:	f7ff ffec 	bl	8003614 <__sfp_lock_acquire>
 800363c:	6a23      	ldr	r3, [r4, #32]
 800363e:	2b00      	cmp	r3, #0
 8003640:	d002      	beq.n	8003648 <__sinit+0x14>
 8003642:	f7ff ffef 	bl	8003624 <__sfp_lock_release>
 8003646:	bd10      	pop	{r4, pc}
 8003648:	4b04      	ldr	r3, [pc, #16]	@ (800365c <__sinit+0x28>)
 800364a:	6223      	str	r3, [r4, #32]
 800364c:	4b04      	ldr	r3, [pc, #16]	@ (8003660 <__sinit+0x2c>)
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	2b00      	cmp	r3, #0
 8003652:	d1f6      	bne.n	8003642 <__sinit+0xe>
 8003654:	f7ff ffc0 	bl	80035d8 <global_stdio_init.part.0>
 8003658:	e7f3      	b.n	8003642 <__sinit+0xe>
 800365a:	46c0      	nop			@ (mov r8, r8)
 800365c:	0800359d 	.word	0x0800359d
 8003660:	200006b0 	.word	0x200006b0

08003664 <_fwalk_sglue>:
 8003664:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003666:	0014      	movs	r4, r2
 8003668:	2600      	movs	r6, #0
 800366a:	9000      	str	r0, [sp, #0]
 800366c:	9101      	str	r1, [sp, #4]
 800366e:	68a5      	ldr	r5, [r4, #8]
 8003670:	6867      	ldr	r7, [r4, #4]
 8003672:	3f01      	subs	r7, #1
 8003674:	d504      	bpl.n	8003680 <_fwalk_sglue+0x1c>
 8003676:	6824      	ldr	r4, [r4, #0]
 8003678:	2c00      	cmp	r4, #0
 800367a:	d1f8      	bne.n	800366e <_fwalk_sglue+0xa>
 800367c:	0030      	movs	r0, r6
 800367e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003680:	89ab      	ldrh	r3, [r5, #12]
 8003682:	2b01      	cmp	r3, #1
 8003684:	d908      	bls.n	8003698 <_fwalk_sglue+0x34>
 8003686:	220e      	movs	r2, #14
 8003688:	5eab      	ldrsh	r3, [r5, r2]
 800368a:	3301      	adds	r3, #1
 800368c:	d004      	beq.n	8003698 <_fwalk_sglue+0x34>
 800368e:	0029      	movs	r1, r5
 8003690:	9800      	ldr	r0, [sp, #0]
 8003692:	9b01      	ldr	r3, [sp, #4]
 8003694:	4798      	blx	r3
 8003696:	4306      	orrs	r6, r0
 8003698:	3568      	adds	r5, #104	@ 0x68
 800369a:	e7ea      	b.n	8003672 <_fwalk_sglue+0xe>

0800369c <__sread>:
 800369c:	b570      	push	{r4, r5, r6, lr}
 800369e:	000c      	movs	r4, r1
 80036a0:	250e      	movs	r5, #14
 80036a2:	5f49      	ldrsh	r1, [r1, r5]
 80036a4:	f000 f8e8 	bl	8003878 <_read_r>
 80036a8:	2800      	cmp	r0, #0
 80036aa:	db03      	blt.n	80036b4 <__sread+0x18>
 80036ac:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80036ae:	181b      	adds	r3, r3, r0
 80036b0:	6563      	str	r3, [r4, #84]	@ 0x54
 80036b2:	bd70      	pop	{r4, r5, r6, pc}
 80036b4:	89a3      	ldrh	r3, [r4, #12]
 80036b6:	4a02      	ldr	r2, [pc, #8]	@ (80036c0 <__sread+0x24>)
 80036b8:	4013      	ands	r3, r2
 80036ba:	81a3      	strh	r3, [r4, #12]
 80036bc:	e7f9      	b.n	80036b2 <__sread+0x16>
 80036be:	46c0      	nop			@ (mov r8, r8)
 80036c0:	ffffefff 	.word	0xffffefff

080036c4 <__swrite>:
 80036c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80036c6:	001f      	movs	r7, r3
 80036c8:	898b      	ldrh	r3, [r1, #12]
 80036ca:	0005      	movs	r5, r0
 80036cc:	000c      	movs	r4, r1
 80036ce:	0016      	movs	r6, r2
 80036d0:	05db      	lsls	r3, r3, #23
 80036d2:	d505      	bpl.n	80036e0 <__swrite+0x1c>
 80036d4:	230e      	movs	r3, #14
 80036d6:	5ec9      	ldrsh	r1, [r1, r3]
 80036d8:	2200      	movs	r2, #0
 80036da:	2302      	movs	r3, #2
 80036dc:	f000 f8b8 	bl	8003850 <_lseek_r>
 80036e0:	89a3      	ldrh	r3, [r4, #12]
 80036e2:	4a05      	ldr	r2, [pc, #20]	@ (80036f8 <__swrite+0x34>)
 80036e4:	0028      	movs	r0, r5
 80036e6:	4013      	ands	r3, r2
 80036e8:	81a3      	strh	r3, [r4, #12]
 80036ea:	0032      	movs	r2, r6
 80036ec:	230e      	movs	r3, #14
 80036ee:	5ee1      	ldrsh	r1, [r4, r3]
 80036f0:	003b      	movs	r3, r7
 80036f2:	f000 f8d5 	bl	80038a0 <_write_r>
 80036f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80036f8:	ffffefff 	.word	0xffffefff

080036fc <__sseek>:
 80036fc:	b570      	push	{r4, r5, r6, lr}
 80036fe:	000c      	movs	r4, r1
 8003700:	250e      	movs	r5, #14
 8003702:	5f49      	ldrsh	r1, [r1, r5]
 8003704:	f000 f8a4 	bl	8003850 <_lseek_r>
 8003708:	89a3      	ldrh	r3, [r4, #12]
 800370a:	1c42      	adds	r2, r0, #1
 800370c:	d103      	bne.n	8003716 <__sseek+0x1a>
 800370e:	4a05      	ldr	r2, [pc, #20]	@ (8003724 <__sseek+0x28>)
 8003710:	4013      	ands	r3, r2
 8003712:	81a3      	strh	r3, [r4, #12]
 8003714:	bd70      	pop	{r4, r5, r6, pc}
 8003716:	2280      	movs	r2, #128	@ 0x80
 8003718:	0152      	lsls	r2, r2, #5
 800371a:	4313      	orrs	r3, r2
 800371c:	81a3      	strh	r3, [r4, #12]
 800371e:	6560      	str	r0, [r4, #84]	@ 0x54
 8003720:	e7f8      	b.n	8003714 <__sseek+0x18>
 8003722:	46c0      	nop			@ (mov r8, r8)
 8003724:	ffffefff 	.word	0xffffefff

08003728 <__sclose>:
 8003728:	b510      	push	{r4, lr}
 800372a:	230e      	movs	r3, #14
 800372c:	5ec9      	ldrsh	r1, [r1, r3]
 800372e:	f000 f87d 	bl	800382c <_close_r>
 8003732:	bd10      	pop	{r4, pc}

08003734 <memset>:
 8003734:	0003      	movs	r3, r0
 8003736:	1882      	adds	r2, r0, r2
 8003738:	4293      	cmp	r3, r2
 800373a:	d100      	bne.n	800373e <memset+0xa>
 800373c:	4770      	bx	lr
 800373e:	7019      	strb	r1, [r3, #0]
 8003740:	3301      	adds	r3, #1
 8003742:	e7f9      	b.n	8003738 <memset+0x4>

08003744 <strncpy>:
 8003744:	0003      	movs	r3, r0
 8003746:	b530      	push	{r4, r5, lr}
 8003748:	001d      	movs	r5, r3
 800374a:	2a00      	cmp	r2, #0
 800374c:	d006      	beq.n	800375c <strncpy+0x18>
 800374e:	780c      	ldrb	r4, [r1, #0]
 8003750:	3a01      	subs	r2, #1
 8003752:	3301      	adds	r3, #1
 8003754:	702c      	strb	r4, [r5, #0]
 8003756:	3101      	adds	r1, #1
 8003758:	2c00      	cmp	r4, #0
 800375a:	d1f5      	bne.n	8003748 <strncpy+0x4>
 800375c:	2100      	movs	r1, #0
 800375e:	189a      	adds	r2, r3, r2
 8003760:	4293      	cmp	r3, r2
 8003762:	d100      	bne.n	8003766 <strncpy+0x22>
 8003764:	bd30      	pop	{r4, r5, pc}
 8003766:	7019      	strb	r1, [r3, #0]
 8003768:	3301      	adds	r3, #1
 800376a:	e7f9      	b.n	8003760 <strncpy+0x1c>

0800376c <strtok>:
 800376c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800376e:	4b16      	ldr	r3, [pc, #88]	@ (80037c8 <strtok+0x5c>)
 8003770:	0005      	movs	r5, r0
 8003772:	681f      	ldr	r7, [r3, #0]
 8003774:	000e      	movs	r6, r1
 8003776:	6c7c      	ldr	r4, [r7, #68]	@ 0x44
 8003778:	2c00      	cmp	r4, #0
 800377a:	d11d      	bne.n	80037b8 <strtok+0x4c>
 800377c:	2050      	movs	r0, #80	@ 0x50
 800377e:	f000 f939 	bl	80039f4 <malloc>
 8003782:	1e02      	subs	r2, r0, #0
 8003784:	6478      	str	r0, [r7, #68]	@ 0x44
 8003786:	d104      	bne.n	8003792 <strtok+0x26>
 8003788:	215b      	movs	r1, #91	@ 0x5b
 800378a:	4b10      	ldr	r3, [pc, #64]	@ (80037cc <strtok+0x60>)
 800378c:	4810      	ldr	r0, [pc, #64]	@ (80037d0 <strtok+0x64>)
 800378e:	f000 f8c9 	bl	8003924 <__assert_func>
 8003792:	6004      	str	r4, [r0, #0]
 8003794:	6044      	str	r4, [r0, #4]
 8003796:	6084      	str	r4, [r0, #8]
 8003798:	60c4      	str	r4, [r0, #12]
 800379a:	6104      	str	r4, [r0, #16]
 800379c:	6144      	str	r4, [r0, #20]
 800379e:	6184      	str	r4, [r0, #24]
 80037a0:	6284      	str	r4, [r0, #40]	@ 0x28
 80037a2:	62c4      	str	r4, [r0, #44]	@ 0x2c
 80037a4:	6304      	str	r4, [r0, #48]	@ 0x30
 80037a6:	6344      	str	r4, [r0, #52]	@ 0x34
 80037a8:	6384      	str	r4, [r0, #56]	@ 0x38
 80037aa:	63c4      	str	r4, [r0, #60]	@ 0x3c
 80037ac:	6404      	str	r4, [r0, #64]	@ 0x40
 80037ae:	6444      	str	r4, [r0, #68]	@ 0x44
 80037b0:	6484      	str	r4, [r0, #72]	@ 0x48
 80037b2:	64c4      	str	r4, [r0, #76]	@ 0x4c
 80037b4:	7704      	strb	r4, [r0, #28]
 80037b6:	6244      	str	r4, [r0, #36]	@ 0x24
 80037b8:	0031      	movs	r1, r6
 80037ba:	0028      	movs	r0, r5
 80037bc:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80037be:	2301      	movs	r3, #1
 80037c0:	f000 f808 	bl	80037d4 <__strtok_r>
 80037c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80037c6:	46c0      	nop			@ (mov r8, r8)
 80037c8:	20000044 	.word	0x20000044
 80037cc:	08004d68 	.word	0x08004d68
 80037d0:	08004d7f 	.word	0x08004d7f

080037d4 <__strtok_r>:
 80037d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037d6:	1e04      	subs	r4, r0, #0
 80037d8:	d102      	bne.n	80037e0 <__strtok_r+0xc>
 80037da:	6814      	ldr	r4, [r2, #0]
 80037dc:	2c00      	cmp	r4, #0
 80037de:	d009      	beq.n	80037f4 <__strtok_r+0x20>
 80037e0:	0020      	movs	r0, r4
 80037e2:	000e      	movs	r6, r1
 80037e4:	7805      	ldrb	r5, [r0, #0]
 80037e6:	3401      	adds	r4, #1
 80037e8:	7837      	ldrb	r7, [r6, #0]
 80037ea:	2f00      	cmp	r7, #0
 80037ec:	d104      	bne.n	80037f8 <__strtok_r+0x24>
 80037ee:	2d00      	cmp	r5, #0
 80037f0:	d10d      	bne.n	800380e <__strtok_r+0x3a>
 80037f2:	6015      	str	r5, [r2, #0]
 80037f4:	2000      	movs	r0, #0
 80037f6:	e006      	b.n	8003806 <__strtok_r+0x32>
 80037f8:	3601      	adds	r6, #1
 80037fa:	42bd      	cmp	r5, r7
 80037fc:	d1f4      	bne.n	80037e8 <__strtok_r+0x14>
 80037fe:	2b00      	cmp	r3, #0
 8003800:	d1ee      	bne.n	80037e0 <__strtok_r+0xc>
 8003802:	6014      	str	r4, [r2, #0]
 8003804:	7003      	strb	r3, [r0, #0]
 8003806:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003808:	3301      	adds	r3, #1
 800380a:	2d00      	cmp	r5, #0
 800380c:	d102      	bne.n	8003814 <__strtok_r+0x40>
 800380e:	000b      	movs	r3, r1
 8003810:	7826      	ldrb	r6, [r4, #0]
 8003812:	3401      	adds	r4, #1
 8003814:	781d      	ldrb	r5, [r3, #0]
 8003816:	42ae      	cmp	r6, r5
 8003818:	d1f6      	bne.n	8003808 <__strtok_r+0x34>
 800381a:	2300      	movs	r3, #0
 800381c:	001d      	movs	r5, r3
 800381e:	429e      	cmp	r6, r3
 8003820:	d002      	beq.n	8003828 <__strtok_r+0x54>
 8003822:	0023      	movs	r3, r4
 8003824:	1e61      	subs	r1, r4, #1
 8003826:	700d      	strb	r5, [r1, #0]
 8003828:	6013      	str	r3, [r2, #0]
 800382a:	e7ec      	b.n	8003806 <__strtok_r+0x32>

0800382c <_close_r>:
 800382c:	2300      	movs	r3, #0
 800382e:	b570      	push	{r4, r5, r6, lr}
 8003830:	4d06      	ldr	r5, [pc, #24]	@ (800384c <_close_r+0x20>)
 8003832:	0004      	movs	r4, r0
 8003834:	0008      	movs	r0, r1
 8003836:	602b      	str	r3, [r5, #0]
 8003838:	f7fd f9c0 	bl	8000bbc <_close>
 800383c:	1c43      	adds	r3, r0, #1
 800383e:	d103      	bne.n	8003848 <_close_r+0x1c>
 8003840:	682b      	ldr	r3, [r5, #0]
 8003842:	2b00      	cmp	r3, #0
 8003844:	d000      	beq.n	8003848 <_close_r+0x1c>
 8003846:	6023      	str	r3, [r4, #0]
 8003848:	bd70      	pop	{r4, r5, r6, pc}
 800384a:	46c0      	nop			@ (mov r8, r8)
 800384c:	200006b4 	.word	0x200006b4

08003850 <_lseek_r>:
 8003850:	b570      	push	{r4, r5, r6, lr}
 8003852:	0004      	movs	r4, r0
 8003854:	0008      	movs	r0, r1
 8003856:	0011      	movs	r1, r2
 8003858:	001a      	movs	r2, r3
 800385a:	2300      	movs	r3, #0
 800385c:	4d05      	ldr	r5, [pc, #20]	@ (8003874 <_lseek_r+0x24>)
 800385e:	602b      	str	r3, [r5, #0]
 8003860:	f7fd f9cd 	bl	8000bfe <_lseek>
 8003864:	1c43      	adds	r3, r0, #1
 8003866:	d103      	bne.n	8003870 <_lseek_r+0x20>
 8003868:	682b      	ldr	r3, [r5, #0]
 800386a:	2b00      	cmp	r3, #0
 800386c:	d000      	beq.n	8003870 <_lseek_r+0x20>
 800386e:	6023      	str	r3, [r4, #0]
 8003870:	bd70      	pop	{r4, r5, r6, pc}
 8003872:	46c0      	nop			@ (mov r8, r8)
 8003874:	200006b4 	.word	0x200006b4

08003878 <_read_r>:
 8003878:	b570      	push	{r4, r5, r6, lr}
 800387a:	0004      	movs	r4, r0
 800387c:	0008      	movs	r0, r1
 800387e:	0011      	movs	r1, r2
 8003880:	001a      	movs	r2, r3
 8003882:	2300      	movs	r3, #0
 8003884:	4d05      	ldr	r5, [pc, #20]	@ (800389c <_read_r+0x24>)
 8003886:	602b      	str	r3, [r5, #0]
 8003888:	f7fd f95f 	bl	8000b4a <_read>
 800388c:	1c43      	adds	r3, r0, #1
 800388e:	d103      	bne.n	8003898 <_read_r+0x20>
 8003890:	682b      	ldr	r3, [r5, #0]
 8003892:	2b00      	cmp	r3, #0
 8003894:	d000      	beq.n	8003898 <_read_r+0x20>
 8003896:	6023      	str	r3, [r4, #0]
 8003898:	bd70      	pop	{r4, r5, r6, pc}
 800389a:	46c0      	nop			@ (mov r8, r8)
 800389c:	200006b4 	.word	0x200006b4

080038a0 <_write_r>:
 80038a0:	b570      	push	{r4, r5, r6, lr}
 80038a2:	0004      	movs	r4, r0
 80038a4:	0008      	movs	r0, r1
 80038a6:	0011      	movs	r1, r2
 80038a8:	001a      	movs	r2, r3
 80038aa:	2300      	movs	r3, #0
 80038ac:	4d05      	ldr	r5, [pc, #20]	@ (80038c4 <_write_r+0x24>)
 80038ae:	602b      	str	r3, [r5, #0]
 80038b0:	f7fd f968 	bl	8000b84 <_write>
 80038b4:	1c43      	adds	r3, r0, #1
 80038b6:	d103      	bne.n	80038c0 <_write_r+0x20>
 80038b8:	682b      	ldr	r3, [r5, #0]
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d000      	beq.n	80038c0 <_write_r+0x20>
 80038be:	6023      	str	r3, [r4, #0]
 80038c0:	bd70      	pop	{r4, r5, r6, pc}
 80038c2:	46c0      	nop			@ (mov r8, r8)
 80038c4:	200006b4 	.word	0x200006b4

080038c8 <__errno>:
 80038c8:	4b01      	ldr	r3, [pc, #4]	@ (80038d0 <__errno+0x8>)
 80038ca:	6818      	ldr	r0, [r3, #0]
 80038cc:	4770      	bx	lr
 80038ce:	46c0      	nop			@ (mov r8, r8)
 80038d0:	20000044 	.word	0x20000044

080038d4 <__libc_init_array>:
 80038d4:	b570      	push	{r4, r5, r6, lr}
 80038d6:	2600      	movs	r6, #0
 80038d8:	4c0c      	ldr	r4, [pc, #48]	@ (800390c <__libc_init_array+0x38>)
 80038da:	4d0d      	ldr	r5, [pc, #52]	@ (8003910 <__libc_init_array+0x3c>)
 80038dc:	1b64      	subs	r4, r4, r5
 80038de:	10a4      	asrs	r4, r4, #2
 80038e0:	42a6      	cmp	r6, r4
 80038e2:	d109      	bne.n	80038f8 <__libc_init_array+0x24>
 80038e4:	2600      	movs	r6, #0
 80038e6:	f000 fe63 	bl	80045b0 <_init>
 80038ea:	4c0a      	ldr	r4, [pc, #40]	@ (8003914 <__libc_init_array+0x40>)
 80038ec:	4d0a      	ldr	r5, [pc, #40]	@ (8003918 <__libc_init_array+0x44>)
 80038ee:	1b64      	subs	r4, r4, r5
 80038f0:	10a4      	asrs	r4, r4, #2
 80038f2:	42a6      	cmp	r6, r4
 80038f4:	d105      	bne.n	8003902 <__libc_init_array+0x2e>
 80038f6:	bd70      	pop	{r4, r5, r6, pc}
 80038f8:	00b3      	lsls	r3, r6, #2
 80038fa:	58eb      	ldr	r3, [r5, r3]
 80038fc:	4798      	blx	r3
 80038fe:	3601      	adds	r6, #1
 8003900:	e7ee      	b.n	80038e0 <__libc_init_array+0xc>
 8003902:	00b3      	lsls	r3, r6, #2
 8003904:	58eb      	ldr	r3, [r5, r3]
 8003906:	4798      	blx	r3
 8003908:	3601      	adds	r6, #1
 800390a:	e7f2      	b.n	80038f2 <__libc_init_array+0x1e>
 800390c:	08004e48 	.word	0x08004e48
 8003910:	08004e48 	.word	0x08004e48
 8003914:	08004e4c 	.word	0x08004e4c
 8003918:	08004e48 	.word	0x08004e48

0800391c <__retarget_lock_init_recursive>:
 800391c:	4770      	bx	lr

0800391e <__retarget_lock_acquire_recursive>:
 800391e:	4770      	bx	lr

08003920 <__retarget_lock_release_recursive>:
 8003920:	4770      	bx	lr
	...

08003924 <__assert_func>:
 8003924:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003926:	0014      	movs	r4, r2
 8003928:	001a      	movs	r2, r3
 800392a:	4b09      	ldr	r3, [pc, #36]	@ (8003950 <__assert_func+0x2c>)
 800392c:	0005      	movs	r5, r0
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	000e      	movs	r6, r1
 8003932:	68d8      	ldr	r0, [r3, #12]
 8003934:	4b07      	ldr	r3, [pc, #28]	@ (8003954 <__assert_func+0x30>)
 8003936:	2c00      	cmp	r4, #0
 8003938:	d101      	bne.n	800393e <__assert_func+0x1a>
 800393a:	4b07      	ldr	r3, [pc, #28]	@ (8003958 <__assert_func+0x34>)
 800393c:	001c      	movs	r4, r3
 800393e:	4907      	ldr	r1, [pc, #28]	@ (800395c <__assert_func+0x38>)
 8003940:	9301      	str	r3, [sp, #4]
 8003942:	9402      	str	r4, [sp, #8]
 8003944:	002b      	movs	r3, r5
 8003946:	9600      	str	r6, [sp, #0]
 8003948:	f000 f9c2 	bl	8003cd0 <fiprintf>
 800394c:	f000 f9e2 	bl	8003d14 <abort>
 8003950:	20000044 	.word	0x20000044
 8003954:	08004dd9 	.word	0x08004dd9
 8003958:	08004e14 	.word	0x08004e14
 800395c:	08004de6 	.word	0x08004de6

08003960 <_free_r>:
 8003960:	b570      	push	{r4, r5, r6, lr}
 8003962:	0005      	movs	r5, r0
 8003964:	1e0c      	subs	r4, r1, #0
 8003966:	d010      	beq.n	800398a <_free_r+0x2a>
 8003968:	3c04      	subs	r4, #4
 800396a:	6823      	ldr	r3, [r4, #0]
 800396c:	2b00      	cmp	r3, #0
 800396e:	da00      	bge.n	8003972 <_free_r+0x12>
 8003970:	18e4      	adds	r4, r4, r3
 8003972:	0028      	movs	r0, r5
 8003974:	f000 f8ea 	bl	8003b4c <__malloc_lock>
 8003978:	4a1d      	ldr	r2, [pc, #116]	@ (80039f0 <_free_r+0x90>)
 800397a:	6813      	ldr	r3, [r2, #0]
 800397c:	2b00      	cmp	r3, #0
 800397e:	d105      	bne.n	800398c <_free_r+0x2c>
 8003980:	6063      	str	r3, [r4, #4]
 8003982:	6014      	str	r4, [r2, #0]
 8003984:	0028      	movs	r0, r5
 8003986:	f000 f8e9 	bl	8003b5c <__malloc_unlock>
 800398a:	bd70      	pop	{r4, r5, r6, pc}
 800398c:	42a3      	cmp	r3, r4
 800398e:	d908      	bls.n	80039a2 <_free_r+0x42>
 8003990:	6820      	ldr	r0, [r4, #0]
 8003992:	1821      	adds	r1, r4, r0
 8003994:	428b      	cmp	r3, r1
 8003996:	d1f3      	bne.n	8003980 <_free_r+0x20>
 8003998:	6819      	ldr	r1, [r3, #0]
 800399a:	685b      	ldr	r3, [r3, #4]
 800399c:	1809      	adds	r1, r1, r0
 800399e:	6021      	str	r1, [r4, #0]
 80039a0:	e7ee      	b.n	8003980 <_free_r+0x20>
 80039a2:	001a      	movs	r2, r3
 80039a4:	685b      	ldr	r3, [r3, #4]
 80039a6:	2b00      	cmp	r3, #0
 80039a8:	d001      	beq.n	80039ae <_free_r+0x4e>
 80039aa:	42a3      	cmp	r3, r4
 80039ac:	d9f9      	bls.n	80039a2 <_free_r+0x42>
 80039ae:	6811      	ldr	r1, [r2, #0]
 80039b0:	1850      	adds	r0, r2, r1
 80039b2:	42a0      	cmp	r0, r4
 80039b4:	d10b      	bne.n	80039ce <_free_r+0x6e>
 80039b6:	6820      	ldr	r0, [r4, #0]
 80039b8:	1809      	adds	r1, r1, r0
 80039ba:	1850      	adds	r0, r2, r1
 80039bc:	6011      	str	r1, [r2, #0]
 80039be:	4283      	cmp	r3, r0
 80039c0:	d1e0      	bne.n	8003984 <_free_r+0x24>
 80039c2:	6818      	ldr	r0, [r3, #0]
 80039c4:	685b      	ldr	r3, [r3, #4]
 80039c6:	1841      	adds	r1, r0, r1
 80039c8:	6011      	str	r1, [r2, #0]
 80039ca:	6053      	str	r3, [r2, #4]
 80039cc:	e7da      	b.n	8003984 <_free_r+0x24>
 80039ce:	42a0      	cmp	r0, r4
 80039d0:	d902      	bls.n	80039d8 <_free_r+0x78>
 80039d2:	230c      	movs	r3, #12
 80039d4:	602b      	str	r3, [r5, #0]
 80039d6:	e7d5      	b.n	8003984 <_free_r+0x24>
 80039d8:	6820      	ldr	r0, [r4, #0]
 80039da:	1821      	adds	r1, r4, r0
 80039dc:	428b      	cmp	r3, r1
 80039de:	d103      	bne.n	80039e8 <_free_r+0x88>
 80039e0:	6819      	ldr	r1, [r3, #0]
 80039e2:	685b      	ldr	r3, [r3, #4]
 80039e4:	1809      	adds	r1, r1, r0
 80039e6:	6021      	str	r1, [r4, #0]
 80039e8:	6063      	str	r3, [r4, #4]
 80039ea:	6054      	str	r4, [r2, #4]
 80039ec:	e7ca      	b.n	8003984 <_free_r+0x24>
 80039ee:	46c0      	nop			@ (mov r8, r8)
 80039f0:	200006c0 	.word	0x200006c0

080039f4 <malloc>:
 80039f4:	b510      	push	{r4, lr}
 80039f6:	4b03      	ldr	r3, [pc, #12]	@ (8003a04 <malloc+0x10>)
 80039f8:	0001      	movs	r1, r0
 80039fa:	6818      	ldr	r0, [r3, #0]
 80039fc:	f000 f826 	bl	8003a4c <_malloc_r>
 8003a00:	bd10      	pop	{r4, pc}
 8003a02:	46c0      	nop			@ (mov r8, r8)
 8003a04:	20000044 	.word	0x20000044

08003a08 <sbrk_aligned>:
 8003a08:	b570      	push	{r4, r5, r6, lr}
 8003a0a:	4e0f      	ldr	r6, [pc, #60]	@ (8003a48 <sbrk_aligned+0x40>)
 8003a0c:	000d      	movs	r5, r1
 8003a0e:	6831      	ldr	r1, [r6, #0]
 8003a10:	0004      	movs	r4, r0
 8003a12:	2900      	cmp	r1, #0
 8003a14:	d102      	bne.n	8003a1c <sbrk_aligned+0x14>
 8003a16:	f000 f96b 	bl	8003cf0 <_sbrk_r>
 8003a1a:	6030      	str	r0, [r6, #0]
 8003a1c:	0029      	movs	r1, r5
 8003a1e:	0020      	movs	r0, r4
 8003a20:	f000 f966 	bl	8003cf0 <_sbrk_r>
 8003a24:	1c43      	adds	r3, r0, #1
 8003a26:	d103      	bne.n	8003a30 <sbrk_aligned+0x28>
 8003a28:	2501      	movs	r5, #1
 8003a2a:	426d      	negs	r5, r5
 8003a2c:	0028      	movs	r0, r5
 8003a2e:	bd70      	pop	{r4, r5, r6, pc}
 8003a30:	2303      	movs	r3, #3
 8003a32:	1cc5      	adds	r5, r0, #3
 8003a34:	439d      	bics	r5, r3
 8003a36:	42a8      	cmp	r0, r5
 8003a38:	d0f8      	beq.n	8003a2c <sbrk_aligned+0x24>
 8003a3a:	1a29      	subs	r1, r5, r0
 8003a3c:	0020      	movs	r0, r4
 8003a3e:	f000 f957 	bl	8003cf0 <_sbrk_r>
 8003a42:	3001      	adds	r0, #1
 8003a44:	d1f2      	bne.n	8003a2c <sbrk_aligned+0x24>
 8003a46:	e7ef      	b.n	8003a28 <sbrk_aligned+0x20>
 8003a48:	200006bc 	.word	0x200006bc

08003a4c <_malloc_r>:
 8003a4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003a4e:	2203      	movs	r2, #3
 8003a50:	1ccb      	adds	r3, r1, #3
 8003a52:	4393      	bics	r3, r2
 8003a54:	3308      	adds	r3, #8
 8003a56:	0005      	movs	r5, r0
 8003a58:	001f      	movs	r7, r3
 8003a5a:	2b0c      	cmp	r3, #12
 8003a5c:	d234      	bcs.n	8003ac8 <_malloc_r+0x7c>
 8003a5e:	270c      	movs	r7, #12
 8003a60:	42b9      	cmp	r1, r7
 8003a62:	d833      	bhi.n	8003acc <_malloc_r+0x80>
 8003a64:	0028      	movs	r0, r5
 8003a66:	f000 f871 	bl	8003b4c <__malloc_lock>
 8003a6a:	4e37      	ldr	r6, [pc, #220]	@ (8003b48 <_malloc_r+0xfc>)
 8003a6c:	6833      	ldr	r3, [r6, #0]
 8003a6e:	001c      	movs	r4, r3
 8003a70:	2c00      	cmp	r4, #0
 8003a72:	d12f      	bne.n	8003ad4 <_malloc_r+0x88>
 8003a74:	0039      	movs	r1, r7
 8003a76:	0028      	movs	r0, r5
 8003a78:	f7ff ffc6 	bl	8003a08 <sbrk_aligned>
 8003a7c:	0004      	movs	r4, r0
 8003a7e:	1c43      	adds	r3, r0, #1
 8003a80:	d15f      	bne.n	8003b42 <_malloc_r+0xf6>
 8003a82:	6834      	ldr	r4, [r6, #0]
 8003a84:	9400      	str	r4, [sp, #0]
 8003a86:	9b00      	ldr	r3, [sp, #0]
 8003a88:	2b00      	cmp	r3, #0
 8003a8a:	d14a      	bne.n	8003b22 <_malloc_r+0xd6>
 8003a8c:	2c00      	cmp	r4, #0
 8003a8e:	d052      	beq.n	8003b36 <_malloc_r+0xea>
 8003a90:	6823      	ldr	r3, [r4, #0]
 8003a92:	0028      	movs	r0, r5
 8003a94:	18e3      	adds	r3, r4, r3
 8003a96:	9900      	ldr	r1, [sp, #0]
 8003a98:	9301      	str	r3, [sp, #4]
 8003a9a:	f000 f929 	bl	8003cf0 <_sbrk_r>
 8003a9e:	9b01      	ldr	r3, [sp, #4]
 8003aa0:	4283      	cmp	r3, r0
 8003aa2:	d148      	bne.n	8003b36 <_malloc_r+0xea>
 8003aa4:	6823      	ldr	r3, [r4, #0]
 8003aa6:	0028      	movs	r0, r5
 8003aa8:	1aff      	subs	r7, r7, r3
 8003aaa:	0039      	movs	r1, r7
 8003aac:	f7ff ffac 	bl	8003a08 <sbrk_aligned>
 8003ab0:	3001      	adds	r0, #1
 8003ab2:	d040      	beq.n	8003b36 <_malloc_r+0xea>
 8003ab4:	6823      	ldr	r3, [r4, #0]
 8003ab6:	19db      	adds	r3, r3, r7
 8003ab8:	6023      	str	r3, [r4, #0]
 8003aba:	6833      	ldr	r3, [r6, #0]
 8003abc:	685a      	ldr	r2, [r3, #4]
 8003abe:	2a00      	cmp	r2, #0
 8003ac0:	d133      	bne.n	8003b2a <_malloc_r+0xde>
 8003ac2:	9b00      	ldr	r3, [sp, #0]
 8003ac4:	6033      	str	r3, [r6, #0]
 8003ac6:	e019      	b.n	8003afc <_malloc_r+0xb0>
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	dac9      	bge.n	8003a60 <_malloc_r+0x14>
 8003acc:	230c      	movs	r3, #12
 8003ace:	602b      	str	r3, [r5, #0]
 8003ad0:	2000      	movs	r0, #0
 8003ad2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003ad4:	6821      	ldr	r1, [r4, #0]
 8003ad6:	1bc9      	subs	r1, r1, r7
 8003ad8:	d420      	bmi.n	8003b1c <_malloc_r+0xd0>
 8003ada:	290b      	cmp	r1, #11
 8003adc:	d90a      	bls.n	8003af4 <_malloc_r+0xa8>
 8003ade:	19e2      	adds	r2, r4, r7
 8003ae0:	6027      	str	r7, [r4, #0]
 8003ae2:	42a3      	cmp	r3, r4
 8003ae4:	d104      	bne.n	8003af0 <_malloc_r+0xa4>
 8003ae6:	6032      	str	r2, [r6, #0]
 8003ae8:	6863      	ldr	r3, [r4, #4]
 8003aea:	6011      	str	r1, [r2, #0]
 8003aec:	6053      	str	r3, [r2, #4]
 8003aee:	e005      	b.n	8003afc <_malloc_r+0xb0>
 8003af0:	605a      	str	r2, [r3, #4]
 8003af2:	e7f9      	b.n	8003ae8 <_malloc_r+0x9c>
 8003af4:	6862      	ldr	r2, [r4, #4]
 8003af6:	42a3      	cmp	r3, r4
 8003af8:	d10e      	bne.n	8003b18 <_malloc_r+0xcc>
 8003afa:	6032      	str	r2, [r6, #0]
 8003afc:	0028      	movs	r0, r5
 8003afe:	f000 f82d 	bl	8003b5c <__malloc_unlock>
 8003b02:	0020      	movs	r0, r4
 8003b04:	2207      	movs	r2, #7
 8003b06:	300b      	adds	r0, #11
 8003b08:	1d23      	adds	r3, r4, #4
 8003b0a:	4390      	bics	r0, r2
 8003b0c:	1ac2      	subs	r2, r0, r3
 8003b0e:	4298      	cmp	r0, r3
 8003b10:	d0df      	beq.n	8003ad2 <_malloc_r+0x86>
 8003b12:	1a1b      	subs	r3, r3, r0
 8003b14:	50a3      	str	r3, [r4, r2]
 8003b16:	e7dc      	b.n	8003ad2 <_malloc_r+0x86>
 8003b18:	605a      	str	r2, [r3, #4]
 8003b1a:	e7ef      	b.n	8003afc <_malloc_r+0xb0>
 8003b1c:	0023      	movs	r3, r4
 8003b1e:	6864      	ldr	r4, [r4, #4]
 8003b20:	e7a6      	b.n	8003a70 <_malloc_r+0x24>
 8003b22:	9c00      	ldr	r4, [sp, #0]
 8003b24:	6863      	ldr	r3, [r4, #4]
 8003b26:	9300      	str	r3, [sp, #0]
 8003b28:	e7ad      	b.n	8003a86 <_malloc_r+0x3a>
 8003b2a:	001a      	movs	r2, r3
 8003b2c:	685b      	ldr	r3, [r3, #4]
 8003b2e:	42a3      	cmp	r3, r4
 8003b30:	d1fb      	bne.n	8003b2a <_malloc_r+0xde>
 8003b32:	2300      	movs	r3, #0
 8003b34:	e7da      	b.n	8003aec <_malloc_r+0xa0>
 8003b36:	230c      	movs	r3, #12
 8003b38:	0028      	movs	r0, r5
 8003b3a:	602b      	str	r3, [r5, #0]
 8003b3c:	f000 f80e 	bl	8003b5c <__malloc_unlock>
 8003b40:	e7c6      	b.n	8003ad0 <_malloc_r+0x84>
 8003b42:	6007      	str	r7, [r0, #0]
 8003b44:	e7da      	b.n	8003afc <_malloc_r+0xb0>
 8003b46:	46c0      	nop			@ (mov r8, r8)
 8003b48:	200006c0 	.word	0x200006c0

08003b4c <__malloc_lock>:
 8003b4c:	b510      	push	{r4, lr}
 8003b4e:	4802      	ldr	r0, [pc, #8]	@ (8003b58 <__malloc_lock+0xc>)
 8003b50:	f7ff fee5 	bl	800391e <__retarget_lock_acquire_recursive>
 8003b54:	bd10      	pop	{r4, pc}
 8003b56:	46c0      	nop			@ (mov r8, r8)
 8003b58:	200006b8 	.word	0x200006b8

08003b5c <__malloc_unlock>:
 8003b5c:	b510      	push	{r4, lr}
 8003b5e:	4802      	ldr	r0, [pc, #8]	@ (8003b68 <__malloc_unlock+0xc>)
 8003b60:	f7ff fede 	bl	8003920 <__retarget_lock_release_recursive>
 8003b64:	bd10      	pop	{r4, pc}
 8003b66:	46c0      	nop			@ (mov r8, r8)
 8003b68:	200006b8 	.word	0x200006b8

08003b6c <__sflush_r>:
 8003b6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003b6e:	220c      	movs	r2, #12
 8003b70:	5e8b      	ldrsh	r3, [r1, r2]
 8003b72:	0005      	movs	r5, r0
 8003b74:	000c      	movs	r4, r1
 8003b76:	071a      	lsls	r2, r3, #28
 8003b78:	d456      	bmi.n	8003c28 <__sflush_r+0xbc>
 8003b7a:	684a      	ldr	r2, [r1, #4]
 8003b7c:	2a00      	cmp	r2, #0
 8003b7e:	dc02      	bgt.n	8003b86 <__sflush_r+0x1a>
 8003b80:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8003b82:	2a00      	cmp	r2, #0
 8003b84:	dd4e      	ble.n	8003c24 <__sflush_r+0xb8>
 8003b86:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8003b88:	2f00      	cmp	r7, #0
 8003b8a:	d04b      	beq.n	8003c24 <__sflush_r+0xb8>
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	2080      	movs	r0, #128	@ 0x80
 8003b90:	682e      	ldr	r6, [r5, #0]
 8003b92:	602a      	str	r2, [r5, #0]
 8003b94:	001a      	movs	r2, r3
 8003b96:	0140      	lsls	r0, r0, #5
 8003b98:	6a21      	ldr	r1, [r4, #32]
 8003b9a:	4002      	ands	r2, r0
 8003b9c:	4203      	tst	r3, r0
 8003b9e:	d033      	beq.n	8003c08 <__sflush_r+0x9c>
 8003ba0:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003ba2:	89a3      	ldrh	r3, [r4, #12]
 8003ba4:	075b      	lsls	r3, r3, #29
 8003ba6:	d506      	bpl.n	8003bb6 <__sflush_r+0x4a>
 8003ba8:	6863      	ldr	r3, [r4, #4]
 8003baa:	1ad2      	subs	r2, r2, r3
 8003bac:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	d001      	beq.n	8003bb6 <__sflush_r+0x4a>
 8003bb2:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003bb4:	1ad2      	subs	r2, r2, r3
 8003bb6:	2300      	movs	r3, #0
 8003bb8:	0028      	movs	r0, r5
 8003bba:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8003bbc:	6a21      	ldr	r1, [r4, #32]
 8003bbe:	47b8      	blx	r7
 8003bc0:	89a2      	ldrh	r2, [r4, #12]
 8003bc2:	1c43      	adds	r3, r0, #1
 8003bc4:	d106      	bne.n	8003bd4 <__sflush_r+0x68>
 8003bc6:	6829      	ldr	r1, [r5, #0]
 8003bc8:	291d      	cmp	r1, #29
 8003bca:	d846      	bhi.n	8003c5a <__sflush_r+0xee>
 8003bcc:	4b29      	ldr	r3, [pc, #164]	@ (8003c74 <__sflush_r+0x108>)
 8003bce:	410b      	asrs	r3, r1
 8003bd0:	07db      	lsls	r3, r3, #31
 8003bd2:	d442      	bmi.n	8003c5a <__sflush_r+0xee>
 8003bd4:	2300      	movs	r3, #0
 8003bd6:	6063      	str	r3, [r4, #4]
 8003bd8:	6923      	ldr	r3, [r4, #16]
 8003bda:	6023      	str	r3, [r4, #0]
 8003bdc:	04d2      	lsls	r2, r2, #19
 8003bde:	d505      	bpl.n	8003bec <__sflush_r+0x80>
 8003be0:	1c43      	adds	r3, r0, #1
 8003be2:	d102      	bne.n	8003bea <__sflush_r+0x7e>
 8003be4:	682b      	ldr	r3, [r5, #0]
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d100      	bne.n	8003bec <__sflush_r+0x80>
 8003bea:	6560      	str	r0, [r4, #84]	@ 0x54
 8003bec:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003bee:	602e      	str	r6, [r5, #0]
 8003bf0:	2900      	cmp	r1, #0
 8003bf2:	d017      	beq.n	8003c24 <__sflush_r+0xb8>
 8003bf4:	0023      	movs	r3, r4
 8003bf6:	3344      	adds	r3, #68	@ 0x44
 8003bf8:	4299      	cmp	r1, r3
 8003bfa:	d002      	beq.n	8003c02 <__sflush_r+0x96>
 8003bfc:	0028      	movs	r0, r5
 8003bfe:	f7ff feaf 	bl	8003960 <_free_r>
 8003c02:	2300      	movs	r3, #0
 8003c04:	6363      	str	r3, [r4, #52]	@ 0x34
 8003c06:	e00d      	b.n	8003c24 <__sflush_r+0xb8>
 8003c08:	2301      	movs	r3, #1
 8003c0a:	0028      	movs	r0, r5
 8003c0c:	47b8      	blx	r7
 8003c0e:	0002      	movs	r2, r0
 8003c10:	1c43      	adds	r3, r0, #1
 8003c12:	d1c6      	bne.n	8003ba2 <__sflush_r+0x36>
 8003c14:	682b      	ldr	r3, [r5, #0]
 8003c16:	2b00      	cmp	r3, #0
 8003c18:	d0c3      	beq.n	8003ba2 <__sflush_r+0x36>
 8003c1a:	2b1d      	cmp	r3, #29
 8003c1c:	d001      	beq.n	8003c22 <__sflush_r+0xb6>
 8003c1e:	2b16      	cmp	r3, #22
 8003c20:	d11a      	bne.n	8003c58 <__sflush_r+0xec>
 8003c22:	602e      	str	r6, [r5, #0]
 8003c24:	2000      	movs	r0, #0
 8003c26:	e01e      	b.n	8003c66 <__sflush_r+0xfa>
 8003c28:	690e      	ldr	r6, [r1, #16]
 8003c2a:	2e00      	cmp	r6, #0
 8003c2c:	d0fa      	beq.n	8003c24 <__sflush_r+0xb8>
 8003c2e:	680f      	ldr	r7, [r1, #0]
 8003c30:	600e      	str	r6, [r1, #0]
 8003c32:	1bba      	subs	r2, r7, r6
 8003c34:	9201      	str	r2, [sp, #4]
 8003c36:	2200      	movs	r2, #0
 8003c38:	079b      	lsls	r3, r3, #30
 8003c3a:	d100      	bne.n	8003c3e <__sflush_r+0xd2>
 8003c3c:	694a      	ldr	r2, [r1, #20]
 8003c3e:	60a2      	str	r2, [r4, #8]
 8003c40:	9b01      	ldr	r3, [sp, #4]
 8003c42:	2b00      	cmp	r3, #0
 8003c44:	ddee      	ble.n	8003c24 <__sflush_r+0xb8>
 8003c46:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8003c48:	0032      	movs	r2, r6
 8003c4a:	001f      	movs	r7, r3
 8003c4c:	0028      	movs	r0, r5
 8003c4e:	9b01      	ldr	r3, [sp, #4]
 8003c50:	6a21      	ldr	r1, [r4, #32]
 8003c52:	47b8      	blx	r7
 8003c54:	2800      	cmp	r0, #0
 8003c56:	dc07      	bgt.n	8003c68 <__sflush_r+0xfc>
 8003c58:	89a2      	ldrh	r2, [r4, #12]
 8003c5a:	2340      	movs	r3, #64	@ 0x40
 8003c5c:	2001      	movs	r0, #1
 8003c5e:	4313      	orrs	r3, r2
 8003c60:	b21b      	sxth	r3, r3
 8003c62:	81a3      	strh	r3, [r4, #12]
 8003c64:	4240      	negs	r0, r0
 8003c66:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8003c68:	9b01      	ldr	r3, [sp, #4]
 8003c6a:	1836      	adds	r6, r6, r0
 8003c6c:	1a1b      	subs	r3, r3, r0
 8003c6e:	9301      	str	r3, [sp, #4]
 8003c70:	e7e6      	b.n	8003c40 <__sflush_r+0xd4>
 8003c72:	46c0      	nop			@ (mov r8, r8)
 8003c74:	dfbffffe 	.word	0xdfbffffe

08003c78 <_fflush_r>:
 8003c78:	690b      	ldr	r3, [r1, #16]
 8003c7a:	b570      	push	{r4, r5, r6, lr}
 8003c7c:	0005      	movs	r5, r0
 8003c7e:	000c      	movs	r4, r1
 8003c80:	2b00      	cmp	r3, #0
 8003c82:	d102      	bne.n	8003c8a <_fflush_r+0x12>
 8003c84:	2500      	movs	r5, #0
 8003c86:	0028      	movs	r0, r5
 8003c88:	bd70      	pop	{r4, r5, r6, pc}
 8003c8a:	2800      	cmp	r0, #0
 8003c8c:	d004      	beq.n	8003c98 <_fflush_r+0x20>
 8003c8e:	6a03      	ldr	r3, [r0, #32]
 8003c90:	2b00      	cmp	r3, #0
 8003c92:	d101      	bne.n	8003c98 <_fflush_r+0x20>
 8003c94:	f7ff fcce 	bl	8003634 <__sinit>
 8003c98:	220c      	movs	r2, #12
 8003c9a:	5ea3      	ldrsh	r3, [r4, r2]
 8003c9c:	2b00      	cmp	r3, #0
 8003c9e:	d0f1      	beq.n	8003c84 <_fflush_r+0xc>
 8003ca0:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003ca2:	07d2      	lsls	r2, r2, #31
 8003ca4:	d404      	bmi.n	8003cb0 <_fflush_r+0x38>
 8003ca6:	059b      	lsls	r3, r3, #22
 8003ca8:	d402      	bmi.n	8003cb0 <_fflush_r+0x38>
 8003caa:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003cac:	f7ff fe37 	bl	800391e <__retarget_lock_acquire_recursive>
 8003cb0:	0028      	movs	r0, r5
 8003cb2:	0021      	movs	r1, r4
 8003cb4:	f7ff ff5a 	bl	8003b6c <__sflush_r>
 8003cb8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003cba:	0005      	movs	r5, r0
 8003cbc:	07db      	lsls	r3, r3, #31
 8003cbe:	d4e2      	bmi.n	8003c86 <_fflush_r+0xe>
 8003cc0:	89a3      	ldrh	r3, [r4, #12]
 8003cc2:	059b      	lsls	r3, r3, #22
 8003cc4:	d4df      	bmi.n	8003c86 <_fflush_r+0xe>
 8003cc6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003cc8:	f7ff fe2a 	bl	8003920 <__retarget_lock_release_recursive>
 8003ccc:	e7db      	b.n	8003c86 <_fflush_r+0xe>
	...

08003cd0 <fiprintf>:
 8003cd0:	b40e      	push	{r1, r2, r3}
 8003cd2:	b517      	push	{r0, r1, r2, r4, lr}
 8003cd4:	4c05      	ldr	r4, [pc, #20]	@ (8003cec <fiprintf+0x1c>)
 8003cd6:	ab05      	add	r3, sp, #20
 8003cd8:	cb04      	ldmia	r3!, {r2}
 8003cda:	0001      	movs	r1, r0
 8003cdc:	6820      	ldr	r0, [r4, #0]
 8003cde:	9301      	str	r3, [sp, #4]
 8003ce0:	f000 f846 	bl	8003d70 <_vfiprintf_r>
 8003ce4:	bc1e      	pop	{r1, r2, r3, r4}
 8003ce6:	bc08      	pop	{r3}
 8003ce8:	b003      	add	sp, #12
 8003cea:	4718      	bx	r3
 8003cec:	20000044 	.word	0x20000044

08003cf0 <_sbrk_r>:
 8003cf0:	2300      	movs	r3, #0
 8003cf2:	b570      	push	{r4, r5, r6, lr}
 8003cf4:	4d06      	ldr	r5, [pc, #24]	@ (8003d10 <_sbrk_r+0x20>)
 8003cf6:	0004      	movs	r4, r0
 8003cf8:	0008      	movs	r0, r1
 8003cfa:	602b      	str	r3, [r5, #0]
 8003cfc:	f7fc ff8a 	bl	8000c14 <_sbrk>
 8003d00:	1c43      	adds	r3, r0, #1
 8003d02:	d103      	bne.n	8003d0c <_sbrk_r+0x1c>
 8003d04:	682b      	ldr	r3, [r5, #0]
 8003d06:	2b00      	cmp	r3, #0
 8003d08:	d000      	beq.n	8003d0c <_sbrk_r+0x1c>
 8003d0a:	6023      	str	r3, [r4, #0]
 8003d0c:	bd70      	pop	{r4, r5, r6, pc}
 8003d0e:	46c0      	nop			@ (mov r8, r8)
 8003d10:	200006b4 	.word	0x200006b4

08003d14 <abort>:
 8003d14:	2006      	movs	r0, #6
 8003d16:	b510      	push	{r4, lr}
 8003d18:	f000 fb8e 	bl	8004438 <raise>
 8003d1c:	2001      	movs	r0, #1
 8003d1e:	f7fc ff07 	bl	8000b30 <_exit>

08003d22 <__sfputc_r>:
 8003d22:	6893      	ldr	r3, [r2, #8]
 8003d24:	b510      	push	{r4, lr}
 8003d26:	3b01      	subs	r3, #1
 8003d28:	6093      	str	r3, [r2, #8]
 8003d2a:	2b00      	cmp	r3, #0
 8003d2c:	da04      	bge.n	8003d38 <__sfputc_r+0x16>
 8003d2e:	6994      	ldr	r4, [r2, #24]
 8003d30:	42a3      	cmp	r3, r4
 8003d32:	db07      	blt.n	8003d44 <__sfputc_r+0x22>
 8003d34:	290a      	cmp	r1, #10
 8003d36:	d005      	beq.n	8003d44 <__sfputc_r+0x22>
 8003d38:	6813      	ldr	r3, [r2, #0]
 8003d3a:	1c58      	adds	r0, r3, #1
 8003d3c:	6010      	str	r0, [r2, #0]
 8003d3e:	7019      	strb	r1, [r3, #0]
 8003d40:	0008      	movs	r0, r1
 8003d42:	bd10      	pop	{r4, pc}
 8003d44:	f000 faae 	bl	80042a4 <__swbuf_r>
 8003d48:	0001      	movs	r1, r0
 8003d4a:	e7f9      	b.n	8003d40 <__sfputc_r+0x1e>

08003d4c <__sfputs_r>:
 8003d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d4e:	0006      	movs	r6, r0
 8003d50:	000f      	movs	r7, r1
 8003d52:	0014      	movs	r4, r2
 8003d54:	18d5      	adds	r5, r2, r3
 8003d56:	42ac      	cmp	r4, r5
 8003d58:	d101      	bne.n	8003d5e <__sfputs_r+0x12>
 8003d5a:	2000      	movs	r0, #0
 8003d5c:	e007      	b.n	8003d6e <__sfputs_r+0x22>
 8003d5e:	7821      	ldrb	r1, [r4, #0]
 8003d60:	003a      	movs	r2, r7
 8003d62:	0030      	movs	r0, r6
 8003d64:	f7ff ffdd 	bl	8003d22 <__sfputc_r>
 8003d68:	3401      	adds	r4, #1
 8003d6a:	1c43      	adds	r3, r0, #1
 8003d6c:	d1f3      	bne.n	8003d56 <__sfputs_r+0xa>
 8003d6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003d70 <_vfiprintf_r>:
 8003d70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003d72:	b0a1      	sub	sp, #132	@ 0x84
 8003d74:	000f      	movs	r7, r1
 8003d76:	0015      	movs	r5, r2
 8003d78:	001e      	movs	r6, r3
 8003d7a:	9003      	str	r0, [sp, #12]
 8003d7c:	2800      	cmp	r0, #0
 8003d7e:	d004      	beq.n	8003d8a <_vfiprintf_r+0x1a>
 8003d80:	6a03      	ldr	r3, [r0, #32]
 8003d82:	2b00      	cmp	r3, #0
 8003d84:	d101      	bne.n	8003d8a <_vfiprintf_r+0x1a>
 8003d86:	f7ff fc55 	bl	8003634 <__sinit>
 8003d8a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003d8c:	07db      	lsls	r3, r3, #31
 8003d8e:	d405      	bmi.n	8003d9c <_vfiprintf_r+0x2c>
 8003d90:	89bb      	ldrh	r3, [r7, #12]
 8003d92:	059b      	lsls	r3, r3, #22
 8003d94:	d402      	bmi.n	8003d9c <_vfiprintf_r+0x2c>
 8003d96:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8003d98:	f7ff fdc1 	bl	800391e <__retarget_lock_acquire_recursive>
 8003d9c:	89bb      	ldrh	r3, [r7, #12]
 8003d9e:	071b      	lsls	r3, r3, #28
 8003da0:	d502      	bpl.n	8003da8 <_vfiprintf_r+0x38>
 8003da2:	693b      	ldr	r3, [r7, #16]
 8003da4:	2b00      	cmp	r3, #0
 8003da6:	d113      	bne.n	8003dd0 <_vfiprintf_r+0x60>
 8003da8:	0039      	movs	r1, r7
 8003daa:	9803      	ldr	r0, [sp, #12]
 8003dac:	f000 fabc 	bl	8004328 <__swsetup_r>
 8003db0:	2800      	cmp	r0, #0
 8003db2:	d00d      	beq.n	8003dd0 <_vfiprintf_r+0x60>
 8003db4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003db6:	07db      	lsls	r3, r3, #31
 8003db8:	d503      	bpl.n	8003dc2 <_vfiprintf_r+0x52>
 8003dba:	2001      	movs	r0, #1
 8003dbc:	4240      	negs	r0, r0
 8003dbe:	b021      	add	sp, #132	@ 0x84
 8003dc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003dc2:	89bb      	ldrh	r3, [r7, #12]
 8003dc4:	059b      	lsls	r3, r3, #22
 8003dc6:	d4f8      	bmi.n	8003dba <_vfiprintf_r+0x4a>
 8003dc8:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8003dca:	f7ff fda9 	bl	8003920 <__retarget_lock_release_recursive>
 8003dce:	e7f4      	b.n	8003dba <_vfiprintf_r+0x4a>
 8003dd0:	2300      	movs	r3, #0
 8003dd2:	ac08      	add	r4, sp, #32
 8003dd4:	6163      	str	r3, [r4, #20]
 8003dd6:	3320      	adds	r3, #32
 8003dd8:	7663      	strb	r3, [r4, #25]
 8003dda:	3310      	adds	r3, #16
 8003ddc:	76a3      	strb	r3, [r4, #26]
 8003dde:	9607      	str	r6, [sp, #28]
 8003de0:	002e      	movs	r6, r5
 8003de2:	7833      	ldrb	r3, [r6, #0]
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	d001      	beq.n	8003dec <_vfiprintf_r+0x7c>
 8003de8:	2b25      	cmp	r3, #37	@ 0x25
 8003dea:	d148      	bne.n	8003e7e <_vfiprintf_r+0x10e>
 8003dec:	1b73      	subs	r3, r6, r5
 8003dee:	9305      	str	r3, [sp, #20]
 8003df0:	42ae      	cmp	r6, r5
 8003df2:	d00b      	beq.n	8003e0c <_vfiprintf_r+0x9c>
 8003df4:	002a      	movs	r2, r5
 8003df6:	0039      	movs	r1, r7
 8003df8:	9803      	ldr	r0, [sp, #12]
 8003dfa:	f7ff ffa7 	bl	8003d4c <__sfputs_r>
 8003dfe:	3001      	adds	r0, #1
 8003e00:	d100      	bne.n	8003e04 <_vfiprintf_r+0x94>
 8003e02:	e0ae      	b.n	8003f62 <_vfiprintf_r+0x1f2>
 8003e04:	6963      	ldr	r3, [r4, #20]
 8003e06:	9a05      	ldr	r2, [sp, #20]
 8003e08:	189b      	adds	r3, r3, r2
 8003e0a:	6163      	str	r3, [r4, #20]
 8003e0c:	7833      	ldrb	r3, [r6, #0]
 8003e0e:	2b00      	cmp	r3, #0
 8003e10:	d100      	bne.n	8003e14 <_vfiprintf_r+0xa4>
 8003e12:	e0a6      	b.n	8003f62 <_vfiprintf_r+0x1f2>
 8003e14:	2201      	movs	r2, #1
 8003e16:	2300      	movs	r3, #0
 8003e18:	4252      	negs	r2, r2
 8003e1a:	6062      	str	r2, [r4, #4]
 8003e1c:	a904      	add	r1, sp, #16
 8003e1e:	3254      	adds	r2, #84	@ 0x54
 8003e20:	1852      	adds	r2, r2, r1
 8003e22:	1c75      	adds	r5, r6, #1
 8003e24:	6023      	str	r3, [r4, #0]
 8003e26:	60e3      	str	r3, [r4, #12]
 8003e28:	60a3      	str	r3, [r4, #8]
 8003e2a:	7013      	strb	r3, [r2, #0]
 8003e2c:	65a3      	str	r3, [r4, #88]	@ 0x58
 8003e2e:	4b59      	ldr	r3, [pc, #356]	@ (8003f94 <_vfiprintf_r+0x224>)
 8003e30:	2205      	movs	r2, #5
 8003e32:	0018      	movs	r0, r3
 8003e34:	7829      	ldrb	r1, [r5, #0]
 8003e36:	9305      	str	r3, [sp, #20]
 8003e38:	f000 fb1e 	bl	8004478 <memchr>
 8003e3c:	1c6e      	adds	r6, r5, #1
 8003e3e:	2800      	cmp	r0, #0
 8003e40:	d11f      	bne.n	8003e82 <_vfiprintf_r+0x112>
 8003e42:	6822      	ldr	r2, [r4, #0]
 8003e44:	06d3      	lsls	r3, r2, #27
 8003e46:	d504      	bpl.n	8003e52 <_vfiprintf_r+0xe2>
 8003e48:	2353      	movs	r3, #83	@ 0x53
 8003e4a:	a904      	add	r1, sp, #16
 8003e4c:	185b      	adds	r3, r3, r1
 8003e4e:	2120      	movs	r1, #32
 8003e50:	7019      	strb	r1, [r3, #0]
 8003e52:	0713      	lsls	r3, r2, #28
 8003e54:	d504      	bpl.n	8003e60 <_vfiprintf_r+0xf0>
 8003e56:	2353      	movs	r3, #83	@ 0x53
 8003e58:	a904      	add	r1, sp, #16
 8003e5a:	185b      	adds	r3, r3, r1
 8003e5c:	212b      	movs	r1, #43	@ 0x2b
 8003e5e:	7019      	strb	r1, [r3, #0]
 8003e60:	782b      	ldrb	r3, [r5, #0]
 8003e62:	2b2a      	cmp	r3, #42	@ 0x2a
 8003e64:	d016      	beq.n	8003e94 <_vfiprintf_r+0x124>
 8003e66:	002e      	movs	r6, r5
 8003e68:	2100      	movs	r1, #0
 8003e6a:	200a      	movs	r0, #10
 8003e6c:	68e3      	ldr	r3, [r4, #12]
 8003e6e:	7832      	ldrb	r2, [r6, #0]
 8003e70:	1c75      	adds	r5, r6, #1
 8003e72:	3a30      	subs	r2, #48	@ 0x30
 8003e74:	2a09      	cmp	r2, #9
 8003e76:	d950      	bls.n	8003f1a <_vfiprintf_r+0x1aa>
 8003e78:	2900      	cmp	r1, #0
 8003e7a:	d111      	bne.n	8003ea0 <_vfiprintf_r+0x130>
 8003e7c:	e017      	b.n	8003eae <_vfiprintf_r+0x13e>
 8003e7e:	3601      	adds	r6, #1
 8003e80:	e7af      	b.n	8003de2 <_vfiprintf_r+0x72>
 8003e82:	9b05      	ldr	r3, [sp, #20]
 8003e84:	6822      	ldr	r2, [r4, #0]
 8003e86:	1ac0      	subs	r0, r0, r3
 8003e88:	2301      	movs	r3, #1
 8003e8a:	4083      	lsls	r3, r0
 8003e8c:	4313      	orrs	r3, r2
 8003e8e:	0035      	movs	r5, r6
 8003e90:	6023      	str	r3, [r4, #0]
 8003e92:	e7cc      	b.n	8003e2e <_vfiprintf_r+0xbe>
 8003e94:	9b07      	ldr	r3, [sp, #28]
 8003e96:	1d19      	adds	r1, r3, #4
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	9107      	str	r1, [sp, #28]
 8003e9c:	2b00      	cmp	r3, #0
 8003e9e:	db01      	blt.n	8003ea4 <_vfiprintf_r+0x134>
 8003ea0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8003ea2:	e004      	b.n	8003eae <_vfiprintf_r+0x13e>
 8003ea4:	425b      	negs	r3, r3
 8003ea6:	60e3      	str	r3, [r4, #12]
 8003ea8:	2302      	movs	r3, #2
 8003eaa:	4313      	orrs	r3, r2
 8003eac:	6023      	str	r3, [r4, #0]
 8003eae:	7833      	ldrb	r3, [r6, #0]
 8003eb0:	2b2e      	cmp	r3, #46	@ 0x2e
 8003eb2:	d10c      	bne.n	8003ece <_vfiprintf_r+0x15e>
 8003eb4:	7873      	ldrb	r3, [r6, #1]
 8003eb6:	2b2a      	cmp	r3, #42	@ 0x2a
 8003eb8:	d134      	bne.n	8003f24 <_vfiprintf_r+0x1b4>
 8003eba:	9b07      	ldr	r3, [sp, #28]
 8003ebc:	3602      	adds	r6, #2
 8003ebe:	1d1a      	adds	r2, r3, #4
 8003ec0:	681b      	ldr	r3, [r3, #0]
 8003ec2:	9207      	str	r2, [sp, #28]
 8003ec4:	2b00      	cmp	r3, #0
 8003ec6:	da01      	bge.n	8003ecc <_vfiprintf_r+0x15c>
 8003ec8:	2301      	movs	r3, #1
 8003eca:	425b      	negs	r3, r3
 8003ecc:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ece:	4d32      	ldr	r5, [pc, #200]	@ (8003f98 <_vfiprintf_r+0x228>)
 8003ed0:	2203      	movs	r2, #3
 8003ed2:	0028      	movs	r0, r5
 8003ed4:	7831      	ldrb	r1, [r6, #0]
 8003ed6:	f000 facf 	bl	8004478 <memchr>
 8003eda:	2800      	cmp	r0, #0
 8003edc:	d006      	beq.n	8003eec <_vfiprintf_r+0x17c>
 8003ede:	2340      	movs	r3, #64	@ 0x40
 8003ee0:	1b40      	subs	r0, r0, r5
 8003ee2:	4083      	lsls	r3, r0
 8003ee4:	6822      	ldr	r2, [r4, #0]
 8003ee6:	3601      	adds	r6, #1
 8003ee8:	4313      	orrs	r3, r2
 8003eea:	6023      	str	r3, [r4, #0]
 8003eec:	7831      	ldrb	r1, [r6, #0]
 8003eee:	2206      	movs	r2, #6
 8003ef0:	482a      	ldr	r0, [pc, #168]	@ (8003f9c <_vfiprintf_r+0x22c>)
 8003ef2:	1c75      	adds	r5, r6, #1
 8003ef4:	7621      	strb	r1, [r4, #24]
 8003ef6:	f000 fabf 	bl	8004478 <memchr>
 8003efa:	2800      	cmp	r0, #0
 8003efc:	d040      	beq.n	8003f80 <_vfiprintf_r+0x210>
 8003efe:	4b28      	ldr	r3, [pc, #160]	@ (8003fa0 <_vfiprintf_r+0x230>)
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d122      	bne.n	8003f4a <_vfiprintf_r+0x1da>
 8003f04:	2207      	movs	r2, #7
 8003f06:	9b07      	ldr	r3, [sp, #28]
 8003f08:	3307      	adds	r3, #7
 8003f0a:	4393      	bics	r3, r2
 8003f0c:	3308      	adds	r3, #8
 8003f0e:	9307      	str	r3, [sp, #28]
 8003f10:	6963      	ldr	r3, [r4, #20]
 8003f12:	9a04      	ldr	r2, [sp, #16]
 8003f14:	189b      	adds	r3, r3, r2
 8003f16:	6163      	str	r3, [r4, #20]
 8003f18:	e762      	b.n	8003de0 <_vfiprintf_r+0x70>
 8003f1a:	4343      	muls	r3, r0
 8003f1c:	002e      	movs	r6, r5
 8003f1e:	2101      	movs	r1, #1
 8003f20:	189b      	adds	r3, r3, r2
 8003f22:	e7a4      	b.n	8003e6e <_vfiprintf_r+0xfe>
 8003f24:	2300      	movs	r3, #0
 8003f26:	200a      	movs	r0, #10
 8003f28:	0019      	movs	r1, r3
 8003f2a:	3601      	adds	r6, #1
 8003f2c:	6063      	str	r3, [r4, #4]
 8003f2e:	7832      	ldrb	r2, [r6, #0]
 8003f30:	1c75      	adds	r5, r6, #1
 8003f32:	3a30      	subs	r2, #48	@ 0x30
 8003f34:	2a09      	cmp	r2, #9
 8003f36:	d903      	bls.n	8003f40 <_vfiprintf_r+0x1d0>
 8003f38:	2b00      	cmp	r3, #0
 8003f3a:	d0c8      	beq.n	8003ece <_vfiprintf_r+0x15e>
 8003f3c:	9109      	str	r1, [sp, #36]	@ 0x24
 8003f3e:	e7c6      	b.n	8003ece <_vfiprintf_r+0x15e>
 8003f40:	4341      	muls	r1, r0
 8003f42:	002e      	movs	r6, r5
 8003f44:	2301      	movs	r3, #1
 8003f46:	1889      	adds	r1, r1, r2
 8003f48:	e7f1      	b.n	8003f2e <_vfiprintf_r+0x1be>
 8003f4a:	aa07      	add	r2, sp, #28
 8003f4c:	9200      	str	r2, [sp, #0]
 8003f4e:	0021      	movs	r1, r4
 8003f50:	003a      	movs	r2, r7
 8003f52:	4b14      	ldr	r3, [pc, #80]	@ (8003fa4 <_vfiprintf_r+0x234>)
 8003f54:	9803      	ldr	r0, [sp, #12]
 8003f56:	e000      	b.n	8003f5a <_vfiprintf_r+0x1ea>
 8003f58:	bf00      	nop
 8003f5a:	9004      	str	r0, [sp, #16]
 8003f5c:	9b04      	ldr	r3, [sp, #16]
 8003f5e:	3301      	adds	r3, #1
 8003f60:	d1d6      	bne.n	8003f10 <_vfiprintf_r+0x1a0>
 8003f62:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8003f64:	07db      	lsls	r3, r3, #31
 8003f66:	d405      	bmi.n	8003f74 <_vfiprintf_r+0x204>
 8003f68:	89bb      	ldrh	r3, [r7, #12]
 8003f6a:	059b      	lsls	r3, r3, #22
 8003f6c:	d402      	bmi.n	8003f74 <_vfiprintf_r+0x204>
 8003f6e:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8003f70:	f7ff fcd6 	bl	8003920 <__retarget_lock_release_recursive>
 8003f74:	89bb      	ldrh	r3, [r7, #12]
 8003f76:	065b      	lsls	r3, r3, #25
 8003f78:	d500      	bpl.n	8003f7c <_vfiprintf_r+0x20c>
 8003f7a:	e71e      	b.n	8003dba <_vfiprintf_r+0x4a>
 8003f7c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8003f7e:	e71e      	b.n	8003dbe <_vfiprintf_r+0x4e>
 8003f80:	aa07      	add	r2, sp, #28
 8003f82:	9200      	str	r2, [sp, #0]
 8003f84:	0021      	movs	r1, r4
 8003f86:	003a      	movs	r2, r7
 8003f88:	4b06      	ldr	r3, [pc, #24]	@ (8003fa4 <_vfiprintf_r+0x234>)
 8003f8a:	9803      	ldr	r0, [sp, #12]
 8003f8c:	f000 f87c 	bl	8004088 <_printf_i>
 8003f90:	e7e3      	b.n	8003f5a <_vfiprintf_r+0x1ea>
 8003f92:	46c0      	nop			@ (mov r8, r8)
 8003f94:	08004e15 	.word	0x08004e15
 8003f98:	08004e1b 	.word	0x08004e1b
 8003f9c:	08004e1f 	.word	0x08004e1f
 8003fa0:	00000000 	.word	0x00000000
 8003fa4:	08003d4d 	.word	0x08003d4d

08003fa8 <_printf_common>:
 8003fa8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003faa:	0016      	movs	r6, r2
 8003fac:	9301      	str	r3, [sp, #4]
 8003fae:	688a      	ldr	r2, [r1, #8]
 8003fb0:	690b      	ldr	r3, [r1, #16]
 8003fb2:	000c      	movs	r4, r1
 8003fb4:	9000      	str	r0, [sp, #0]
 8003fb6:	4293      	cmp	r3, r2
 8003fb8:	da00      	bge.n	8003fbc <_printf_common+0x14>
 8003fba:	0013      	movs	r3, r2
 8003fbc:	0022      	movs	r2, r4
 8003fbe:	6033      	str	r3, [r6, #0]
 8003fc0:	3243      	adds	r2, #67	@ 0x43
 8003fc2:	7812      	ldrb	r2, [r2, #0]
 8003fc4:	2a00      	cmp	r2, #0
 8003fc6:	d001      	beq.n	8003fcc <_printf_common+0x24>
 8003fc8:	3301      	adds	r3, #1
 8003fca:	6033      	str	r3, [r6, #0]
 8003fcc:	6823      	ldr	r3, [r4, #0]
 8003fce:	069b      	lsls	r3, r3, #26
 8003fd0:	d502      	bpl.n	8003fd8 <_printf_common+0x30>
 8003fd2:	6833      	ldr	r3, [r6, #0]
 8003fd4:	3302      	adds	r3, #2
 8003fd6:	6033      	str	r3, [r6, #0]
 8003fd8:	6822      	ldr	r2, [r4, #0]
 8003fda:	2306      	movs	r3, #6
 8003fdc:	0015      	movs	r5, r2
 8003fde:	401d      	ands	r5, r3
 8003fe0:	421a      	tst	r2, r3
 8003fe2:	d027      	beq.n	8004034 <_printf_common+0x8c>
 8003fe4:	0023      	movs	r3, r4
 8003fe6:	3343      	adds	r3, #67	@ 0x43
 8003fe8:	781b      	ldrb	r3, [r3, #0]
 8003fea:	1e5a      	subs	r2, r3, #1
 8003fec:	4193      	sbcs	r3, r2
 8003fee:	6822      	ldr	r2, [r4, #0]
 8003ff0:	0692      	lsls	r2, r2, #26
 8003ff2:	d430      	bmi.n	8004056 <_printf_common+0xae>
 8003ff4:	0022      	movs	r2, r4
 8003ff6:	9901      	ldr	r1, [sp, #4]
 8003ff8:	9800      	ldr	r0, [sp, #0]
 8003ffa:	9d08      	ldr	r5, [sp, #32]
 8003ffc:	3243      	adds	r2, #67	@ 0x43
 8003ffe:	47a8      	blx	r5
 8004000:	3001      	adds	r0, #1
 8004002:	d025      	beq.n	8004050 <_printf_common+0xa8>
 8004004:	2206      	movs	r2, #6
 8004006:	6823      	ldr	r3, [r4, #0]
 8004008:	2500      	movs	r5, #0
 800400a:	4013      	ands	r3, r2
 800400c:	2b04      	cmp	r3, #4
 800400e:	d105      	bne.n	800401c <_printf_common+0x74>
 8004010:	6833      	ldr	r3, [r6, #0]
 8004012:	68e5      	ldr	r5, [r4, #12]
 8004014:	1aed      	subs	r5, r5, r3
 8004016:	43eb      	mvns	r3, r5
 8004018:	17db      	asrs	r3, r3, #31
 800401a:	401d      	ands	r5, r3
 800401c:	68a3      	ldr	r3, [r4, #8]
 800401e:	6922      	ldr	r2, [r4, #16]
 8004020:	4293      	cmp	r3, r2
 8004022:	dd01      	ble.n	8004028 <_printf_common+0x80>
 8004024:	1a9b      	subs	r3, r3, r2
 8004026:	18ed      	adds	r5, r5, r3
 8004028:	2600      	movs	r6, #0
 800402a:	42b5      	cmp	r5, r6
 800402c:	d120      	bne.n	8004070 <_printf_common+0xc8>
 800402e:	2000      	movs	r0, #0
 8004030:	e010      	b.n	8004054 <_printf_common+0xac>
 8004032:	3501      	adds	r5, #1
 8004034:	68e3      	ldr	r3, [r4, #12]
 8004036:	6832      	ldr	r2, [r6, #0]
 8004038:	1a9b      	subs	r3, r3, r2
 800403a:	42ab      	cmp	r3, r5
 800403c:	ddd2      	ble.n	8003fe4 <_printf_common+0x3c>
 800403e:	0022      	movs	r2, r4
 8004040:	2301      	movs	r3, #1
 8004042:	9901      	ldr	r1, [sp, #4]
 8004044:	9800      	ldr	r0, [sp, #0]
 8004046:	9f08      	ldr	r7, [sp, #32]
 8004048:	3219      	adds	r2, #25
 800404a:	47b8      	blx	r7
 800404c:	3001      	adds	r0, #1
 800404e:	d1f0      	bne.n	8004032 <_printf_common+0x8a>
 8004050:	2001      	movs	r0, #1
 8004052:	4240      	negs	r0, r0
 8004054:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8004056:	2030      	movs	r0, #48	@ 0x30
 8004058:	18e1      	adds	r1, r4, r3
 800405a:	3143      	adds	r1, #67	@ 0x43
 800405c:	7008      	strb	r0, [r1, #0]
 800405e:	0021      	movs	r1, r4
 8004060:	1c5a      	adds	r2, r3, #1
 8004062:	3145      	adds	r1, #69	@ 0x45
 8004064:	7809      	ldrb	r1, [r1, #0]
 8004066:	18a2      	adds	r2, r4, r2
 8004068:	3243      	adds	r2, #67	@ 0x43
 800406a:	3302      	adds	r3, #2
 800406c:	7011      	strb	r1, [r2, #0]
 800406e:	e7c1      	b.n	8003ff4 <_printf_common+0x4c>
 8004070:	0022      	movs	r2, r4
 8004072:	2301      	movs	r3, #1
 8004074:	9901      	ldr	r1, [sp, #4]
 8004076:	9800      	ldr	r0, [sp, #0]
 8004078:	9f08      	ldr	r7, [sp, #32]
 800407a:	321a      	adds	r2, #26
 800407c:	47b8      	blx	r7
 800407e:	3001      	adds	r0, #1
 8004080:	d0e6      	beq.n	8004050 <_printf_common+0xa8>
 8004082:	3601      	adds	r6, #1
 8004084:	e7d1      	b.n	800402a <_printf_common+0x82>
	...

08004088 <_printf_i>:
 8004088:	b5f0      	push	{r4, r5, r6, r7, lr}
 800408a:	b08b      	sub	sp, #44	@ 0x2c
 800408c:	9206      	str	r2, [sp, #24]
 800408e:	000a      	movs	r2, r1
 8004090:	3243      	adds	r2, #67	@ 0x43
 8004092:	9307      	str	r3, [sp, #28]
 8004094:	9005      	str	r0, [sp, #20]
 8004096:	9203      	str	r2, [sp, #12]
 8004098:	7e0a      	ldrb	r2, [r1, #24]
 800409a:	000c      	movs	r4, r1
 800409c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800409e:	2a78      	cmp	r2, #120	@ 0x78
 80040a0:	d809      	bhi.n	80040b6 <_printf_i+0x2e>
 80040a2:	2a62      	cmp	r2, #98	@ 0x62
 80040a4:	d80b      	bhi.n	80040be <_printf_i+0x36>
 80040a6:	2a00      	cmp	r2, #0
 80040a8:	d100      	bne.n	80040ac <_printf_i+0x24>
 80040aa:	e0bc      	b.n	8004226 <_printf_i+0x19e>
 80040ac:	497b      	ldr	r1, [pc, #492]	@ (800429c <_printf_i+0x214>)
 80040ae:	9104      	str	r1, [sp, #16]
 80040b0:	2a58      	cmp	r2, #88	@ 0x58
 80040b2:	d100      	bne.n	80040b6 <_printf_i+0x2e>
 80040b4:	e090      	b.n	80041d8 <_printf_i+0x150>
 80040b6:	0025      	movs	r5, r4
 80040b8:	3542      	adds	r5, #66	@ 0x42
 80040ba:	702a      	strb	r2, [r5, #0]
 80040bc:	e022      	b.n	8004104 <_printf_i+0x7c>
 80040be:	0010      	movs	r0, r2
 80040c0:	3863      	subs	r0, #99	@ 0x63
 80040c2:	2815      	cmp	r0, #21
 80040c4:	d8f7      	bhi.n	80040b6 <_printf_i+0x2e>
 80040c6:	f7fc f827 	bl	8000118 <__gnu_thumb1_case_shi>
 80040ca:	0016      	.short	0x0016
 80040cc:	fff6001f 	.word	0xfff6001f
 80040d0:	fff6fff6 	.word	0xfff6fff6
 80040d4:	001ffff6 	.word	0x001ffff6
 80040d8:	fff6fff6 	.word	0xfff6fff6
 80040dc:	fff6fff6 	.word	0xfff6fff6
 80040e0:	003600a1 	.word	0x003600a1
 80040e4:	fff60080 	.word	0xfff60080
 80040e8:	00b2fff6 	.word	0x00b2fff6
 80040ec:	0036fff6 	.word	0x0036fff6
 80040f0:	fff6fff6 	.word	0xfff6fff6
 80040f4:	0084      	.short	0x0084
 80040f6:	0025      	movs	r5, r4
 80040f8:	681a      	ldr	r2, [r3, #0]
 80040fa:	3542      	adds	r5, #66	@ 0x42
 80040fc:	1d11      	adds	r1, r2, #4
 80040fe:	6019      	str	r1, [r3, #0]
 8004100:	6813      	ldr	r3, [r2, #0]
 8004102:	702b      	strb	r3, [r5, #0]
 8004104:	2301      	movs	r3, #1
 8004106:	e0a0      	b.n	800424a <_printf_i+0x1c2>
 8004108:	6818      	ldr	r0, [r3, #0]
 800410a:	6809      	ldr	r1, [r1, #0]
 800410c:	1d02      	adds	r2, r0, #4
 800410e:	060d      	lsls	r5, r1, #24
 8004110:	d50b      	bpl.n	800412a <_printf_i+0xa2>
 8004112:	6806      	ldr	r6, [r0, #0]
 8004114:	601a      	str	r2, [r3, #0]
 8004116:	2e00      	cmp	r6, #0
 8004118:	da03      	bge.n	8004122 <_printf_i+0x9a>
 800411a:	232d      	movs	r3, #45	@ 0x2d
 800411c:	9a03      	ldr	r2, [sp, #12]
 800411e:	4276      	negs	r6, r6
 8004120:	7013      	strb	r3, [r2, #0]
 8004122:	4b5e      	ldr	r3, [pc, #376]	@ (800429c <_printf_i+0x214>)
 8004124:	270a      	movs	r7, #10
 8004126:	9304      	str	r3, [sp, #16]
 8004128:	e018      	b.n	800415c <_printf_i+0xd4>
 800412a:	6806      	ldr	r6, [r0, #0]
 800412c:	601a      	str	r2, [r3, #0]
 800412e:	0649      	lsls	r1, r1, #25
 8004130:	d5f1      	bpl.n	8004116 <_printf_i+0x8e>
 8004132:	b236      	sxth	r6, r6
 8004134:	e7ef      	b.n	8004116 <_printf_i+0x8e>
 8004136:	6808      	ldr	r0, [r1, #0]
 8004138:	6819      	ldr	r1, [r3, #0]
 800413a:	c940      	ldmia	r1!, {r6}
 800413c:	0605      	lsls	r5, r0, #24
 800413e:	d402      	bmi.n	8004146 <_printf_i+0xbe>
 8004140:	0640      	lsls	r0, r0, #25
 8004142:	d500      	bpl.n	8004146 <_printf_i+0xbe>
 8004144:	b2b6      	uxth	r6, r6
 8004146:	6019      	str	r1, [r3, #0]
 8004148:	4b54      	ldr	r3, [pc, #336]	@ (800429c <_printf_i+0x214>)
 800414a:	270a      	movs	r7, #10
 800414c:	9304      	str	r3, [sp, #16]
 800414e:	2a6f      	cmp	r2, #111	@ 0x6f
 8004150:	d100      	bne.n	8004154 <_printf_i+0xcc>
 8004152:	3f02      	subs	r7, #2
 8004154:	0023      	movs	r3, r4
 8004156:	2200      	movs	r2, #0
 8004158:	3343      	adds	r3, #67	@ 0x43
 800415a:	701a      	strb	r2, [r3, #0]
 800415c:	6863      	ldr	r3, [r4, #4]
 800415e:	60a3      	str	r3, [r4, #8]
 8004160:	2b00      	cmp	r3, #0
 8004162:	db03      	blt.n	800416c <_printf_i+0xe4>
 8004164:	2104      	movs	r1, #4
 8004166:	6822      	ldr	r2, [r4, #0]
 8004168:	438a      	bics	r2, r1
 800416a:	6022      	str	r2, [r4, #0]
 800416c:	2e00      	cmp	r6, #0
 800416e:	d102      	bne.n	8004176 <_printf_i+0xee>
 8004170:	9d03      	ldr	r5, [sp, #12]
 8004172:	2b00      	cmp	r3, #0
 8004174:	d00c      	beq.n	8004190 <_printf_i+0x108>
 8004176:	9d03      	ldr	r5, [sp, #12]
 8004178:	0030      	movs	r0, r6
 800417a:	0039      	movs	r1, r7
 800417c:	f7fc f85c 	bl	8000238 <__aeabi_uidivmod>
 8004180:	9b04      	ldr	r3, [sp, #16]
 8004182:	3d01      	subs	r5, #1
 8004184:	5c5b      	ldrb	r3, [r3, r1]
 8004186:	702b      	strb	r3, [r5, #0]
 8004188:	0033      	movs	r3, r6
 800418a:	0006      	movs	r6, r0
 800418c:	429f      	cmp	r7, r3
 800418e:	d9f3      	bls.n	8004178 <_printf_i+0xf0>
 8004190:	2f08      	cmp	r7, #8
 8004192:	d109      	bne.n	80041a8 <_printf_i+0x120>
 8004194:	6823      	ldr	r3, [r4, #0]
 8004196:	07db      	lsls	r3, r3, #31
 8004198:	d506      	bpl.n	80041a8 <_printf_i+0x120>
 800419a:	6862      	ldr	r2, [r4, #4]
 800419c:	6923      	ldr	r3, [r4, #16]
 800419e:	429a      	cmp	r2, r3
 80041a0:	dc02      	bgt.n	80041a8 <_printf_i+0x120>
 80041a2:	2330      	movs	r3, #48	@ 0x30
 80041a4:	3d01      	subs	r5, #1
 80041a6:	702b      	strb	r3, [r5, #0]
 80041a8:	9b03      	ldr	r3, [sp, #12]
 80041aa:	1b5b      	subs	r3, r3, r5
 80041ac:	6123      	str	r3, [r4, #16]
 80041ae:	9b07      	ldr	r3, [sp, #28]
 80041b0:	0021      	movs	r1, r4
 80041b2:	9300      	str	r3, [sp, #0]
 80041b4:	9805      	ldr	r0, [sp, #20]
 80041b6:	9b06      	ldr	r3, [sp, #24]
 80041b8:	aa09      	add	r2, sp, #36	@ 0x24
 80041ba:	f7ff fef5 	bl	8003fa8 <_printf_common>
 80041be:	3001      	adds	r0, #1
 80041c0:	d148      	bne.n	8004254 <_printf_i+0x1cc>
 80041c2:	2001      	movs	r0, #1
 80041c4:	4240      	negs	r0, r0
 80041c6:	b00b      	add	sp, #44	@ 0x2c
 80041c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80041ca:	2220      	movs	r2, #32
 80041cc:	6809      	ldr	r1, [r1, #0]
 80041ce:	430a      	orrs	r2, r1
 80041d0:	6022      	str	r2, [r4, #0]
 80041d2:	2278      	movs	r2, #120	@ 0x78
 80041d4:	4932      	ldr	r1, [pc, #200]	@ (80042a0 <_printf_i+0x218>)
 80041d6:	9104      	str	r1, [sp, #16]
 80041d8:	0021      	movs	r1, r4
 80041da:	3145      	adds	r1, #69	@ 0x45
 80041dc:	700a      	strb	r2, [r1, #0]
 80041de:	6819      	ldr	r1, [r3, #0]
 80041e0:	6822      	ldr	r2, [r4, #0]
 80041e2:	c940      	ldmia	r1!, {r6}
 80041e4:	0610      	lsls	r0, r2, #24
 80041e6:	d402      	bmi.n	80041ee <_printf_i+0x166>
 80041e8:	0650      	lsls	r0, r2, #25
 80041ea:	d500      	bpl.n	80041ee <_printf_i+0x166>
 80041ec:	b2b6      	uxth	r6, r6
 80041ee:	6019      	str	r1, [r3, #0]
 80041f0:	07d3      	lsls	r3, r2, #31
 80041f2:	d502      	bpl.n	80041fa <_printf_i+0x172>
 80041f4:	2320      	movs	r3, #32
 80041f6:	4313      	orrs	r3, r2
 80041f8:	6023      	str	r3, [r4, #0]
 80041fa:	2e00      	cmp	r6, #0
 80041fc:	d001      	beq.n	8004202 <_printf_i+0x17a>
 80041fe:	2710      	movs	r7, #16
 8004200:	e7a8      	b.n	8004154 <_printf_i+0xcc>
 8004202:	2220      	movs	r2, #32
 8004204:	6823      	ldr	r3, [r4, #0]
 8004206:	4393      	bics	r3, r2
 8004208:	6023      	str	r3, [r4, #0]
 800420a:	e7f8      	b.n	80041fe <_printf_i+0x176>
 800420c:	681a      	ldr	r2, [r3, #0]
 800420e:	680d      	ldr	r5, [r1, #0]
 8004210:	1d10      	adds	r0, r2, #4
 8004212:	6949      	ldr	r1, [r1, #20]
 8004214:	6018      	str	r0, [r3, #0]
 8004216:	6813      	ldr	r3, [r2, #0]
 8004218:	062e      	lsls	r6, r5, #24
 800421a:	d501      	bpl.n	8004220 <_printf_i+0x198>
 800421c:	6019      	str	r1, [r3, #0]
 800421e:	e002      	b.n	8004226 <_printf_i+0x19e>
 8004220:	066d      	lsls	r5, r5, #25
 8004222:	d5fb      	bpl.n	800421c <_printf_i+0x194>
 8004224:	8019      	strh	r1, [r3, #0]
 8004226:	2300      	movs	r3, #0
 8004228:	9d03      	ldr	r5, [sp, #12]
 800422a:	6123      	str	r3, [r4, #16]
 800422c:	e7bf      	b.n	80041ae <_printf_i+0x126>
 800422e:	681a      	ldr	r2, [r3, #0]
 8004230:	1d11      	adds	r1, r2, #4
 8004232:	6019      	str	r1, [r3, #0]
 8004234:	6815      	ldr	r5, [r2, #0]
 8004236:	2100      	movs	r1, #0
 8004238:	0028      	movs	r0, r5
 800423a:	6862      	ldr	r2, [r4, #4]
 800423c:	f000 f91c 	bl	8004478 <memchr>
 8004240:	2800      	cmp	r0, #0
 8004242:	d001      	beq.n	8004248 <_printf_i+0x1c0>
 8004244:	1b40      	subs	r0, r0, r5
 8004246:	6060      	str	r0, [r4, #4]
 8004248:	6863      	ldr	r3, [r4, #4]
 800424a:	6123      	str	r3, [r4, #16]
 800424c:	2300      	movs	r3, #0
 800424e:	9a03      	ldr	r2, [sp, #12]
 8004250:	7013      	strb	r3, [r2, #0]
 8004252:	e7ac      	b.n	80041ae <_printf_i+0x126>
 8004254:	002a      	movs	r2, r5
 8004256:	6923      	ldr	r3, [r4, #16]
 8004258:	9906      	ldr	r1, [sp, #24]
 800425a:	9805      	ldr	r0, [sp, #20]
 800425c:	9d07      	ldr	r5, [sp, #28]
 800425e:	47a8      	blx	r5
 8004260:	3001      	adds	r0, #1
 8004262:	d0ae      	beq.n	80041c2 <_printf_i+0x13a>
 8004264:	6823      	ldr	r3, [r4, #0]
 8004266:	079b      	lsls	r3, r3, #30
 8004268:	d415      	bmi.n	8004296 <_printf_i+0x20e>
 800426a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800426c:	68e0      	ldr	r0, [r4, #12]
 800426e:	4298      	cmp	r0, r3
 8004270:	daa9      	bge.n	80041c6 <_printf_i+0x13e>
 8004272:	0018      	movs	r0, r3
 8004274:	e7a7      	b.n	80041c6 <_printf_i+0x13e>
 8004276:	0022      	movs	r2, r4
 8004278:	2301      	movs	r3, #1
 800427a:	9906      	ldr	r1, [sp, #24]
 800427c:	9805      	ldr	r0, [sp, #20]
 800427e:	9e07      	ldr	r6, [sp, #28]
 8004280:	3219      	adds	r2, #25
 8004282:	47b0      	blx	r6
 8004284:	3001      	adds	r0, #1
 8004286:	d09c      	beq.n	80041c2 <_printf_i+0x13a>
 8004288:	3501      	adds	r5, #1
 800428a:	68e3      	ldr	r3, [r4, #12]
 800428c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800428e:	1a9b      	subs	r3, r3, r2
 8004290:	42ab      	cmp	r3, r5
 8004292:	dcf0      	bgt.n	8004276 <_printf_i+0x1ee>
 8004294:	e7e9      	b.n	800426a <_printf_i+0x1e2>
 8004296:	2500      	movs	r5, #0
 8004298:	e7f7      	b.n	800428a <_printf_i+0x202>
 800429a:	46c0      	nop			@ (mov r8, r8)
 800429c:	08004e26 	.word	0x08004e26
 80042a0:	08004e37 	.word	0x08004e37

080042a4 <__swbuf_r>:
 80042a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80042a6:	0006      	movs	r6, r0
 80042a8:	000d      	movs	r5, r1
 80042aa:	0014      	movs	r4, r2
 80042ac:	2800      	cmp	r0, #0
 80042ae:	d004      	beq.n	80042ba <__swbuf_r+0x16>
 80042b0:	6a03      	ldr	r3, [r0, #32]
 80042b2:	2b00      	cmp	r3, #0
 80042b4:	d101      	bne.n	80042ba <__swbuf_r+0x16>
 80042b6:	f7ff f9bd 	bl	8003634 <__sinit>
 80042ba:	69a3      	ldr	r3, [r4, #24]
 80042bc:	60a3      	str	r3, [r4, #8]
 80042be:	89a3      	ldrh	r3, [r4, #12]
 80042c0:	071b      	lsls	r3, r3, #28
 80042c2:	d502      	bpl.n	80042ca <__swbuf_r+0x26>
 80042c4:	6923      	ldr	r3, [r4, #16]
 80042c6:	2b00      	cmp	r3, #0
 80042c8:	d109      	bne.n	80042de <__swbuf_r+0x3a>
 80042ca:	0021      	movs	r1, r4
 80042cc:	0030      	movs	r0, r6
 80042ce:	f000 f82b 	bl	8004328 <__swsetup_r>
 80042d2:	2800      	cmp	r0, #0
 80042d4:	d003      	beq.n	80042de <__swbuf_r+0x3a>
 80042d6:	2501      	movs	r5, #1
 80042d8:	426d      	negs	r5, r5
 80042da:	0028      	movs	r0, r5
 80042dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80042de:	6923      	ldr	r3, [r4, #16]
 80042e0:	6820      	ldr	r0, [r4, #0]
 80042e2:	b2ef      	uxtb	r7, r5
 80042e4:	1ac0      	subs	r0, r0, r3
 80042e6:	6963      	ldr	r3, [r4, #20]
 80042e8:	b2ed      	uxtb	r5, r5
 80042ea:	4283      	cmp	r3, r0
 80042ec:	dc05      	bgt.n	80042fa <__swbuf_r+0x56>
 80042ee:	0021      	movs	r1, r4
 80042f0:	0030      	movs	r0, r6
 80042f2:	f7ff fcc1 	bl	8003c78 <_fflush_r>
 80042f6:	2800      	cmp	r0, #0
 80042f8:	d1ed      	bne.n	80042d6 <__swbuf_r+0x32>
 80042fa:	68a3      	ldr	r3, [r4, #8]
 80042fc:	3001      	adds	r0, #1
 80042fe:	3b01      	subs	r3, #1
 8004300:	60a3      	str	r3, [r4, #8]
 8004302:	6823      	ldr	r3, [r4, #0]
 8004304:	1c5a      	adds	r2, r3, #1
 8004306:	6022      	str	r2, [r4, #0]
 8004308:	701f      	strb	r7, [r3, #0]
 800430a:	6963      	ldr	r3, [r4, #20]
 800430c:	4283      	cmp	r3, r0
 800430e:	d004      	beq.n	800431a <__swbuf_r+0x76>
 8004310:	89a3      	ldrh	r3, [r4, #12]
 8004312:	07db      	lsls	r3, r3, #31
 8004314:	d5e1      	bpl.n	80042da <__swbuf_r+0x36>
 8004316:	2d0a      	cmp	r5, #10
 8004318:	d1df      	bne.n	80042da <__swbuf_r+0x36>
 800431a:	0021      	movs	r1, r4
 800431c:	0030      	movs	r0, r6
 800431e:	f7ff fcab 	bl	8003c78 <_fflush_r>
 8004322:	2800      	cmp	r0, #0
 8004324:	d0d9      	beq.n	80042da <__swbuf_r+0x36>
 8004326:	e7d6      	b.n	80042d6 <__swbuf_r+0x32>

08004328 <__swsetup_r>:
 8004328:	4b2d      	ldr	r3, [pc, #180]	@ (80043e0 <__swsetup_r+0xb8>)
 800432a:	b570      	push	{r4, r5, r6, lr}
 800432c:	0005      	movs	r5, r0
 800432e:	6818      	ldr	r0, [r3, #0]
 8004330:	000c      	movs	r4, r1
 8004332:	2800      	cmp	r0, #0
 8004334:	d004      	beq.n	8004340 <__swsetup_r+0x18>
 8004336:	6a03      	ldr	r3, [r0, #32]
 8004338:	2b00      	cmp	r3, #0
 800433a:	d101      	bne.n	8004340 <__swsetup_r+0x18>
 800433c:	f7ff f97a 	bl	8003634 <__sinit>
 8004340:	230c      	movs	r3, #12
 8004342:	5ee2      	ldrsh	r2, [r4, r3]
 8004344:	0713      	lsls	r3, r2, #28
 8004346:	d423      	bmi.n	8004390 <__swsetup_r+0x68>
 8004348:	06d3      	lsls	r3, r2, #27
 800434a:	d407      	bmi.n	800435c <__swsetup_r+0x34>
 800434c:	2309      	movs	r3, #9
 800434e:	602b      	str	r3, [r5, #0]
 8004350:	2340      	movs	r3, #64	@ 0x40
 8004352:	2001      	movs	r0, #1
 8004354:	4313      	orrs	r3, r2
 8004356:	81a3      	strh	r3, [r4, #12]
 8004358:	4240      	negs	r0, r0
 800435a:	e03a      	b.n	80043d2 <__swsetup_r+0xaa>
 800435c:	0752      	lsls	r2, r2, #29
 800435e:	d513      	bpl.n	8004388 <__swsetup_r+0x60>
 8004360:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004362:	2900      	cmp	r1, #0
 8004364:	d008      	beq.n	8004378 <__swsetup_r+0x50>
 8004366:	0023      	movs	r3, r4
 8004368:	3344      	adds	r3, #68	@ 0x44
 800436a:	4299      	cmp	r1, r3
 800436c:	d002      	beq.n	8004374 <__swsetup_r+0x4c>
 800436e:	0028      	movs	r0, r5
 8004370:	f7ff faf6 	bl	8003960 <_free_r>
 8004374:	2300      	movs	r3, #0
 8004376:	6363      	str	r3, [r4, #52]	@ 0x34
 8004378:	2224      	movs	r2, #36	@ 0x24
 800437a:	89a3      	ldrh	r3, [r4, #12]
 800437c:	4393      	bics	r3, r2
 800437e:	81a3      	strh	r3, [r4, #12]
 8004380:	2300      	movs	r3, #0
 8004382:	6063      	str	r3, [r4, #4]
 8004384:	6923      	ldr	r3, [r4, #16]
 8004386:	6023      	str	r3, [r4, #0]
 8004388:	2308      	movs	r3, #8
 800438a:	89a2      	ldrh	r2, [r4, #12]
 800438c:	4313      	orrs	r3, r2
 800438e:	81a3      	strh	r3, [r4, #12]
 8004390:	6923      	ldr	r3, [r4, #16]
 8004392:	2b00      	cmp	r3, #0
 8004394:	d10b      	bne.n	80043ae <__swsetup_r+0x86>
 8004396:	21a0      	movs	r1, #160	@ 0xa0
 8004398:	2280      	movs	r2, #128	@ 0x80
 800439a:	89a3      	ldrh	r3, [r4, #12]
 800439c:	0089      	lsls	r1, r1, #2
 800439e:	0092      	lsls	r2, r2, #2
 80043a0:	400b      	ands	r3, r1
 80043a2:	4293      	cmp	r3, r2
 80043a4:	d003      	beq.n	80043ae <__swsetup_r+0x86>
 80043a6:	0021      	movs	r1, r4
 80043a8:	0028      	movs	r0, r5
 80043aa:	f000 f89b 	bl	80044e4 <__smakebuf_r>
 80043ae:	230c      	movs	r3, #12
 80043b0:	5ee2      	ldrsh	r2, [r4, r3]
 80043b2:	2101      	movs	r1, #1
 80043b4:	0013      	movs	r3, r2
 80043b6:	400b      	ands	r3, r1
 80043b8:	420a      	tst	r2, r1
 80043ba:	d00b      	beq.n	80043d4 <__swsetup_r+0xac>
 80043bc:	2300      	movs	r3, #0
 80043be:	60a3      	str	r3, [r4, #8]
 80043c0:	6963      	ldr	r3, [r4, #20]
 80043c2:	425b      	negs	r3, r3
 80043c4:	61a3      	str	r3, [r4, #24]
 80043c6:	2000      	movs	r0, #0
 80043c8:	6923      	ldr	r3, [r4, #16]
 80043ca:	4283      	cmp	r3, r0
 80043cc:	d101      	bne.n	80043d2 <__swsetup_r+0xaa>
 80043ce:	0613      	lsls	r3, r2, #24
 80043d0:	d4be      	bmi.n	8004350 <__swsetup_r+0x28>
 80043d2:	bd70      	pop	{r4, r5, r6, pc}
 80043d4:	0791      	lsls	r1, r2, #30
 80043d6:	d400      	bmi.n	80043da <__swsetup_r+0xb2>
 80043d8:	6963      	ldr	r3, [r4, #20]
 80043da:	60a3      	str	r3, [r4, #8]
 80043dc:	e7f3      	b.n	80043c6 <__swsetup_r+0x9e>
 80043de:	46c0      	nop			@ (mov r8, r8)
 80043e0:	20000044 	.word	0x20000044

080043e4 <_raise_r>:
 80043e4:	b570      	push	{r4, r5, r6, lr}
 80043e6:	0004      	movs	r4, r0
 80043e8:	000d      	movs	r5, r1
 80043ea:	291f      	cmp	r1, #31
 80043ec:	d904      	bls.n	80043f8 <_raise_r+0x14>
 80043ee:	2316      	movs	r3, #22
 80043f0:	6003      	str	r3, [r0, #0]
 80043f2:	2001      	movs	r0, #1
 80043f4:	4240      	negs	r0, r0
 80043f6:	bd70      	pop	{r4, r5, r6, pc}
 80043f8:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	d004      	beq.n	8004408 <_raise_r+0x24>
 80043fe:	008a      	lsls	r2, r1, #2
 8004400:	189b      	adds	r3, r3, r2
 8004402:	681a      	ldr	r2, [r3, #0]
 8004404:	2a00      	cmp	r2, #0
 8004406:	d108      	bne.n	800441a <_raise_r+0x36>
 8004408:	0020      	movs	r0, r4
 800440a:	f000 f831 	bl	8004470 <_getpid_r>
 800440e:	002a      	movs	r2, r5
 8004410:	0001      	movs	r1, r0
 8004412:	0020      	movs	r0, r4
 8004414:	f000 f81a 	bl	800444c <_kill_r>
 8004418:	e7ed      	b.n	80043f6 <_raise_r+0x12>
 800441a:	2a01      	cmp	r2, #1
 800441c:	d009      	beq.n	8004432 <_raise_r+0x4e>
 800441e:	1c51      	adds	r1, r2, #1
 8004420:	d103      	bne.n	800442a <_raise_r+0x46>
 8004422:	2316      	movs	r3, #22
 8004424:	6003      	str	r3, [r0, #0]
 8004426:	2001      	movs	r0, #1
 8004428:	e7e5      	b.n	80043f6 <_raise_r+0x12>
 800442a:	2100      	movs	r1, #0
 800442c:	0028      	movs	r0, r5
 800442e:	6019      	str	r1, [r3, #0]
 8004430:	4790      	blx	r2
 8004432:	2000      	movs	r0, #0
 8004434:	e7df      	b.n	80043f6 <_raise_r+0x12>
	...

08004438 <raise>:
 8004438:	b510      	push	{r4, lr}
 800443a:	4b03      	ldr	r3, [pc, #12]	@ (8004448 <raise+0x10>)
 800443c:	0001      	movs	r1, r0
 800443e:	6818      	ldr	r0, [r3, #0]
 8004440:	f7ff ffd0 	bl	80043e4 <_raise_r>
 8004444:	bd10      	pop	{r4, pc}
 8004446:	46c0      	nop			@ (mov r8, r8)
 8004448:	20000044 	.word	0x20000044

0800444c <_kill_r>:
 800444c:	2300      	movs	r3, #0
 800444e:	b570      	push	{r4, r5, r6, lr}
 8004450:	4d06      	ldr	r5, [pc, #24]	@ (800446c <_kill_r+0x20>)
 8004452:	0004      	movs	r4, r0
 8004454:	0008      	movs	r0, r1
 8004456:	0011      	movs	r1, r2
 8004458:	602b      	str	r3, [r5, #0]
 800445a:	f7fc fb59 	bl	8000b10 <_kill>
 800445e:	1c43      	adds	r3, r0, #1
 8004460:	d103      	bne.n	800446a <_kill_r+0x1e>
 8004462:	682b      	ldr	r3, [r5, #0]
 8004464:	2b00      	cmp	r3, #0
 8004466:	d000      	beq.n	800446a <_kill_r+0x1e>
 8004468:	6023      	str	r3, [r4, #0]
 800446a:	bd70      	pop	{r4, r5, r6, pc}
 800446c:	200006b4 	.word	0x200006b4

08004470 <_getpid_r>:
 8004470:	b510      	push	{r4, lr}
 8004472:	f7fc fb47 	bl	8000b04 <_getpid>
 8004476:	bd10      	pop	{r4, pc}

08004478 <memchr>:
 8004478:	b2c9      	uxtb	r1, r1
 800447a:	1882      	adds	r2, r0, r2
 800447c:	4290      	cmp	r0, r2
 800447e:	d101      	bne.n	8004484 <memchr+0xc>
 8004480:	2000      	movs	r0, #0
 8004482:	4770      	bx	lr
 8004484:	7803      	ldrb	r3, [r0, #0]
 8004486:	428b      	cmp	r3, r1
 8004488:	d0fb      	beq.n	8004482 <memchr+0xa>
 800448a:	3001      	adds	r0, #1
 800448c:	e7f6      	b.n	800447c <memchr+0x4>
	...

08004490 <__swhatbuf_r>:
 8004490:	b570      	push	{r4, r5, r6, lr}
 8004492:	000e      	movs	r6, r1
 8004494:	001d      	movs	r5, r3
 8004496:	230e      	movs	r3, #14
 8004498:	5ec9      	ldrsh	r1, [r1, r3]
 800449a:	0014      	movs	r4, r2
 800449c:	b096      	sub	sp, #88	@ 0x58
 800449e:	2900      	cmp	r1, #0
 80044a0:	da0c      	bge.n	80044bc <__swhatbuf_r+0x2c>
 80044a2:	89b2      	ldrh	r2, [r6, #12]
 80044a4:	2380      	movs	r3, #128	@ 0x80
 80044a6:	0011      	movs	r1, r2
 80044a8:	4019      	ands	r1, r3
 80044aa:	421a      	tst	r2, r3
 80044ac:	d114      	bne.n	80044d8 <__swhatbuf_r+0x48>
 80044ae:	2380      	movs	r3, #128	@ 0x80
 80044b0:	00db      	lsls	r3, r3, #3
 80044b2:	2000      	movs	r0, #0
 80044b4:	6029      	str	r1, [r5, #0]
 80044b6:	6023      	str	r3, [r4, #0]
 80044b8:	b016      	add	sp, #88	@ 0x58
 80044ba:	bd70      	pop	{r4, r5, r6, pc}
 80044bc:	466a      	mov	r2, sp
 80044be:	f000 f853 	bl	8004568 <_fstat_r>
 80044c2:	2800      	cmp	r0, #0
 80044c4:	dbed      	blt.n	80044a2 <__swhatbuf_r+0x12>
 80044c6:	23f0      	movs	r3, #240	@ 0xf0
 80044c8:	9901      	ldr	r1, [sp, #4]
 80044ca:	021b      	lsls	r3, r3, #8
 80044cc:	4019      	ands	r1, r3
 80044ce:	4b04      	ldr	r3, [pc, #16]	@ (80044e0 <__swhatbuf_r+0x50>)
 80044d0:	18c9      	adds	r1, r1, r3
 80044d2:	424b      	negs	r3, r1
 80044d4:	4159      	adcs	r1, r3
 80044d6:	e7ea      	b.n	80044ae <__swhatbuf_r+0x1e>
 80044d8:	2100      	movs	r1, #0
 80044da:	2340      	movs	r3, #64	@ 0x40
 80044dc:	e7e9      	b.n	80044b2 <__swhatbuf_r+0x22>
 80044de:	46c0      	nop			@ (mov r8, r8)
 80044e0:	ffffe000 	.word	0xffffe000

080044e4 <__smakebuf_r>:
 80044e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80044e6:	2602      	movs	r6, #2
 80044e8:	898b      	ldrh	r3, [r1, #12]
 80044ea:	0005      	movs	r5, r0
 80044ec:	000c      	movs	r4, r1
 80044ee:	b085      	sub	sp, #20
 80044f0:	4233      	tst	r3, r6
 80044f2:	d007      	beq.n	8004504 <__smakebuf_r+0x20>
 80044f4:	0023      	movs	r3, r4
 80044f6:	3347      	adds	r3, #71	@ 0x47
 80044f8:	6023      	str	r3, [r4, #0]
 80044fa:	6123      	str	r3, [r4, #16]
 80044fc:	2301      	movs	r3, #1
 80044fe:	6163      	str	r3, [r4, #20]
 8004500:	b005      	add	sp, #20
 8004502:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004504:	ab03      	add	r3, sp, #12
 8004506:	aa02      	add	r2, sp, #8
 8004508:	f7ff ffc2 	bl	8004490 <__swhatbuf_r>
 800450c:	9f02      	ldr	r7, [sp, #8]
 800450e:	9001      	str	r0, [sp, #4]
 8004510:	0039      	movs	r1, r7
 8004512:	0028      	movs	r0, r5
 8004514:	f7ff fa9a 	bl	8003a4c <_malloc_r>
 8004518:	2800      	cmp	r0, #0
 800451a:	d108      	bne.n	800452e <__smakebuf_r+0x4a>
 800451c:	220c      	movs	r2, #12
 800451e:	5ea3      	ldrsh	r3, [r4, r2]
 8004520:	059a      	lsls	r2, r3, #22
 8004522:	d4ed      	bmi.n	8004500 <__smakebuf_r+0x1c>
 8004524:	2203      	movs	r2, #3
 8004526:	4393      	bics	r3, r2
 8004528:	431e      	orrs	r6, r3
 800452a:	81a6      	strh	r6, [r4, #12]
 800452c:	e7e2      	b.n	80044f4 <__smakebuf_r+0x10>
 800452e:	2380      	movs	r3, #128	@ 0x80
 8004530:	89a2      	ldrh	r2, [r4, #12]
 8004532:	6020      	str	r0, [r4, #0]
 8004534:	4313      	orrs	r3, r2
 8004536:	81a3      	strh	r3, [r4, #12]
 8004538:	9b03      	ldr	r3, [sp, #12]
 800453a:	6120      	str	r0, [r4, #16]
 800453c:	6167      	str	r7, [r4, #20]
 800453e:	2b00      	cmp	r3, #0
 8004540:	d00c      	beq.n	800455c <__smakebuf_r+0x78>
 8004542:	0028      	movs	r0, r5
 8004544:	230e      	movs	r3, #14
 8004546:	5ee1      	ldrsh	r1, [r4, r3]
 8004548:	f000 f820 	bl	800458c <_isatty_r>
 800454c:	2800      	cmp	r0, #0
 800454e:	d005      	beq.n	800455c <__smakebuf_r+0x78>
 8004550:	2303      	movs	r3, #3
 8004552:	89a2      	ldrh	r2, [r4, #12]
 8004554:	439a      	bics	r2, r3
 8004556:	3b02      	subs	r3, #2
 8004558:	4313      	orrs	r3, r2
 800455a:	81a3      	strh	r3, [r4, #12]
 800455c:	89a3      	ldrh	r3, [r4, #12]
 800455e:	9a01      	ldr	r2, [sp, #4]
 8004560:	4313      	orrs	r3, r2
 8004562:	81a3      	strh	r3, [r4, #12]
 8004564:	e7cc      	b.n	8004500 <__smakebuf_r+0x1c>
	...

08004568 <_fstat_r>:
 8004568:	2300      	movs	r3, #0
 800456a:	b570      	push	{r4, r5, r6, lr}
 800456c:	4d06      	ldr	r5, [pc, #24]	@ (8004588 <_fstat_r+0x20>)
 800456e:	0004      	movs	r4, r0
 8004570:	0008      	movs	r0, r1
 8004572:	0011      	movs	r1, r2
 8004574:	602b      	str	r3, [r5, #0]
 8004576:	f7fc fb2b 	bl	8000bd0 <_fstat>
 800457a:	1c43      	adds	r3, r0, #1
 800457c:	d103      	bne.n	8004586 <_fstat_r+0x1e>
 800457e:	682b      	ldr	r3, [r5, #0]
 8004580:	2b00      	cmp	r3, #0
 8004582:	d000      	beq.n	8004586 <_fstat_r+0x1e>
 8004584:	6023      	str	r3, [r4, #0]
 8004586:	bd70      	pop	{r4, r5, r6, pc}
 8004588:	200006b4 	.word	0x200006b4

0800458c <_isatty_r>:
 800458c:	2300      	movs	r3, #0
 800458e:	b570      	push	{r4, r5, r6, lr}
 8004590:	4d06      	ldr	r5, [pc, #24]	@ (80045ac <_isatty_r+0x20>)
 8004592:	0004      	movs	r4, r0
 8004594:	0008      	movs	r0, r1
 8004596:	602b      	str	r3, [r5, #0]
 8004598:	f7fc fb28 	bl	8000bec <_isatty>
 800459c:	1c43      	adds	r3, r0, #1
 800459e:	d103      	bne.n	80045a8 <_isatty_r+0x1c>
 80045a0:	682b      	ldr	r3, [r5, #0]
 80045a2:	2b00      	cmp	r3, #0
 80045a4:	d000      	beq.n	80045a8 <_isatty_r+0x1c>
 80045a6:	6023      	str	r3, [r4, #0]
 80045a8:	bd70      	pop	{r4, r5, r6, pc}
 80045aa:	46c0      	nop			@ (mov r8, r8)
 80045ac:	200006b4 	.word	0x200006b4

080045b0 <_init>:
 80045b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045b2:	46c0      	nop			@ (mov r8, r8)
 80045b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80045b6:	bc08      	pop	{r3}
 80045b8:	469e      	mov	lr, r3
 80045ba:	4770      	bx	lr

080045bc <_fini>:
 80045bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045be:	46c0      	nop			@ (mov r8, r8)
 80045c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80045c2:	bc08      	pop	{r3}
 80045c4:	469e      	mov	lr, r3
 80045c6:	4770      	bx	lr
